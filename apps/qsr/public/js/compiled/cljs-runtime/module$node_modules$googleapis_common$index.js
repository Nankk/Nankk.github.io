shadow$provide.module$node_modules$googleapis_common$index=function(global,require,module,exports){function isReadableStream(obj){return obj instanceof stream.Readable&&"function"===typeof obj._read}function getMissingParams(params,required){var missing=[];required.forEach(function(param){void 0===params[param]&&missing.push(param)});return 0<missing.length?missing:null}function createAPIRequestAsync(parameters){var params$jscomp$0,options,topOptions,media,resource,authClient,defaultMime,headers,
missingParams,multipart,boundary,finale,rStream,pStream,isStream,$jscomp$iter$4,$jscomp$key$part,part,preamble,directives,userAgent,mergedOptions;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){params$jscomp$0=parameters.params;options=Object.assign({},parameters.options);topOptions=parameters.context.google&&parameters.context.google._options&&parameters.context.google._options.params?parameters.context.google._options.params:{};params$jscomp$0=Object.assign({},
topOptions,parameters.context._options.params,params$jscomp$0);media=params$jscomp$0.media||{};resource=params$jscomp$0.requestBody?params$jscomp$0.requestBody:params$jscomp$0.resource;!params$jscomp$0.requestBody&&params$jscomp$0.resource&&delete params$jscomp$0.resource;delete params$jscomp$0.requestBody;authClient=params$jscomp$0.auth||parameters.context._options.auth||(parameters.context.google?parameters.context.google._options.auth:null);defaultMime="string"===typeof media.body?"text/plain":
"application/octet-stream";delete params$jscomp$0.media;delete params$jscomp$0.auth;headers=params$jscomp$0.headers||{};populateAPIHeader(headers);delete params$jscomp$0.headers;Object.keys(params$jscomp$0).forEach(function(key){if("_"===key.slice(-1)){var newKey=key.slice(0,-1);params$jscomp$0[newKey]=params$jscomp$0[key];delete params$jscomp$0[key]}});if(missingParams=getMissingParams(params$jscomp$0,parameters.requiredParams))throw Error("Missing required parameters: "+missingParams.join(", "));
options.url&&(options.url=urlTemplate.parse(options.url).expand(params$jscomp$0));parameters.mediaUrl&&(parameters.mediaUrl=urlTemplate.parse(parameters.mediaUrl).expand(params$jscomp$0));options.paramsSerializer=function(params){return qs.stringify(params,{arrayFormat:"repeat"})};parameters.pathParams.forEach(function(param){delete params$jscomp$0[param];parameters.context&&parameters.context._options&&parameters.context._options.params&&delete parameters.context._options.params[param]});"string"===
typeof authClient&&(params$jscomp$0.key=params$jscomp$0.key||authClient,authClient=void 0);if(parameters.mediaUrl&&media.body)if(options.url=parameters.mediaUrl,resource){params$jscomp$0.uploadType="multipart";multipart=[{"Content-Type":"application/json",body:JSON.stringify(resource)},{"Content-Type":media.mimeType||resource&&resource.mimeType||defaultMime,body:media.body}];boundary=uuid.v4();finale="--"+boundary+"--";rStream=new stream.PassThrough({flush:function(callback){this.push("\r\n");this.push(finale);
callback()}});pStream=new ProgressStream;isStream=isReadableStream(multipart[1].body);headers["Content-Type"]="multipart/related; boundary\x3d"+boundary;$jscomp$iter$4=$jscomp.makeIterator(multipart);for($jscomp$key$part=$jscomp$iter$4.next();!$jscomp$key$part.done;$jscomp$key$part=$jscomp$iter$4.next())part=$jscomp$key$part.value,preamble="--"+boundary+"\r\nContent-Type: "+part["Content-Type"]+"\r\n\r\n",rStream.push(preamble),"string"===typeof part.body?(rStream.push(part.body),rStream.push("\r\n")):
(pStream.on("progress",function(bytesRead){if(options.onUploadProgress)options.onUploadProgress({bytesRead:bytesRead})}),part.body.pipe(pStream).pipe(rStream));isStream||(rStream.push(finale),rStream.push(null));options.data=rStream}else params$jscomp$0.uploadType="media",Object.assign(headers,{"Content-Type":media.mimeType||defaultMime}),options.data=media.body;else options.data=resource||void 0;options.headers=extend(!0,options.headers||{},headers);options.params=params$jscomp$0;"undefined"===typeof window&&
(options.headers["Accept-Encoding"]="gzip",directives=options.userAgentDirectives||[],directives.push({product:"google-api-nodejs-client",version:pkg.version,comment:"gzip"}),userAgent=directives.map(function(d){var line=d.product+"/"+d.version;d.comment&&(line+=" ("+d.comment+")");return line}).join(" "),options.headers["User-Agent"]=userAgent);options.validateStatus||(options.validateStatus=function(status){return 200<=status&&300>status||304===status});options.retry=void 0===options.retry?!0:options.retry;
mergedOptions=extend(!0,{},parameters.context.google?parameters.context.google._options:{},parameters.context._options,options);delete mergedOptions.auth;return authClient&&"object"===typeof authClient?$jscomp$generator$context.return(authClient.request(mergedOptions)):$jscomp$generator$context.return((new google_auth_library_1.DefaultTransporter).request(mergedOptions))})}function populateAPIHeader(headers){if("undefined"===typeof window){var nodeVersion=process.version.replace(/^v/,"");headers["x-goog-api-client"]=
"gdcl/"+pkg.version+" gl-node/"+nodeVersion}}var process=require("module$node_modules$process$browser");"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var google_auth_library_1=require("module$node_modules$google_auth_library$build$src$index"),qs=require("module$node_modules$qs$lib$index"),stream=require("module$node_modules$stream_browserify$index"),urlTemplate=require("module$node_modules$url_template$lib$url_template"),uuid=require("module$node_modules$uuid$index"),extend=
require("module$node_modules$extend$index"),pkg=require("module$package_json");exports.createAPIRequest=function(parameters,callback){if(callback)createAPIRequestAsync(parameters).then(function(r){return callback(null,r)},callback);else return createAPIRequestAsync(parameters)};var ProgressStream=function(){var $jscomp$super$this=stream.Transform.apply(this,arguments)||this;$jscomp$super$this.bytesRead=0;return $jscomp$super$this};$jscomp.inherits(ProgressStream,stream.Transform);ProgressStream.prototype._transform=
function(chunk,encoding,callback){this.bytesRead+=chunk.length;this.emit("progress",this.bytesRead);this.push(chunk);callback()}}
//# sourceMappingURL=module$node_modules$googleapis_common$index.js.map
