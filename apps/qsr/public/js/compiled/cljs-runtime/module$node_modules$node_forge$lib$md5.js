shadow$provide.module$node_modules$node_forge$lib$md5=function(global,require,module,exports){function _init(){_padding=String.fromCharCode(128);_padding+=forge.util.fillString(String.fromCharCode(0),64);_g=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,6,11,0,5,10,15,4,9,14,3,8,13,2,7,12,5,8,11,14,1,4,7,10,13,0,3,6,9,12,15,2,0,7,14,5,12,3,10,1,8,15,6,13,4,11,2,9];_r=[7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,
21,6,10,15,21,6,10,15,21,6,10,15,21];_k=Array(64);for(var i=0;64>i;++i)_k[i]=Math.floor(4294967296*Math.abs(Math.sin(i+1)));_initialized=!0}function _update(s,w,bytes){for(var t,a,b,c,d,r,i,len=bytes.length();64<=len;){a=s.h0;b=s.h1;c=s.h2;d=s.h3;for(i=0;16>i;++i)w[i]=bytes.getInt32Le(),t=d^b&(c^d),t=a+t+_k[i]+w[i],r=_r[i],a=d,d=c,c=b,b+=t<<r|t>>>32-r;for(;32>i;++i)t=c^d&(b^c),t=a+t+_k[i]+w[_g[i]],r=_r[i],a=d,d=c,c=b,b+=t<<r|t>>>32-r;for(;48>i;++i)t=b^c^d,t=a+t+_k[i]+w[_g[i]],r=_r[i],a=d,d=c,c=b,
b+=t<<r|t>>>32-r;for(;64>i;++i)t=c^(b|~d),t=a+t+_k[i]+w[_g[i]],r=_r[i],a=d,d=c,c=b,b+=t<<r|t>>>32-r;s.h0=s.h0+a|0;s.h1=s.h1+b|0;s.h2=s.h2+c|0;s.h3=s.h3+d|0;len-=64}}var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$md");require("module$node_modules$node_forge$lib$util");global=module.exports=forge.md5=forge.md5||{};forge.md.md5=forge.md.algorithms.md5=global;global.create=function(){_initialized||_init();var _state=null,_input=forge.util.createBuffer(),
_w=Array(16),md={algorithm:"md5",blockLength:64,digestLength:16,messageLength:0,fullMessageLength:null,messageLengthSize:8,start:function(){md.messageLength=0;md.fullMessageLength=md.messageLength64=[];for(var int32s=md.messageLengthSize/4,i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_state={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878};return md}};md.start();md.update=function(msg,encoding){"utf8"===encoding&&(msg=forge.util.encodeUtf8(msg));encoding=msg.length;
md.messageLength+=encoding;encoding=[encoding/4294967296>>>0,encoding>>>0];for(var i=md.fullMessageLength.length-1;0<=i;--i)md.fullMessageLength[i]+=encoding[1],encoding[1]=encoding[0]+(md.fullMessageLength[i]/4294967296>>>0),md.fullMessageLength[i]>>>=0,encoding[0]=encoding[1]/4294967296>>>0;_input.putBytes(msg);_update(_state,_w,_input);(2048<_input.read||0===_input.length())&&_input.compact();return md};md.digest=function(){var finalBlock=forge.util.createBuffer();finalBlock.putBytes(_input.bytes());
finalBlock.putBytes(_padding.substr(0,md.blockLength-(md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize&md.blockLength-1)));for(var bits,carry=0,i=md.fullMessageLength.length-1;0<=i;--i)bits=8*md.fullMessageLength[i]+carry,carry=bits/4294967296>>>0,finalBlock.putInt32Le(bits>>>0);bits={h0:_state.h0,h1:_state.h1,h2:_state.h2,h3:_state.h3};_update(bits,_w,finalBlock);finalBlock=forge.util.createBuffer();finalBlock.putInt32Le(bits.h0);finalBlock.putInt32Le(bits.h1);finalBlock.putInt32Le(bits.h2);
finalBlock.putInt32Le(bits.h3);return finalBlock};return md};var _padding=null,_g=null,_r=null,_k=null,_initialized=!1}
//# sourceMappingURL=module$node_modules$node_forge$lib$md5.js.map
