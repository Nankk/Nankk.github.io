{
"version":3,
"file":"module$node_modules$google_auth_library$build$src$auth$refreshclient.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/google-auth-library/build/src/auth/refreshclient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_auth_library$build$src$auth$refreshclient\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n        });\n        this._refreshToken = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(r => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","oauth2client_1","UserRefreshClient","constructor","optionsOrClientId","clientSecret","refreshToken","eagerRefreshThresholdMillis","opts","clientId","_refreshToken","OAuth2Client","refreshTokenNoCache","fromJSON","json","Error","type","client_id","client_secret","refresh_token","_clientId","_clientSecret","credentials","fromStream","inputStream","callback","fromStreamAsync","then","r","Promise","resolve","reject","s","setEncoding","on","chunk","data","JSON","parse","err"]
}
