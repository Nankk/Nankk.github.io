{
"version":3,
"file":"module$node_modules$node_fetch$lib$body.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBpGC,QAASA,KAAI,CAACC,IAAD,CAAOC,IAAP,CAAa,CAEzBA,IAAA,CAAOA,IAAP,EAAe,EAEf,KAAAD,KAAA,CAAYA,IACZ,KAAAE,SAAA,CAAgB,CAAA,CAChB,KAAAC,KAAA,CAAYF,IAAAE,KAAZ,EAAyB,CACzB,KAAAC,QAAA,CAAeH,IAAAG,QAAf,EAA+B,CAC/B,KAAAC,KAAA,CAAY,EACZ,KAAAC,OAAA,CAAc,CAAA,CATW,CAtB1B,IAAIC,OAASX,OAAA,CAAQ,kCAAR,CAAAW,OAAb,CAQIC,QAAUZ,OAAA,CAAQ,2CAAR,CAAAY,QARd,CASIC,WAAab,OAAA,CAAQ,qCAAR,CATjB,CAUIc,YAAcd,OAAA,CAAQ,6CAAR,CAAAc,YAVlB;AAWIC,WAAaf,OAAA,CAAQ,gDAAR,CAEjBC,OAAAC,QAAA,CAAiBC,IA2BjBA,KAAAa,UAAAC,KAAA,CAAsBC,QAAQ,EAAG,CAEhC,IAAIC,KAAO,IAEX,OAAO,KAAAC,QAAA,EAAAC,KAAA,CAAoB,QAAQ,CAACC,MAAD,CAAS,CAC3C,GAAI,CACH,MAAOC,KAAAC,MAAA,CAAWF,MAAAG,SAAA,EAAX,CADJ,CAEF,MAAOC,GAAP,CAAY,CACb,MAAOvB,KAAAwB,QAAAC,OAAA,CAAoB,IAAIb,UAAJ,CAAe,gCAAf,CAAkDI,IAAAU,IAAlD,CAA6D,WAA7D,CAA2EH,GAAAI,QAA3E,CAAwF,cAAxF,CAApB,CADM,CAH6B,CAArC,CAJyB,CAmBjC3B,KAAAa,UAAAe,KAAA,CAAsBC,QAAQ,EAAG,CAEhC,MAAO,KAAAZ,QAAA,EAAAC,KAAA,CAAoB,QAAQ,CAACC,MAAD,CAAS,CAC3C,MAAOA,OAAAG,SAAA,EADoC,CAArC,CAFyB,CAajCtB,KAAAa,UAAAM,OAAA,CAAwBW,QAAQ,EAAG,CAElC,MAAO,KAAAb,QAAA,EAF2B,CAWnCjB;IAAAa,UAAAI,QAAA,CAAyBc,QAAQ,EAAG,CAEnC,IAAIf,KAAO,IAEX,IAAI,IAAAb,SAAJ,CACC,MAAOH,KAAAwB,QAAAC,OAAA,CAAwBO,KAAJ,CAAU,yBAAV,CAAsC,IAAAN,IAAtC,CAApB,CAGR,KAAAvB,SAAA,CAAgB,CAAA,CAChB,KAAA8B,OAAA,CAAc,CACd,KAAA1B,OAAA,CAAc,CAAA,CACd,KAAAD,KAAA,CAAY,EAEZ,OAAO,KAAIN,IAAAwB,QAAJ,CAAiB,QAAQ,CAACU,OAAD,CAAUT,MAAV,CAAkB,CACjD,IAAIU,UAGJ,IAAyB,QAAzB,GAAI,MAAOnB,KAAAf,KAAX,CAGC,MAFAe,KAAAiB,OAEO,CAFOjB,IAAAf,KAAAmC,OAEP,CADPpB,IAAAV,KACO,CADK,CAAC,IAAIE,MAAJ,CAAWQ,IAAAf,KAAX,CAAD,CACL,CAAAiC,OAAA,CAAQlB,IAAAqB,SAAA,EAAR,CAIR,IAAIrB,IAAAf,KAAJ,WAAyBO,OAAzB,CAGC,MAFAQ,KAAAiB,OAEO,CAFOjB,IAAAf,KAAAmC,OAEP,CADPpB,IAAAV,KACO,CADK,CAACU,IAAAf,KAAD,CACL,CAAAiC,OAAA,CAAQlB,IAAAqB,SAAA,EAAR,CAIJrB,KAAAX,QAAJ;CACC8B,UADD,CACcG,UAAA,CAAW,QAAQ,EAAG,CAClCtB,IAAAT,OAAA,CAAc,CAAA,CACdkB,OAAA,CAAO,IAAIb,UAAJ,CAAe,sBAAf,CAAwCI,IAAAU,IAAxC,CAAmD,eAAnD,CAAqEV,IAAAX,QAArE,CAAmF,cAAnF,CAAP,CAFkC,CAAtB,CAGVW,IAAAX,QAHU,CADd,CAQAW,KAAAf,KAAAsC,GAAA,CAAa,OAAb,CAAsB,QAAQ,CAAChB,GAAD,CAAM,CACnCE,MAAA,CAAO,IAAIb,UAAJ,CAAe,4BAAf,CAA8CI,IAAAU,IAA9C,CAAyD,WAAzD,CAAuEH,GAAAI,QAAvE,CAAoF,QAApF,CAA8FJ,GAA9F,CAAP,CADmC,CAApC,CAKAP,KAAAf,KAAAsC,GAAA,CAAa,MAAb,CAAqB,QAAQ,CAACC,KAAD,CAAQ,CAChCxB,IAAAT,OAAJ,EAA6B,IAA7B,GAAmBiC,KAAnB,GAIIxB,IAAAZ,KAAJ,EAAiBY,IAAAiB,OAAjB,CAA+BO,KAAAJ,OAA/B,CAA8CpB,IAAAZ,KAA9C,EACCY,IAAAT,OACA,CADc,CAAA,CACd,CAAAkB,MAAA,CAAO,IAAIb,UAAJ,CAAe,kBAAf,CAAoCI,IAAAU,IAApC,CAA+C,eAA/C,CAAiEV,IAAAZ,KAAjE;AAA4E,UAA5E,CAAP,CAFD,GAMAY,IAAAiB,OACA,EADeO,KAAAJ,OACf,CAAApB,IAAAV,KAAAmC,KAAA,CAAeD,KAAf,CAPA,CAJA,CADoC,CAArC,CAeAxB,KAAAf,KAAAsC,GAAA,CAAa,KAAb,CAAoB,QAAQ,EAAG,CAC1BvB,IAAAT,OAAJ,GAIAmC,YAAA,CAAaP,UAAb,CACA,CAAAD,OAAA,CAAQlB,IAAAqB,SAAA,EAAR,CALA,CAD8B,CAA/B,CA9CiD,CAA3C,CAb4B,CA8EpCrC,KAAAa,UAAAwB,SAAA,CAA0BM,QAAQ,CAACC,QAAD,CAAW,CAE5CA,QAAA,CAAWA,QAAX,EAAuB,OAEvB,KAAIC,GAAK,IAAAC,QAAAC,IAAA,CAAiB,cAAjB,CAAT,CACIC,QAAU,OAId,IAAIH,EAAJ,CAAQ,CAEP,GAAI,CAAC,qCAAAI,KAAA,CAA2CJ,EAA3C,CAAL,CACC,MAAOrC,OAAA0C,OAAA,CAAc,IAAA5C,KAAd,CAGR,KAAA6C,IAAM,kBAAAC,KAAA,CAAwBP,EAAxB,CANC,CAUR,GAAI,CAACM,GAAL,EAA+B,CAA/B,CAAY,IAAA7C,KAAA8B,OAAZ,CAAkC,CACjC,IAASiB,EAAT,CAAa,CAAb,CAAgBA,EAAhB,CAAoB,IAAA/C,KAAA8B,OAApB,EAEK,EADJkB,GACI,EADG,IAAAhD,KAAA,CAAU+C,EAAV,CAAA/B,SAAA,EACH;AAAa,IAAb,CAAAgC,GAAAlB,OAAA,CAFL,CAAsCiB,EAAA,EAAtC,EAMA,IAAAC,IAAMA,GAAAC,OAAA,CAAW,CAAX,CAAc,IAAd,CAP2B,CAW9B,CAACJ,GAAL,EAAYG,GAAZ,GACCH,GADD,CACO,gCAAAC,KAAA,CAAsCE,GAAtC,CADP,CAKI,EAACH,GAAL,EAAYG,GAAZ,GACCH,GADD,CACO,wEAAAC,KAAA,CAA8EE,GAA9E,CADP,IAIEH,GAJF,CAIQ,eAAAC,KAAA,CAAqBD,GAAAK,IAAA,EAArB,CAJR,CASI,EAACL,GAAL,EAAYG,GAAZ,GACCH,GADD,CACO,kCAAAC,KAAA,CAAwCE,GAAxC,CADP,CAKIH,IAAJ,GACCH,OAII,CAJMG,GAAAK,IAAA,EAIN,CAAY,QAAZ,GAAAR,OAAA,EAAoC,KAApC,GAAwBA,OAL7B,IAMEA,OANF,CAMY,SANZ,CAWA,OAAOvC,QAAA,CACND,MAAA0C,OAAA,CAAc,IAAA5C,KAAd,CADM,CAEJsC,QAFI,CAGJI,OAHI,CA5DqC,CA0E7ChD,KAAAa,UAAA4C,OAAA,CAAwBC,QAAQ,CAACC,QAAD,CAAW,CAAA,IAEtC1D;AAAO0D,QAAA1D,KAGX,IAAI0D,QAAAxD,SAAJ,CACC,KAAU6B,MAAJ,CAAU,oCAAV,CAAN,CAKD,GAAItB,UAAA,CAAWT,IAAX,CAAJ,EAAoD,UAApD,GAAwB,MAAOA,KAAA2D,YAA/B,CAAgE,CAE/D,IAAAC,GAAK,IAAIlD,WACT,KAAAmD,GAAK,IAAInD,WACTV,KAAA8D,KAAA,CAAUF,EAAV,CACA5D,KAAA8D,KAAA,CAAUD,EAAV,CAEAH,SAAA1D,KAAA,CAAgB4D,EAChB5D,KAAA,CAAO6D,EARwD,CAWhE,MAAO7D,KAtBmC,CA0B3CD,KAAAwB,QAAA,CAAe5B,MAAA4B,QAtQqF;",
"sources":["node_modules/node-fetch/lib/body.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$node_fetch$lib$body\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\n/**\n * body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nvar convert = require('encoding').convert;\nvar bodyStream = require('is-stream');\nvar PassThrough = require('stream').PassThrough;\nvar FetchError = require('./fetch-error');\n\nmodule.exports = Body;\n\n/**\n * Body class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body, opts) {\n\n\topts = opts || {};\n\n\tthis.body = body;\n\tthis.bodyUsed = false;\n\tthis.size = opts.size || 0;\n\tthis.timeout = opts.timeout || 0;\n\tthis._raw = [];\n\tthis._abort = false;\n\n}\n\n/**\n * Decode response as json\n *\n * @return  Promise\n */\nBody.prototype.json = function() {\n\n\tvar self = this;\n\n\treturn this._decode().then(function(buffer) {\n\t\ttry {\n\t\t\treturn JSON.parse(buffer.toString());\n\t\t} catch (err) {\n\t\t\treturn Body.Promise.reject(new FetchError('invalid json response body at ' + self.url + ' reason: ' + err.message, 'invalid-json'));\n\t\t}\n\t});\n\n};\n\n/**\n * Decode response as text\n *\n * @return  Promise\n */\nBody.prototype.text = function() {\n\n\treturn this._decode().then(function(buffer) {\n\t\treturn buffer.toString();\n\t});\n\n};\n\n/**\n * Decode response as buffer (non-spec api)\n *\n * @return  Promise\n */\nBody.prototype.buffer = function() {\n\n\treturn this._decode();\n\n};\n\n/**\n * Decode buffers into utf-8 string\n *\n * @return  Promise\n */\nBody.prototype._decode = function() {\n\n\tvar self = this;\n\n\tif (this.bodyUsed) {\n\t\treturn Body.Promise.reject(new Error('body used already for: ' + this.url));\n\t}\n\n\tthis.bodyUsed = true;\n\tthis._bytes = 0;\n\tthis._abort = false;\n\tthis._raw = [];\n\n\treturn new Body.Promise(function(resolve, reject) {\n\t\tvar resTimeout;\n\n\t\t// body is string\n\t\tif (typeof self.body === 'string') {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [new Buffer(self.body)];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// body is buffer\n\t\tif (self.body instanceof Buffer) {\n\t\t\tself._bytes = self.body.length;\n\t\t\tself._raw = [self.body];\n\t\t\treturn resolve(self._convert());\n\t\t}\n\n\t\t// allow timeout on slow response body\n\t\tif (self.timeout) {\n\t\t\tresTimeout = setTimeout(function() {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));\n\t\t\t}, self.timeout);\n\t\t}\n\n\t\t// handle stream error, such as incorrect content-encoding\n\t\tself.body.on('error', function(err) {\n\t\t\treject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\t// body is stream\n\t\tself.body.on('data', function(chunk) {\n\t\t\tif (self._abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (self.size && self._bytes + chunk.length > self.size) {\n\t\t\t\tself._abort = true;\n\t\t\t\treject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself._bytes += chunk.length;\n\t\t\tself._raw.push(chunk);\n\t\t});\n\n\t\tself.body.on('end', function() {\n\t\t\tif (self._abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\t\t\tresolve(self._convert());\n\t\t});\n\t});\n\n};\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   String  encoding  Target encoding\n * @return  String\n */\nBody.prototype._convert = function(encoding) {\n\n\tencoding = encoding || 'utf-8';\n\n\tvar ct = this.headers.get('content-type');\n\tvar charset = 'utf-8';\n\tvar res, str;\n\n\t// header\n\tif (ct) {\n\t\t// skip encoding detection altogether if not html/xml/plain text\n\t\tif (!/text\\/html|text\\/plain|\\+xml|\\/xml/i.test(ct)) {\n\t\t\treturn Buffer.concat(this._raw);\n\t\t}\n\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tif (!res && this._raw.length > 0) {\n\t\tfor (var i = 0; i < this._raw.length; i++) {\n\t\t\tstr += this._raw[i].toString()\n\t\t\tif (str.length > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstr = str.substr(0, 1024);\n\t}\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(\n\t\tBuffer.concat(this._raw)\n\t\t, encoding\n\t\t, charset\n\t);\n\n};\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nBody.prototype._clone = function(instance) {\n\tvar p1, p2;\n\tvar body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (bodyStream(body) && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance.body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Body","body","opts","bodyUsed","size","timeout","_raw","_abort","Buffer","convert","bodyStream","PassThrough","FetchError","prototype","json","Body.prototype.json","self","_decode","then","buffer","JSON","parse","toString","err","Promise","reject","url","message","text","Body.prototype.text","Body.prototype.buffer","Body.prototype._decode","Error","_bytes","resolve","resTimeout","length","_convert","setTimeout","on","chunk","push","clearTimeout","Body.prototype._convert","encoding","ct","headers","get","charset","test","concat","res","exec","i","str","substr","pop","_clone","Body.prototype._clone","instance","getBoundary","p1","p2","pipe"]
}
