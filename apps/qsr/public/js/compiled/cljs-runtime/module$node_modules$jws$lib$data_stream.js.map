{
"version":3,
"file":"module$node_modules$jws$lib$data_stream.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAOpGC,QAASA,WAAU,CAACC,IAAD,CAAO,CACxB,IAAAC,OAAA,CAAc,IAEd,KAAAC,SAAA,CADA,IAAAC,SACA,CADgB,CAAA,CAIhB,IAAI,CAACH,IAAL,CAEE,MADA,KAAAC,OACO,CADOG,MAAAC,MAAA,CAAa,CAAb,CACP,CAAA,IAIT,IAAyB,UAAzB,GAAI,MAAOL,KAAAM,KAAX,CAGE,MAFA,KAAAL,OAEO,CAFOG,MAAAC,MAAA,CAAa,CAAb,CAEP,CADPL,IAAAM,KAAA,CAAU,IAAV,CACO,CAAA,IAKT,IAAIN,IAAAO,OAAJ,EAAmC,QAAnC,GAAmB,MAAOP,KAA1B,CAQE,MAPA,KAAAC,OAOO,CAPOD,IAOP,CANP,IAAAG,SAMO,CANS,CAAA,CAMT,CALPK,OAAAC,SAAA,CAAiB,QAAS,EAAG,CAC3B,IAAAC,KAAA,CAAU,KAAV,CAAiBV,IAAjB,CACA,KAAAE,SAAA,CAAgB,CAAA,CAChB,KAAAQ,KAAA,CAAU,OAAV,CAH2B,CAAZC,KAAA,CAIV,IAJU,CAAjB,CAKO,CAAA,IAGT,MAAM,KAAIC,SAAJ,CAAc,wBAAd;AAAwC,MAAOZ,KAA/C,CAAsD,GAAtD,CAAN,CA/BwB,CAN1B,IAAIQ,QAAUZ,OAAA,CAAQ,qCAAR,CAAd,CAEIQ,OAASR,OAAA,CAAQ,uCAAR,CAAAQ,OACTS,OAAAA,CAASjB,OAAA,CAAQ,6CAAR,CACFA,QAAAkB,CAAQ,+BAARA,CAmCXC,SAAA,CAAchB,UAAd,CAA0Bc,MAA1B,CAEAd,WAAAiB,UAAAC,MAAA,CAA6BC,QAAc,CAAClB,IAAD,CAAO,CAChD,IAAAC,OAAA,CAAcG,MAAAe,OAAA,CAAc,CAAC,IAAAlB,OAAD,CAAcG,MAAAgB,KAAA,CAAYpB,IAAZ,CAAd,CAAd,CACd,KAAAU,KAAA,CAAU,MAAV,CAAkBV,IAAlB,CAFgD,CAKlDD,WAAAiB,UAAAK,IAAA,CAA2BC,QAAY,CAACtB,IAAD,CAAO,CACxCA,IAAJ,EACE,IAAAiB,MAAA,CAAWjB,IAAX,CACF,KAAAU,KAAA,CAAU,KAAV,CAAiBV,IAAjB,CACA,KAAAU,KAAA,CAAU,OAAV,CAEA,KAAAR,SAAA;AADA,IAAAC,SACA,CADgB,CAAA,CAL4B,CAS9CN,OAAAC,QAAA,CAAiBC,UAxDmF;",
"sources":["node_modules/jws/lib/data-stream.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jws$lib$data_stream\"] = function(global,require,module,exports) {\nvar process = require('process');\n/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n\n};"],
"names":["shadow$provide","global","require","module","exports","DataStream","data","buffer","readable","writable","Buffer","alloc","pipe","length","process","nextTick","emit","bind","TypeError","Stream","util","inherits","prototype","write","DataStream.prototype.write","concat","from","end","DataStream.prototype.end"]
}
