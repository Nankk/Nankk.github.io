{
"version":3,
"file":"module$node_modules$lru_cache$index.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/lru-cache/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lru_cache$index\"] = function(global,require,module,exports) {\n'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n\n};"],
"names":["shadow$provide","global","require","module","exports","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","constructor","options","max","TypeError","Infinity","lc","length","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","rforEach","fn","thisp","walker","tail","prev","forEachStep","forEach","head","next","keys","toArray","map","k","key","values","value","hit","Map","dump","isStale","v","e","now","filter","h","dumpLru","set","Date","len","has","del","get","item","node","trim","Entry","unshift","peek","pop","load","arr","l","expiresAt","prune","mL","allowStale","mA","lengthCalculator","lC","itemCount","self","doUse","unshiftNode","diff","delete","removeNode","undefined","call"]
}
