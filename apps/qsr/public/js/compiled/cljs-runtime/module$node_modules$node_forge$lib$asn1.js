shadow$provide.module$node_modules$node_forge$lib$asn1=function(global,require,module,exports){function _checkBufferLength(bytes,remaining,n){if(n>remaining){var error=Error("Too few bytes to parse DER.");error.available=bytes.length();error.remaining=remaining;error.requested=n;throw error;}}function _fromDer(bytes,remaining,depth,options){_checkBufferLength(bytes,remaining,2);var b1=bytes.getByte();remaining--;var tagClass=b1&192,type=b1&31;var start=bytes.length();var length=remaining;var b2=bytes.getByte();
length--;if(128===b2)length=void 0;else if(b2&128?(b2&=127,_checkBufferLength(bytes,length,b2),length=bytes.getInt(b2<<3)):length=b2,0>length)throw Error("Negative length: "+length);remaining-=start-bytes.length();if(void 0!==length&&length>remaining){if(options.strict)throw depth=Error("Too few bytes to read ASN.1 value."),depth.available=bytes.length(),depth.remaining=remaining,depth.requested=length,depth;length=remaining}var bitStringContents;if(b1=32===(b1&32)){var value=[];if(void 0===length)for(;;){_checkBufferLength(bytes,
remaining,2);if(bytes.bytes(2)===String.fromCharCode(0,0)){bytes.getBytes(2);remaining-=2;break}start=bytes.length();value.push(_fromDer(bytes,remaining,depth+1,options));remaining-=start-bytes.length()}else for(;0<length;)start=bytes.length(),value.push(_fromDer(bytes,length,depth+1,options)),remaining-=start-bytes.length(),length-=start-bytes.length()}void 0===value&&tagClass===asn1.Class.UNIVERSAL&&type===asn1.Type.BITSTRING&&(bitStringContents=bytes.bytes(length));if(void 0===value&&options.decodeBitStrings&&
tagClass===asn1.Class.UNIVERSAL&&type===asn1.Type.BITSTRING&&1<length){b2=bytes.read;var savedRemaining=remaining,unused=0;type===asn1.Type.BITSTRING&&(_checkBufferLength(bytes,remaining,1),unused=bytes.getByte(),remaining--);if(0===unused)try{start=bytes.length();var composed=_fromDer(bytes,remaining,depth+1,{verbose:options.verbose,strict:!0,decodeBitStrings:!0}),used=start-bytes.length();remaining-=used;type==asn1.Type.BITSTRING&&used++;var tc=composed.tagClass;used!==length||tc!==asn1.Class.UNIVERSAL&&
tc!==asn1.Class.CONTEXT_SPECIFIC||(value=[composed])}catch(ex){}void 0===value&&(bytes.read=b2,remaining=savedRemaining)}if(void 0===value){if(void 0===length){if(options.strict)throw Error("Non-constructed ASN.1 object of indefinite length.");length=remaining}if(type===asn1.Type.BMPSTRING)for(value="";0<length;length-=2)_checkBufferLength(bytes,remaining,2),value+=String.fromCharCode(bytes.getInt16()),remaining-=2;else value=bytes.getBytes(length)}return asn1.create(tagClass,type,b1,value,void 0===
bitStringContents?null:{bitStringContents:bitStringContents})}var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$util");require("module$node_modules$node_forge$lib$oids");var asn1=module.exports=forge.asn1=forge.asn1||{};asn1.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};asn1.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,
SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};asn1.create=function(tagClass,type,constructed,value,options){if(forge.util.isArray(value)){for(var tmp=[],i=0;i<value.length;++i)void 0!==value[i]&&tmp.push(value[i]);value=tmp}tagClass={tagClass:tagClass,type:type,constructed:constructed,composed:constructed||forge.util.isArray(value),value:value};options&&"bitStringContents"in options&&(tagClass.bitStringContents=options.bitStringContents,tagClass.original=asn1.copy(tagClass));
return tagClass};asn1.copy=function(obj,options){if(forge.util.isArray(obj)){var copy=[];for(var i=0;i<obj.length;++i)copy.push(asn1.copy(obj[i],options));return copy}if("string"===typeof obj)return obj;copy={tagClass:obj.tagClass,type:obj.type,constructed:obj.constructed,composed:obj.composed,value:asn1.copy(obj.value,options)};options&&!options.excludeBitStringContents&&(copy.bitStringContents=obj.bitStringContents);return copy};asn1.equals=function(obj1,obj2,options){if(forge.util.isArray(obj1)){if(!forge.util.isArray(obj2)||
obj1.length!==obj2.length)return!1;for(options=0;options<obj1.length;++options)if(!asn1.equals(obj1[options],obj2[options]))return!1;return!0}if(typeof obj1!==typeof obj2)return!1;if("string"===typeof obj1)return obj1===obj2;var equal=obj1.tagClass===obj2.tagClass&&obj1.type===obj2.type&&obj1.constructed===obj2.constructed&&obj1.composed===obj2.composed&&asn1.equals(obj1.value,obj2.value);options&&options.includeBitStringContents&&(equal=equal&&obj1.bitStringContents===obj2.bitStringContents);return equal};
asn1.getBerValueLength=function(b){var b2=b.getByte();if(128!==b2)return b2&128?b.getInt((b2&127)<<3):b2};asn1.fromDer=function(bytes,options){void 0===options&&(options={strict:!0,decodeBitStrings:!0});"boolean"===typeof options&&(options={strict:options,decodeBitStrings:!0});"strict"in options||(options.strict=!0);"decodeBitStrings"in options||(options.decodeBitStrings=!0);"string"===typeof bytes&&(bytes=forge.util.createBuffer(bytes));return _fromDer(bytes,bytes.length(),0,options)};asn1.toDer=
function(obj){var bytes=forge.util.createBuffer(),b1=obj.tagClass|obj.type,value=forge.util.createBuffer(),useBitStringContents=!1;"bitStringContents"in obj&&(useBitStringContents=!0,obj.original&&(useBitStringContents=asn1.equals(obj,obj.original)));if(useBitStringContents)value.putBytes(obj.bitStringContents);else if(obj.composed)for(obj.constructed?b1|=32:value.putByte(0),useBitStringContents=0;useBitStringContents<obj.value.length;++useBitStringContents)void 0!==obj.value[useBitStringContents]&&
value.putBuffer(asn1.toDer(obj.value[useBitStringContents]));else if(obj.type===asn1.Type.BMPSTRING)for(useBitStringContents=0;useBitStringContents<obj.value.length;++useBitStringContents)value.putInt16(obj.value.charCodeAt(useBitStringContents));else obj.type===asn1.Type.INTEGER&&1<obj.value.length&&(0===obj.value.charCodeAt(0)&&0===(obj.value.charCodeAt(1)&128)||255===obj.value.charCodeAt(0)&&128===(obj.value.charCodeAt(1)&128))?value.putBytes(obj.value.substr(1)):value.putBytes(obj.value);bytes.putByte(b1);
if(127>=value.length())bytes.putByte(value.length()&127);else{b1=value.length();obj="";do obj+=String.fromCharCode(b1&255),b1>>>=8;while(0<b1);bytes.putByte(obj.length|128);for(useBitStringContents=obj.length-1;0<=useBitStringContents;--useBitStringContents)bytes.putByte(obj.charCodeAt(useBitStringContents))}bytes.putBuffer(value);return bytes};asn1.oidToDer=function(oid){oid=oid.split(".");var bytes=forge.util.createBuffer();bytes.putByte(40*parseInt(oid[0],10)+parseInt(oid[1],10));for(var last,
valueBytes,value,b,i=2;i<oid.length;++i){last=!0;valueBytes=[];value=parseInt(oid[i],10);do b=value&127,value>>>=7,last||(b|=128),valueBytes.push(b),last=!1;while(0<value);for(last=valueBytes.length-1;0<=last;--last)bytes.putByte(valueBytes[last])}return bytes};asn1.derToOid=function(bytes){"string"===typeof bytes&&(bytes=forge.util.createBuffer(bytes));var b=bytes.getByte();var oid=Math.floor(b/40)+"."+b%40;for(var value=0;0<bytes.length();)b=bytes.getByte(),value<<=7,b&128?value+=b&127:(oid+="."+
(value+b),value=0);return oid};asn1.utcTimeToDate=function(utc){var date=new Date,year=parseInt(utc.substr(0,2),10);year=50<=year?1900+year:2E3+year;var MM=parseInt(utc.substr(2,2),10)-1,DD=parseInt(utc.substr(4,2),10),hh=parseInt(utc.substr(6,2),10),mm=parseInt(utc.substr(8,2),10),ss=0;if(11<utc.length){var c=utc.charAt(10),end=10;"+"!==c&&"-"!==c&&(ss=parseInt(utc.substr(10,2),10),end+=2)}date.setUTCFullYear(year,MM,DD);date.setUTCHours(hh,mm,ss,0);end&&(c=utc.charAt(end),"+"===c||"-"===c)&&(year=
parseInt(utc.substr(end+1,2),10),utc=parseInt(utc.substr(end+4,2),10),utc=6E4*(60*year+utc),"+"===c?date.setTime(+date-utc):date.setTime(+date+utc));return date};asn1.generalizedTimeToDate=function(gentime){var date=new Date,YYYY=parseInt(gentime.substr(0,4),10),MM=parseInt(gentime.substr(4,2),10)-1,DD=parseInt(gentime.substr(6,2),10),hh=parseInt(gentime.substr(8,2),10),mm=parseInt(gentime.substr(10,2),10),ss=parseInt(gentime.substr(12,2),10),fff=0,offset=0,isUTC=!1;"Z"===gentime.charAt(gentime.length-
1)&&(isUTC=!0);var end=gentime.length-5,c=gentime.charAt(end);if("+"===c||"-"===c)offset=parseInt(gentime.substr(end+1,2),10),end=parseInt(gentime.substr(end+4,2),10),offset=6E4*(60*offset+end),"+"===c&&(offset*=-1),isUTC=!0;"."===gentime.charAt(14)&&(fff=1E3*parseFloat(gentime.substr(14),10));isUTC?(date.setUTCFullYear(YYYY,MM,DD),date.setUTCHours(hh,mm,ss,fff),date.setTime(+date+offset)):(date.setFullYear(YYYY,MM,DD),date.setHours(hh,mm,ss,fff));return date};asn1.dateToUtcTime=function(date){if("string"===
typeof date)return date;var rval="",format=[];format.push((""+date.getUTCFullYear()).substr(2));format.push(""+(date.getUTCMonth()+1));format.push(""+date.getUTCDate());format.push(""+date.getUTCHours());format.push(""+date.getUTCMinutes());format.push(""+date.getUTCSeconds());for(date=0;date<format.length;++date)2>format[date].length&&(rval+="0"),rval+=format[date];return rval+"Z"};asn1.dateToGeneralizedTime=function(date){if("string"===typeof date)return date;var rval="",format=[];format.push(""+
date.getUTCFullYear());format.push(""+(date.getUTCMonth()+1));format.push(""+date.getUTCDate());format.push(""+date.getUTCHours());format.push(""+date.getUTCMinutes());format.push(""+date.getUTCSeconds());for(date=0;date<format.length;++date)2>format[date].length&&(rval+="0"),rval+=format[date];return rval+"Z"};asn1.integerToDer=function(x){var rval=forge.util.createBuffer();if(-128<=x&&128>x)return rval.putSignedInt(x,8);if(-32768<=x&&32768>x)return rval.putSignedInt(x,16);if(-8388608<=x&&8388608>
x)return rval.putSignedInt(x,24);if(-2147483648<=x&&2147483648>x)return rval.putSignedInt(x,32);rval=Error("Integer too large; max is 32-bits.");rval.integer=x;throw rval;};asn1.derToInteger=function(bytes){"string"===typeof bytes&&(bytes=forge.util.createBuffer(bytes));var n=8*bytes.length();if(32<n)throw Error("Integer too large; max is 32-bits.");return bytes.getSignedInt(n)};asn1.validate=function(obj,v,capture,errors){var rval=!1;if(obj.tagClass!==v.tagClass&&"undefined"!==typeof v.tagClass||
obj.type!==v.type&&"undefined"!==typeof v.type)errors&&(obj.tagClass!==v.tagClass&&errors.push("["+v.name+'] Expected tag class "'+v.tagClass+'", got "'+obj.tagClass+'"'),obj.type!==v.type&&errors.push("["+v.name+'] Expected type "'+v.type+'", got "'+obj.type+'"'));else if(obj.constructed===v.constructed||"undefined"===typeof v.constructed){rval=!0;if(v.value&&forge.util.isArray(v.value))for(var j=0,i=0;rval&&i<v.value.length;++i)rval=v.value[i].optional||!1,obj.value[j]&&((rval=asn1.validate(obj.value[j],
v.value[i],capture,errors))?++j:v.value[i].optional&&(rval=!0)),!rval&&errors&&errors.push("["+v.name+'] Tag class "'+v.tagClass+'", type "'+v.type+'" expected value length "'+v.value.length+'", got "'+obj.value.length+'"');if(rval&&capture&&(v.capture&&(capture[v.capture]=obj.value),v.captureAsn1&&(capture[v.captureAsn1]=obj),v.captureBitStringContents&&"bitStringContents"in obj&&(capture[v.captureBitStringContents]=obj.bitStringContents),v.captureBitStringValue&&"bitStringContents"in obj))if(2>
obj.bitStringContents.length)capture[v.captureBitStringValue]="";else{if(0!==obj.bitStringContents.charCodeAt(0))throw Error("captureBitStringValue only supported for zero unused bits");capture[v.captureBitStringValue]=obj.bitStringContents.slice(1)}}else errors&&errors.push("["+v.name+'] Expected constructed "'+v.constructed+'", got "'+obj.constructed+'"');return rval};var _nonLatinRegex=/[^\\u0000-\\u00ff]/;asn1.prettyPrint=function(obj,level,indentation){var rval="";level=level||0;indentation=
indentation||2;0<level&&(rval+="\n");for(var indent="",i=0;i<level*indentation;++i)indent+=" ";rval+=indent+"Tag: ";switch(obj.tagClass){case asn1.Class.UNIVERSAL:rval+="Universal:";break;case asn1.Class.APPLICATION:rval+="Application:";break;case asn1.Class.CONTEXT_SPECIFIC:rval+="Context-Specific:";break;case asn1.Class.PRIVATE:rval+="Private:"}if(obj.tagClass===asn1.Class.UNIVERSAL)switch(rval+=obj.type,obj.type){case asn1.Type.NONE:rval+=" (None)";break;case asn1.Type.BOOLEAN:rval+=" (Boolean)";
break;case asn1.Type.INTEGER:rval+=" (Integer)";break;case asn1.Type.BITSTRING:rval+=" (Bit string)";break;case asn1.Type.OCTETSTRING:rval+=" (Octet string)";break;case asn1.Type.NULL:rval+=" (Null)";break;case asn1.Type.OID:rval+=" (Object Identifier)";break;case asn1.Type.ODESC:rval+=" (Object Descriptor)";break;case asn1.Type.EXTERNAL:rval+=" (External or Instance of)";break;case asn1.Type.REAL:rval+=" (Real)";break;case asn1.Type.ENUMERATED:rval+=" (Enumerated)";break;case asn1.Type.EMBEDDED:rval+=
" (Embedded PDV)";break;case asn1.Type.UTF8:rval+=" (UTF8)";break;case asn1.Type.ROID:rval+=" (Relative Object Identifier)";break;case asn1.Type.SEQUENCE:rval+=" (Sequence)";break;case asn1.Type.SET:rval+=" (Set)";break;case asn1.Type.PRINTABLESTRING:rval+=" (Printable String)";break;case asn1.Type.IA5String:rval+=" (IA5String (ASCII))";break;case asn1.Type.UTCTIME:rval+=" (UTC time)";break;case asn1.Type.GENERALIZEDTIME:rval+=" (Generalized time)";break;case asn1.Type.BMPSTRING:rval+=" (BMP String)"}else rval+=
obj.type;rval=rval+"\n"+(indent+"Constructed: "+obj.constructed+"\n");if(obj.composed){var subvalues=0,sub="";for(i=0;i<obj.value.length;++i)void 0!==obj.value[i]&&(subvalues+=1,sub+=asn1.prettyPrint(obj.value[i],level+1,indentation),i+1<obj.value.length&&(sub+=","));rval+=indent+"Sub values: "+subvalues+sub}else if(rval+=indent+"Value: ",obj.type===asn1.Type.OID&&(level=asn1.derToOid(obj.value),rval+=level,forge.pki&&forge.pki.oids&&level in forge.pki.oids&&(rval+=" ("+forge.pki.oids[level]+") ")),
obj.type===asn1.Type.INTEGER)try{rval+=asn1.derToInteger(obj.value)}catch(ex){rval+="0x"+forge.util.bytesToHex(obj.value)}else obj.type===asn1.Type.BITSTRING?(rval=1<obj.value.length?rval+("0x"+forge.util.bytesToHex(obj.value.slice(1))):rval+"(none)",0<obj.value.length&&(obj=obj.value.charCodeAt(0),1==obj?rval+=" (1 unused bit shown)":1<obj&&(rval+=" ("+obj+" unused bits shown)"))):obj.type===asn1.Type.OCTETSTRING?(_nonLatinRegex.test(obj.value)||(rval+="("+obj.value+") "),rval+="0x"+forge.util.bytesToHex(obj.value)):
rval=obj.type===asn1.Type.UTF8?rval+forge.util.decodeUtf8(obj.value):obj.type===asn1.Type.PRINTABLESTRING||obj.type===asn1.Type.IA5String?rval+obj.value:_nonLatinRegex.test(obj.value)?rval+("0x"+forge.util.bytesToHex(obj.value)):0===obj.value.length?rval+"[null]":rval+obj.value;return rval}}
//# sourceMappingURL=module$node_modules$node_forge$lib$asn1.js.map
