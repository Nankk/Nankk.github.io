shadow$provide.module$node_modules$gcp_metadata$build$src$index=function(global,require,module,exports){function validate(options){Object.keys(options).forEach(function(key){switch(key){case "params":case "property":case "headers":break;case "qs":throw Error("'qs' is not a valid configuration option. Please use 'params' instead.");default:throw Error("'"+key+"' is not a valid configuration option.");}})}function metadataAccessor(type,options,noResponseRetries,fastFail){noResponseRetries=void 0===
noResponseRetries?3:noResponseRetries;fastFail=void 0===fastFail?!1:fastFail;var property,requestMethod,res,e;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress)return options=options||{},"string"===typeof options&&(options={property:options}),property="","object"===typeof options&&options.property&&(property="/"+options.property),validate(options),$jscomp$generator$context.setCatchFinallyBlocks(2),requestMethod=fastFail?
fastFailMetadataRequest:gaxios_1.request,$jscomp$generator$context.yield(requestMethod({url:exports.BASE_URL+"/"+type+property,headers:Object.assign({},exports.HEADERS,options.headers),retryConfig:{noResponseRetries:noResponseRetries},params:options.params,responseType:"text",timeout:3E3}),4);if(2!=$jscomp$generator$context.nextAddress){res=$jscomp$generator$context.yieldResult;if(res.headers[exports.HEADER_NAME.toLowerCase()]!==exports.HEADER_VALUE)throw Error("Invalid response from metadata service: incorrect "+
exports.HEADER_NAME+" header.");if(!res.data)throw Error("Invalid response from the metadata service");if("string"===typeof res.data)try{return $jscomp$generator$context.return(jsonBigint.parse(res.data))}catch(_a){}return $jscomp$generator$context.return(res.data)}e=$jscomp$generator$context.enterCatchBlock();e.response&&200!==e.response.status&&(e.message="Unsuccessful response status code. "+e.message);throw e;})}function fastFailMetadataRequest(options){var secondaryOptions;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){secondaryOptions=
Object.assign(Object.assign({},options),{url:options.url.replace(exports.BASE_URL,exports.SECONDARY_BASE_URL)});return $jscomp$generator$context.return(Promise.race([gaxios_1.request(options),gaxios_1.request(secondaryOptions)]))})}Object.defineProperty(exports,"__esModule",{value:!0});var gaxios_1=require("module$node_modules$gaxios$build$src$index"),jsonBigint=require("module$node_modules$json_bigint$index");exports.HOST_ADDRESS="http://169.254.169.254";exports.BASE_PATH="/computeMetadata/v1";exports.BASE_URL=
exports.HOST_ADDRESS+exports.BASE_PATH;exports.SECONDARY_HOST_ADDRESS="http://metadata.google.internal.";exports.SECONDARY_BASE_URL=exports.SECONDARY_HOST_ADDRESS+exports.BASE_PATH;exports.HEADER_NAME="Metadata-Flavor";exports.HEADER_VALUE="Google";global={};exports.HEADERS=Object.freeze((global[exports.HEADER_NAME]=exports.HEADER_VALUE,global));exports.instance=function(options){return metadataAccessor("instance",options)};exports.project=function(options){return metadataAccessor("project",options)};
exports.isAvailable=function(){var err;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress)return $jscomp$generator$context.setCatchFinallyBlocks(2),$jscomp$generator$context.yield(metadataAccessor("instance",void 0,0,!0),4);if(2!=$jscomp$generator$context.nextAddress)return $jscomp$generator$context.return(!0);err=$jscomp$generator$context.enterCatchBlock();if("request-timeout"===err.type||err.code&&("ENOTFOUND"===err.code||
"ENOENT"===err.code))return $jscomp$generator$context.return(!1);throw err;})}}
//# sourceMappingURL=module$node_modules$gcp_metadata$build$src$index.js.map
