shadow$provide.module$node_modules$yallist$yallist=function(global,require,module,exports){function Yallist(list){var self=this;self instanceof Yallist||(self=new Yallist);self.tail=null;self.head=null;self.length=0;if(list&&"function"===typeof list.forEach)list.forEach(function(item){self.push(item)});else if(0<arguments.length)for(var i=0,l=arguments.length;i<l;i++)self.push(arguments[i]);return self}function Node(value,prev,next,list){if(!(this instanceof Node))return new Node(value,prev,next,
list);this.list=list;this.value=value;prev?(prev.next=this,this.prev=prev):this.prev=null;next?(next.prev=this,this.next=next):this.next=null}module.exports=Yallist;Yallist.Node=Node;Yallist.create=Yallist;Yallist.prototype.removeNode=function(node){if(node.list!==this)throw Error("removing node which does not belong to this list");var next=node.next,prev=node.prev;next&&(next.prev=prev);prev&&(prev.next=next);node===this.head&&(this.head=next);node===this.tail&&(this.tail=prev);node.list.length--;
node.next=null;node.prev=null;node.list=null;return next};Yallist.prototype.unshiftNode=function(node){if(node!==this.head){node.list&&node.list.removeNode(node);var head=this.head;node.list=this;if(node.next=head)head.prev=node;this.head=node;this.tail||(this.tail=node);this.length++}};Yallist.prototype.pushNode=function(node){if(node!==this.tail){node.list&&node.list.removeNode(node);var tail=this.tail;node.list=this;if(node.prev=tail)tail.next=node;this.tail=node;this.head||(this.head=node);this.length++}};
Yallist.prototype.push=function(){for(var i=0,l=arguments.length;i<l;i++)this.tail=new Node(arguments[i],this.tail,null,this),this.head||(this.head=this.tail),this.length++;return this.length};Yallist.prototype.unshift=function(){for(var i=0,l=arguments.length;i<l;i++)this.head=new Node(arguments[i],null,this.head,this),this.tail||(this.tail=this.head),this.length++;return this.length};Yallist.prototype.pop=function(){if(this.tail){var res=this.tail.value;(this.tail=this.tail.prev)?this.tail.next=
null:this.head=null;this.length--;return res}};Yallist.prototype.shift=function(){if(this.head){var res=this.head.value;(this.head=this.head.next)?this.head.prev=null:this.tail=null;this.length--;return res}};Yallist.prototype.forEach=function(fn,thisp){thisp=thisp||this;for(var walker=this.head,i=0;null!==walker;i++)fn.call(thisp,walker.value,i,this),walker=walker.next};Yallist.prototype.forEachReverse=function(fn,thisp){thisp=thisp||this;for(var walker=this.tail,i=this.length-1;null!==walker;i--)fn.call(thisp,
walker.value,i,this),walker=walker.prev};Yallist.prototype.get=function(n){for(var i=0,walker=this.head;null!==walker&&i<n;i++)walker=walker.next;if(i===n&&null!==walker)return walker.value};Yallist.prototype.getReverse=function(n){for(var i=0,walker=this.tail;null!==walker&&i<n;i++)walker=walker.prev;if(i===n&&null!==walker)return walker.value};Yallist.prototype.map=function(fn,thisp){thisp=thisp||this;for(var res=new Yallist,walker=this.head;null!==walker;)res.push(fn.call(thisp,walker.value,this)),
walker=walker.next;return res};Yallist.prototype.mapReverse=function(fn,thisp){thisp=thisp||this;for(var res=new Yallist,walker=this.tail;null!==walker;)res.push(fn.call(thisp,walker.value,this)),walker=walker.prev;return res};Yallist.prototype.reduce=function(fn,initial){var walker=this.head;if(1<arguments.length)var acc=initial;else if(this.head)walker=this.head.next,acc=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var i=0;null!==walker;i++)acc=fn(acc,
walker.value,i),walker=walker.next;return acc};Yallist.prototype.reduceReverse=function(fn,initial){var walker=this.tail;if(1<arguments.length)var acc=initial;else if(this.tail)walker=this.tail.prev,acc=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var i=this.length-1;null!==walker;i--)acc=fn(acc,walker.value,i),walker=walker.prev;return acc};Yallist.prototype.toArray=function(){for(var arr=Array(this.length),i=0,walker=this.head;null!==walker;i++)arr[i]=
walker.value,walker=walker.next;return arr};Yallist.prototype.toArrayReverse=function(){for(var arr=Array(this.length),i=0,walker=this.tail;null!==walker;i++)arr[i]=walker.value,walker=walker.prev;return arr};Yallist.prototype.slice=function(from,to){to=to||this.length;0>to&&(to+=this.length);from=from||0;0>from&&(from+=this.length);var ret=new Yallist;if(to<from||0>to)return ret;0>from&&(from=0);to>this.length&&(to=this.length);for(var i=0,walker=this.head;null!==walker&&i<from;i++)walker=walker.next;
for(;null!==walker&&i<to;i++,walker=walker.next)ret.push(walker.value);return ret};Yallist.prototype.sliceReverse=function(from,to){to=to||this.length;0>to&&(to+=this.length);from=from||0;0>from&&(from+=this.length);var ret=new Yallist;if(to<from||0>to)return ret;0>from&&(from=0);to>this.length&&(to=this.length);for(var i=this.length,walker=this.tail;null!==walker&&i>to;i--)walker=walker.prev;for(;null!==walker&&i>from;i--,walker=walker.prev)ret.push(walker.value);return ret};Yallist.prototype.splice=
function(start,deleteCount,nodes){for(var $jscomp$restParams=[],$jscomp$restIndex=2;$jscomp$restIndex<arguments.length;++$jscomp$restIndex)$jscomp$restParams[$jscomp$restIndex-2]=arguments[$jscomp$restIndex];start>this.length&&(start=this.length-1);0>start&&(start=this.length+start);$jscomp$restIndex=0;for(var walker=this.head;null!==walker&&$jscomp$restIndex<start;$jscomp$restIndex++)walker=walker.next;var ret=[];for($jscomp$restIndex=0;walker&&$jscomp$restIndex<deleteCount;$jscomp$restIndex++)ret.push(walker.value),
walker=this.removeNode(walker);null===walker&&(walker=this.tail);walker!==this.head&&walker!==this.tail&&(walker=walker.prev);for($jscomp$restIndex=0;$jscomp$restIndex<$jscomp$restParams.length;$jscomp$restIndex++){var value=$jscomp$restParams[$jscomp$restIndex];walker=walker===this.head?new Node(value,null,walker,this):new Node(value,walker,walker.next,this);null===walker.next&&(this.tail=walker);null===walker.prev&&(this.head=walker);this.length++}return ret};Yallist.prototype.reverse=function(){for(var head=
this.head,tail=this.tail,walker=head;null!==walker;walker=walker.prev){var p=walker.prev;walker.prev=walker.next;walker.next=p}this.head=tail;this.tail=head;return this};try{require("module$node_modules$yallist$iterator")(Yallist)}catch(er){}}
//# sourceMappingURL=module$node_modules$yallist$yallist.js.map
