{
"version":3,
"file":"module$node_modules$node_fetch$lib$request.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBvGC,QAASA,QAAO,CAACC,KAAD,CAAQC,IAAR,CAAc,CAI7B,GAAMD,KAAN,WAAuBD,QAAvB,CAIO,CACN,IAAAG,IAAMF,KAAAE,IACN,KAAAC,WAAaC,SAAA,CAAUF,GAAV,CAFP,CAJP,IACCA,IAEA,CAFMF,KAEN,CADAG,UACA,CADaC,SAAA,CAAUF,GAAV,CACb,CAAAF,KAAA,CAAQ,EAOTC,KAAA,CAAOA,IAAP,EAAe,EAGf,KAAAI,OAAA,CAAcJ,IAAAI,OAAd,EAA6BL,KAAAK,OAA7B,EAA6C,KAC7C,KAAAC,SAAA,CAAgBL,IAAAK,SAAhB,EAAiCN,KAAAM,SAAjC,EAAmD,QACnD,KAAAC,QAAA,CAAe,IAAIC,OAAJ,CAAYP,IAAAM,QAAZ,EAA4BP,KAAAO,QAA5B,EAA6C,EAA7C,CACf,KAAAL,IAAA,CAAWA,GAGX,KAAAO,OAAA,CAA8BC,IAAAA,EAAhB,GAAAT,IAAAQ,OAAA,CACbR,IAAAQ,OADa,CACkBC,IAAAA,EAAjB,GAAAV,KAAAS,OAAA;AACdT,KAAAS,OADc,CACC,EAChB,KAAAE,SAAA,CAAkCD,IAAAA,EAAlB,GAAAT,IAAAU,SAAA,CACfV,IAAAU,SADe,CACoBD,IAAAA,EAAnB,GAAAV,KAAAW,SAAA,CAChBX,KAAAW,SADgB,CACC,CAAA,CAClB,KAAAC,QAAA,CAAeX,IAAAW,QAAf,EAA+BZ,KAAAY,QAA/B,EAAgD,CAChD,KAAAC,MAAA,CAAaZ,IAAAY,MAAb,EAA2Bb,KAAAa,MAE3BC,KAAAC,KAAA,CAAU,IAAV,CAAgBd,IAAAe,KAAhB,EAA6B,IAAAC,OAAA,CAAYjB,KAAZ,CAA7B,CAAiD,CAChDkB,QAASjB,IAAAiB,QAATA,EAAyBlB,KAAAkB,QAAzBA,EAA0C,CADM,CAEhDC,KAAMlB,IAAAkB,KAANA,EAAmBnB,KAAAmB,KAAnBA,EAAiC,CAFe,CAAjD,CAMA,KAAAC,SAAA,CAAgBjB,UAAAiB,SAChB,KAAAC,SAAA,CAAgBlB,UAAAkB,SAChB,KAAAC,KAAA,CAAYnB,UAAAmB,KACZ,KAAAC,KAAA,CAAYpB,UAAAoB,KACZ,KAAAC,KAAA,CAAYrB,UAAAqB,KA1CiB,CAb9B,IAAIpB,UAAYR,OAAA,CAAQ,6BAAR,CAAA6B,MAAhB;AACIjB,QAAUZ,OAAA,CAAQ,4CAAR,CADd,CAEIkB,KAAOlB,OAAA,CAAQ,yCAAR,CAEXC,OAAAC,QAAA,CAAiBC,OAsDjBA,QAAA2B,UAAA,CAAoBC,MAAAC,OAAA,CAAcd,IAAAY,UAAd,CAOpB3B,QAAA2B,UAAAG,MAAA,CAA0BC,QAAQ,EAAG,CACpC,MAAO,KAAI/B,OAAJ,CAAY,IAAZ,CAD6B,CAzEkE;",
"sources":["node_modules/node-fetch/lib/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$node_fetch$lib$request\"] = function(global,require,module,exports) {\n\n/**\n * request.js\n *\n * Request class contains server only options\n */\n\nvar parse_url = require('url').parse;\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Request;\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nfunction Request(input, init) {\n\tvar url, url_parsed;\n\n\t// normalize input\n\tif (!(input instanceof Request)) {\n\t\turl = input;\n\t\turl_parsed = parse_url(url);\n\t\tinput = {};\n\t} else {\n\t\turl = input.url;\n\t\turl_parsed = parse_url(url);\n\t}\n\n\t// normalize init\n\tinit = init || {};\n\n\t// fetch spec options\n\tthis.method = init.method || input.method || 'GET';\n\tthis.redirect = init.redirect || input.redirect || 'follow';\n\tthis.headers = new Headers(init.headers || input.headers || {});\n\tthis.url = url;\n\n\t// server only options\n\tthis.follow = init.follow !== undefined ?\n\t\tinit.follow : input.follow !== undefined ?\n\t\tinput.follow : 20;\n\tthis.compress = init.compress !== undefined ?\n\t\tinit.compress : input.compress !== undefined ?\n\t\tinput.compress : true;\n\tthis.counter = init.counter || input.counter || 0;\n\tthis.agent = init.agent || input.agent;\n\n\tBody.call(this, init.body || this._clone(input), {\n\t\ttimeout: init.timeout || input.timeout || 0,\n\t\tsize: init.size || input.size || 0\n\t});\n\n\t// server request options\n\tthis.protocol = url_parsed.protocol;\n\tthis.hostname = url_parsed.hostname;\n\tthis.port = url_parsed.port;\n\tthis.path = url_parsed.path;\n\tthis.auth = url_parsed.auth;\n}\n\nRequest.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this request\n *\n * @return  Request\n */\nRequest.prototype.clone = function() {\n\treturn new Request(this);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Request","input","init","url","url_parsed","parse_url","method","redirect","headers","Headers","follow","undefined","compress","counter","agent","Body","call","body","_clone","timeout","size","protocol","hostname","port","path","auth","parse","prototype","Object","create","clone","Request.prototype.clone"]
}
