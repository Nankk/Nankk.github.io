shadow$provide.module$node_modules$agent_base$index=function(global,require,module,exports){function Agent(callback,_opts){if(!(this instanceof Agent))return new Agent(callback,_opts);EventEmitter.call(this);this._promisifiedCallback=!1;"function"===typeof callback?this.callback=callback:callback&&(_opts=callback);this.timeout=_opts&&_opts.timeout||null;this.options=_opts}require("module$node_modules$agent_base$patch_core");global=require("module$node_modules$util$util").inherits;var promisify=require("module$node_modules$es6_promisify$dist$promisify"),
EventEmitter=require("module$node_modules$events$events").EventEmitter;module.exports=Agent;global(Agent,EventEmitter);Agent.prototype.callback=function(req,opts){throw Error('"agent-base" has no default implementation, you must subclass and override `callback()`');};Agent.prototype.addRequest=function(req,_opts){function onerror(err){req._hadError||(req.emit("error",err),req._hadError=!0)}function ontimeout(){timeout=null;timedOut=!0;var err=Error('A "socket" was not created for HTTP request before '+
timeoutMs+"ms");err.code="ETIMEOUT";onerror(err)}function callbackError(err){timedOut||(null!=timeout&&(clearTimeout(timeout),timeout=null),onerror(err))}function onsocket(socket){timedOut||(null!=timeout&&(clearTimeout(timeout),timeout=null),socket&&"function"===typeof socket.addRequest?socket.addRequest(req,opts):socket?(socket.on("free",function(){freeSocket(socket,opts)}),req.onSocket(socket)):onerror(Error("no Duplex stream was returned to agent-base for `"+req.method+" "+req.path+"`")))}_opts=
Object.assign({},_opts);null==_opts.host&&(_opts.host="localhost");null==_opts.port&&(_opts.port=_opts.secureEndpoint?443:80);var opts=Object.assign({},this.options,_opts);opts.host&&opts.path&&delete opts.path;delete opts.agent;delete opts.hostname;delete opts._defaultAgent;delete opts.defaultPort;delete opts.createConnection;req._last=!0;req.shouldKeepAlive=!1;var timeout,timedOut=!1,timeoutMs=this.timeout,freeSocket=this.freeSocket;!this._promisifiedCallback&&3<=this.callback.length&&(this.callback=
promisify(this.callback,this),this._promisifiedCallback=!0);0<timeoutMs&&(timeout=setTimeout(ontimeout,timeoutMs));try{Promise.resolve(this.callback(req,opts)).then(onsocket,callbackError)}catch(err){Promise.reject(err).catch(callbackError)}};Agent.prototype.freeSocket=function(socket,opts){socket.destroy()}}
//# sourceMappingURL=module$node_modules$agent_base$index.js.map
