shadow$provide.module$node_modules$google_auth_library$build$src$auth$envDetect=function(global,require,module,exports){function isKubernetesEngine(){return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress)return $jscomp$generator$context.setCatchFinallyBlocks(2),$jscomp$generator$context.yield(gcpMetadata.instance("attributes/cluster-name"),4);if(2!=$jscomp$generator$context.nextAddress)return $jscomp$generator$context.return(!0);
$jscomp$generator$context.enterCatchBlock();return $jscomp$generator$context.return(!1)})}function isComputeEngine(){return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){return $jscomp$generator$context.return(gcpMetadata.isAvailable())})}var process=require("module$node_modules$process$browser");"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var gcpMetadata=require("module$node_modules$gcp_metadata$build$src$index"),GCPEnv;(function(GCPEnv){GCPEnv.APP_ENGINE=
"APP_ENGINE";GCPEnv.KUBERNETES_ENGINE="KUBERNETES_ENGINE";GCPEnv.CLOUD_FUNCTIONS="CLOUD_FUNCTIONS";GCPEnv.COMPUTE_ENGINE="COMPUTE_ENGINE";GCPEnv.NONE="NONE"})(GCPEnv=exports.GCPEnv||(exports.GCPEnv={}));var env;exports.clear=function(){env=void 0};exports.getEnv=function(){return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:if(env){$jscomp$generator$context.jumpTo(2);break}if(process.env.GAE_SERVICE||process.env.GAE_MODULE_NAME){env=
GCPEnv.APP_ENGINE;$jscomp$generator$context.jumpTo(2);break}if(process.env.FUNCTION_NAME||process.env.FUNCTION_TARGET){env=GCPEnv.CLOUD_FUNCTIONS;$jscomp$generator$context.jumpTo(2);break}return $jscomp$generator$context.yield(isComputeEngine(),5);case 5:if(!$jscomp$generator$context.yieldResult){env=GCPEnv.NONE;$jscomp$generator$context.jumpTo(2);break}return $jscomp$generator$context.yield(isKubernetesEngine(),7);case 7:env=$jscomp$generator$context.yieldResult?GCPEnv.KUBERNETES_ENGINE:GCPEnv.COMPUTE_ENGINE;
case 2:return $jscomp$generator$context.return(env)}})}}
//# sourceMappingURL=module$node_modules$google_auth_library$build$src$auth$envDetect.js.map
