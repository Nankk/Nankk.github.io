{
"version":3,
"file":"module$node_modules$google_auth_library$build$src$auth$iam.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBvHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAMC,SAAWN,OAAA,CAAQ,4DAAR,CACXO,OAAAA,CAQFC,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAkB,CAGzB,IAAAD,SAAA,CAAgBA,QAChB,KAAAC,MAAA,CAAaA,KAJY,CAY7B,OAAA,UAAA,qBAAAC,CAAAA,QAAoB,EAAG,CAEnBL,QAAAM,KAAA,CAAcN,QAAAO,6BAAd,CACA,OAAO,CAAA,CAHY,CAYvB,OAAA,UAAA,mBAAAC,CAAAA,QAAkB,CAACC,SAAD,CAAYC,UAAZ,CAAwB,CACtCV,QAAAM,KAAA,CAAcN,QAAAW,oCAAd,CACAD;UAAA,CAAW,IAAX,CAAiB,IAAAE,kBAAA,EAAjB,CAFsC,CAO1C,OAAA,UAAA,kBAAAA,CAAAA,QAAiB,EAAG,CAChB,MAAO,CACH,gCAAiC,IAAAT,SAD9B,CAEH,iCAAkC,IAAAC,MAF/B,CADS,CAOxBR,QAAAK,QAAA,CAAkBA,MAjEqG;",
"sources":["node_modules/google-auth-library/build/src/auth/iam.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_auth_library$build$src$auth$iam\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messages = require(\"../messages\");\nclass IAMAuth {\n    /**\n     * IAM credentials.\n     *\n     * @param selector the iam authority selector\n     * @param token the token\n     * @constructor\n     */\n    constructor(selector, token) {\n        this.selector = selector;\n        this.token = token;\n        this.selector = selector;\n        this.token = token;\n    }\n    /**\n     * Indicates whether the credential requires scopes to be created by calling\n     * createdScoped before use.\n     * @deprecated\n     * @return always false\n     */\n    createScopedRequired() {\n        // IAM authorization does not use scopes.\n        messages.warn(messages.IAM_CREATE_SCOPED_DEPRECATED);\n        return false;\n    }\n    /**\n     * Pass the selector and token to the metadataFn callback.\n     * @deprecated\n     * @param unused_uri is required of the credentials interface\n     * @param metadataFn a callback invoked with object containing request\n     * metadata.\n     */\n    getRequestMetadata(unusedUri, metadataFn) {\n        messages.warn(messages.IAM_GET_REQUEST_METADATA_DEPRECATED);\n        metadataFn(null, this.getRequestHeaders());\n    }\n    /**\n     * Acquire the HTTP headers required to make an authenticated request.\n     */\n    getRequestHeaders() {\n        return {\n            'x-goog-iam-authority-selector': this.selector,\n            'x-goog-iam-authorization-token': this.token,\n        };\n    }\n}\nexports.IAMAuth = IAMAuth;\n//# sourceMappingURL=iam.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","messages","IAMAuth","constructor","selector","token","createScopedRequired","warn","IAM_CREATE_SCOPED_DEPRECATED","getRequestMetadata","unusedUri","metadataFn","IAM_GET_REQUEST_METADATA_DEPRECATED","getRequestHeaders"]
}
