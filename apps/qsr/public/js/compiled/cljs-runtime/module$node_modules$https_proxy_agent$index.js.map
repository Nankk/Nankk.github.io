{
"version":3,
"file":"module$node_modules$https_proxy_agent$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/https-proxy-agent/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$https_proxy_agent$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('https-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpsProxyAgent;\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * @api public\n */\n\nfunction HttpsProxyAgent(opts) {\n  if (!(this instanceof HttpsProxyAgent)) return new HttpsProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts)\n    throw new Error(\n      'an HTTP(S) proxy server `host` and `port` must be specified!'\n    );\n  debug('creating new HttpsProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  // ALPN is supported by Node.js >= v5.\n  // attempt to negotiate http/1.1 for proxy servers that support http/2\n  if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n    proxy.ALPNProtocols = ['http 1.1']\n  }\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n  this.defaultPort = 443;\n}\ninherits(HttpsProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n  var proxy = this.proxy;\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // we need to buffer any HTTP traffic that happens with the proxy before we get\n  // the CONNECT response, so that if the response is anything other than an \"200\"\n  // response code, then we can re-play the \"data\" events on the socket once the\n  // HTTP parser is hooked up...\n  var buffers = [];\n  var buffersLength = 0;\n\n  function read() {\n    var b = socket.read();\n    if (b) ondata(b);\n    else socket.once('readable', read);\n  }\n\n  function cleanup() {\n    socket.removeListener('data', ondata);\n    socket.removeListener('end', onend);\n    socket.removeListener('error', onerror);\n    socket.removeListener('close', onclose);\n    socket.removeListener('readable', read);\n  }\n\n  function onclose(err) {\n    debug('onclose had error %o', err);\n  }\n\n  function onend() {\n    debug('onend');\n  }\n\n  function onerror(err) {\n    cleanup();\n    fn(err);\n  }\n\n  function ondata(b) {\n    buffers.push(b);\n    buffersLength += b.length;\n    var buffered = Buffer.concat(buffers, buffersLength);\n    var str = buffered.toString('ascii');\n\n    if (!~str.indexOf('\\r\\n\\r\\n')) {\n      // keep buffering\n      debug('have not received end of HTTP headers yet...');\n      if (socket.read) {\n        read();\n      } else {\n        socket.once('data', ondata);\n      }\n      return;\n    }\n\n    var firstLine = str.substring(0, str.indexOf('\\r\\n'));\n    var statusCode = +firstLine.split(' ')[1];\n    debug('got proxy server response: %o', firstLine);\n\n    if (200 == statusCode) {\n      // 200 Connected status code!\n      var sock = socket;\n\n      // nullify the buffered data since we won't be needing it\n      buffers = buffered = null;\n\n      if (opts.secureEndpoint) {\n        // since the proxy is connecting to an SSL server, we have\n        // to upgrade this socket connection to an SSL connection\n        debug(\n          'upgrading proxy-connected socket to TLS connection: %o',\n          opts.host\n        );\n        opts.socket = socket;\n        opts.servername = opts.servername || opts.host;\n        opts.host = null;\n        opts.hostname = null;\n        opts.port = null;\n        sock = tls.connect(opts);\n      }\n\n      cleanup();\n      fn(null, sock);\n    } else {\n      // some other status code that's not 200... need to re-play the HTTP header\n      // \"data\" events onto the socket once the HTTP machinery is attached so that\n      // the user can parse and handle the error status code\n      cleanup();\n\n      // save a reference to the concat'd Buffer for the `onsocket` callback\n      buffers = buffered;\n\n      // need to wait for the \"socket\" event to re-play the \"data\" events\n      req.once('socket', onsocket);\n      fn(null, socket);\n    }\n  }\n\n  function onsocket(socket) {\n    // replay the \"buffers\" Buffer onto the `socket`, since at this point\n    // the HTTP module machinery has been hooked up for the user\n    if ('function' == typeof socket.ondata) {\n      // node <= v0.11.3, the `ondata` function is set on the socket\n      socket.ondata(buffers, 0, buffers.length);\n    } else if (socket.listeners('data').length > 0) {\n      // node > v0.11.3, the \"data\" event is listened for directly\n      socket.emit('data', buffers);\n    } else {\n      // never?\n      throw new Error('should not happen...');\n    }\n\n    // nullify the cached Buffer instance\n    buffers = null;\n  }\n\n  socket.on('error', onerror);\n  socket.on('close', onclose);\n  socket.on('end', onend);\n\n  if (socket.read) {\n    read();\n  } else {\n    socket.once('data', ondata);\n  }\n\n  var hostname = opts.host + ':' + opts.port;\n  var msg = 'CONNECT ' + hostname + ' HTTP/1.1\\r\\n';\n\n  var headers = Object.assign({}, proxy.headers);\n  if (proxy.auth) {\n    headers['Proxy-Authorization'] =\n      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n  }\n\n  // the Host header should only include the port\n  // number when it is a non-standard port\n  var host = opts.host;\n  if (!isDefaultPort(opts.port, opts.secureEndpoint)) {\n    host += ':' + opts.port;\n  }\n  headers['Host'] = host;\n\n  headers['Connection'] = 'close';\n  Object.keys(headers).forEach(function(name) {\n    msg += name + ': ' + headers[name] + '\\r\\n';\n  });\n\n  socket.write(msg + '\\r\\n');\n};\n\nfunction isDefaultPort(port, secure) {\n  return Boolean((!secure && port === 80) || (secure && port === 443));\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","HttpsProxyAgent","opts","url","parse","Error","debug","Agent","call","proxy","Object","assign","secureProxy","protocol","test","host","hostname","port","ALPNProtocols","path","pathname","defaultPort","isDefaultPort","secure","Buffer","net","tls","inherits","prototype","callback","HttpsProxyAgent.prototype.callback","req","fn","read","b","socket","ondata","once","cleanup","removeListener","onend","onerror","onclose","err","buffers","push","buffersLength","length","buffered","concat","str","toString","indexOf","firstLine","substring","statusCode","split","sock","secureEndpoint","servername","connect","onsocket","listeners","emit","on","msg","headers","auth","from","keys","forEach","name","write"]
}
