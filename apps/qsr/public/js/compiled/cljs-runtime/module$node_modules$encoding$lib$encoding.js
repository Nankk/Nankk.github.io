shadow$provide.module$node_modules$encoding$lib$encoding=function(global,require,module,exports){function convertIconvLite(str,to,from){return"UTF-8"===to?iconvLite.decode(str,from):"UTF-8"===from?iconvLite.encode(str,to):iconvLite.encode(iconvLite.decode(str,from),to)}function checkEncoding(name){return(name||"").toString().trim().replace(/^latin[\-_]?(\d+)$/i,"ISO-8859-$1").replace(/^win(?:dows)?[\-_]?(\d+)$/i,"WINDOWS-$1").replace(/^utf[\-_]?(\d+)$/i,"UTF-$1").replace(/^ks_c_5601\-1987$/i,"CP949").replace(/^us[\-_]?ascii$/i,
"ASCII").toUpperCase()}var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";var iconvLite=require("module$node_modules$iconv_lite$lib$index"),Iconv=require("module$node_modules$encoding$lib$iconv_loader");module.exports.convert=function(str,to,from,useLite){from=checkEncoding(from||"UTF-8");to=checkEncoding(to||"UTF-8");str=str||"";"UTF-8"!==from&&"string"===typeof str&&(str=new Buffer(str,"binary"));if(from===to)var result="string"===typeof str?new Buffer(str):str;else if(Iconv&&
!useLite)try{useLite=str;var response=(new Iconv(from,to+"//TRANSLIT//IGNORE")).convert(useLite);result=response.slice(0,response.length)}catch(E$12){console.error(E$12);try{result=convertIconvLite(str,to,from)}catch(E){console.error(E),result=str}}else try{result=convertIconvLite(str,to,from)}catch(E$13){console.error(E$13),result=str}"string"===typeof result&&(result=new Buffer(result,"utf-8"));return result}}
//# sourceMappingURL=module$node_modules$encoding$lib$encoding.js.map
