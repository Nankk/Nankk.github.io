{
"version":3,
"file":"module$node_modules$node_fetch$lib$response.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBxGC,QAASA,SAAQ,CAACC,IAAD,CAAOC,IAAP,CAAa,CAE7BA,IAAA,CAAOA,IAAP,EAAe,EAEf,KAAAC,IAAA,CAAWD,IAAAC,IACX,KAAAC,OAAA,CAAcF,IAAAE,OAAd,EAA6B,GAC7B,KAAAC,WAAA,CAAkBH,IAAAG,WAAlB,EAAqCC,IAAAC,aAAA,CAAkB,IAAAH,OAAlB,CACrC,KAAAI,QAAA,CAAe,IAAIC,OAAJ,CAAYP,IAAAM,QAAZ,CACf,KAAAE,GAAA,CAAyB,GAAzB,EAAU,IAAAN,OAAV,EAA8C,GAA9C,CAAgC,IAAAA,OAEhCO,KAAAC,KAAA,CAAU,IAAV,CAAgBX,IAAhB,CAAsBC,IAAtB,CAV6B,CAb9B,IAAII,KAAOT,OAAA,CAAQ,uCAAR,CAAX,CACIY,QAAUZ,OAAA,CAAQ,4CAAR,CADd,CAEIc,KAAOd,OAAA,CAAQ,yCAAR,CAEXC;MAAAC,QAAA,CAAiBC,QAuBjBA,SAAAa,UAAA,CAAqBC,MAAAC,OAAA,CAAcJ,IAAAE,UAAd,CAOrBb,SAAAa,UAAAG,MAAA,CAA2BC,QAAQ,EAAG,CACrC,MAAO,KAAIjB,QAAJ,CAAa,IAAAkB,OAAA,CAAY,IAAZ,CAAb,CAAgC,CACtCf,IAAK,IAAAA,IADiC,CAEpCC,OAAQ,IAAAA,OAF4B,CAGpCC,WAAY,IAAAA,WAHwB,CAIpCG,QAAS,IAAAA,QAJ2B,CAKpCE,GAAI,IAAAA,GALgC,CAAhC,CAD8B,CA1CkE;",
"sources":["node_modules/node-fetch/lib/response.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$node_fetch$lib$response\"] = function(global,require,module,exports) {\n\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Response","body","opts","url","status","statusText","http","STATUS_CODES","headers","Headers","ok","Body","call","prototype","Object","create","clone","Response.prototype.clone","_clone"]
}
