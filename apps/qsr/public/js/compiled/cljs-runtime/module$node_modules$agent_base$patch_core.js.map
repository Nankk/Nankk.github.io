{
"version":3,
"file":"module$node_modules$agent_base$patch_core.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtG,IAAMC,IAAMH,OAAA,CAAQ,6BAAR,CAAZ,CACMI,MAAQJ,OAAA,CAAQ,4CAAR,CASTI,MAAAC,QAAA,qCAAL,GACED,KAAAC,QAeA,CAfiB,QAAQ,CAACA,OAAD,CAAU,CACjC,MAAO,SAAQ,CAACC,QAAD,CAAWC,EAAX,CAAe,CAG1BC,QAAA,CADsB,QAAxB,GAAI,MAAOF,SAAX,CACYH,GAAAM,MAAA,CAAUH,QAAV,CADZ,CAGYI,MAAAC,OAAA,CAAc,EAAd,CAAkBL,QAAlB,CAER,KAAJ,EAAYE,QAAAI,KAAZ,GACEJ,QAAAI,KADF,CACiB,GADjB,CAGAJ,SAAAK,eAAA,CAAyB,CAAA,CACzB,OAAOR,QAAAS,KAAA,CAAaV,KAAb,CAAoBI,QAApB;AAA6BD,EAA7B,CAXqB,CADG,CAAnB,CAcbH,KAAAC,QAda,CAehB,CAAAD,KAAAC,QAAA,qCAAA,CAA6B,CAAA,CAhB/B,CAyBAD,MAAAW,IAAA,CAAYC,QAAS,CAACC,IAAD,CAAOX,QAAP,CAAiBC,EAAjB,CAAqB,CAEtC,GAAoB,QAApB,GAAI,MAAOU,KAAX,EAAgCX,QAAhC,EAAgE,UAAhE,GAA4C,MAAOA,SAAnD,CACE,IAAAE,QAAUE,MAAAC,OAAA,CAAc,EAAd,CAAkBR,GAAAM,MAAA,CAAUQ,IAAV,CAAlB,CAAmCX,QAAnC,CADZ,KAEYA,SAAL,EAAkBC,EAAlB,CAEKA,EAFL,GAGLC,OACA,CADUS,IACV,CAAAV,EAAA,CAAKD,QAJA,EACLE,OADK,CACKS,IAMRC,KAAAA,CAAMd,KAAAC,QAAA,CAAcG,OAAd,CAAuBD,EAAvB,CACZW,KAAAC,IAAA,EACA,OAAOD,KAbiC,CArC4D;",
"sources":["node_modules/agent-base/patch-core.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$agent_base$patch_core\"] = function(global,require,module,exports) {\n'use strict';\nconst url = require('url');\nconst https = require('https');\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nconst patchMarker = \"__agent_base_https_request_patched__\";\nif (!https.request[patchMarker]) {\n  https.request = (function(request) {\n    return function(_options, cb) {\n      let options;\n      if (typeof _options === 'string') {\n        options = url.parse(_options);\n      } else {\n        options = Object.assign({}, _options);\n      }\n      if (null == options.port) {\n        options.port = 443;\n      }\n      options.secureEndpoint = true;\n      return request.call(https, options, cb);\n    };\n  })(https.request);\n  https.request[patchMarker] = true;\n}\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function (_url, _options, cb) {\n    let options;\n    if (typeof _url === 'string' && _options && typeof _options !== 'function') {\n      options = Object.assign({}, url.parse(_url), _options);\n    } else if (!_options && !cb) {\n      options = _url;\n    } else if (!cb) {\n      options = _url;\n      cb = _options;\n    }\n\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","url","https","request","_options","cb","options","parse","Object","assign","port","secureEndpoint","call","get","https.get","_url","req","end"]
}
