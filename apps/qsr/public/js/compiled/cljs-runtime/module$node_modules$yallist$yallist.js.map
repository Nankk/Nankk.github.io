{
"version":3,
"file":"module$node_modules$yallist$yallist.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/yallist/yallist.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$yallist$yallist\"] = function(global,require,module,exports) {\n'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Yallist","list","self","tail","head","length","forEach","item","push","arguments","i","l","Node","value","prev","next","create","prototype","removeNode","Yallist.prototype.removeNode","node","Error","unshiftNode","Yallist.prototype.unshiftNode","pushNode","Yallist.prototype.pushNode","Yallist.prototype.push","unshift","Yallist.prototype.unshift","pop","Yallist.prototype.pop","res","shift","Yallist.prototype.shift","Yallist.prototype.forEach","fn","thisp","walker","call","forEachReverse","Yallist.prototype.forEachReverse","get","Yallist.prototype.get","n","getReverse","Yallist.prototype.getReverse","map","Yallist.prototype.map","mapReverse","Yallist.prototype.mapReverse","reduce","Yallist.prototype.reduce","initial","acc","TypeError","reduceReverse","Yallist.prototype.reduceReverse","toArray","Yallist.prototype.toArray","arr","Array","toArrayReverse","Yallist.prototype.toArrayReverse","slice","Yallist.prototype.slice","from","to","ret","sliceReverse","Yallist.prototype.sliceReverse","splice","Yallist.prototype.splice","start","deleteCount","nodes","inserted","reverse","Yallist.prototype.reverse","p","er"]
}
