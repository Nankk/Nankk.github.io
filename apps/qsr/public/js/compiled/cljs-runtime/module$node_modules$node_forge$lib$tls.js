shadow$provide.module$node_modules$node_forge$lib$tls=function(global,require,module,exports){var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$asn1");require("module$node_modules$node_forge$lib$hmac");require("module$node_modules$node_forge$lib$md5");require("module$node_modules$node_forge$lib$pem");require("module$node_modules$node_forge$lib$pki");require("module$node_modules$node_forge$lib$random");require("module$node_modules$node_forge$lib$sha1");
require("module$node_modules$node_forge$lib$util");var prf_TLS1=function(secret,label,seed,length){var rval=forge.util.createBuffer(),idx=secret.length>>1,slen=idx+(secret.length&1),s1=secret.substr(0,slen);slen=secret.substr(idx,slen);secret=forge.util.createBuffer();idx=forge.hmac.create();seed=label+seed;var md5itr=Math.ceil(length/16);label=Math.ceil(length/20);idx.start("MD5",s1);s1=forge.util.createBuffer();secret.putBytes(seed);for(var i=0;i<md5itr;++i)idx.start(null,null),idx.update(secret.getBytes()),
secret.putBuffer(idx.digest()),idx.start(null,null),idx.update(secret.bytes()+seed),s1.putBuffer(idx.digest());idx.start("SHA1",slen);slen=forge.util.createBuffer();secret.clear();secret.putBytes(seed);for(i=0;i<label;++i)idx.start(null,null),idx.update(secret.getBytes()),secret.putBuffer(idx.digest()),idx.start(null,null),idx.update(secret.bytes()+seed),slen.putBuffer(idx.digest());rval.putBytes(forge.util.xorBytes(s1.getBytes(),slen.getBytes(),length));return rval},deflate=function(c,record,s){s=
!1;try{var bytes=c.deflate(record.fragment.getBytes());record.fragment=forge.util.createBuffer(bytes);record.length=bytes.length;s=!0}catch(ex){}return s},inflate=function(c,record,s){s=!1;try{var bytes=c.inflate(record.fragment.getBytes());record.fragment=forge.util.createBuffer(bytes);record.length=bytes.length;s=!0}catch(ex){}return s},readVector=function(b,lenBytes){var len=0;switch(lenBytes){case 1:len=b.getByte();break;case 2:len=b.getInt16();break;case 3:len=b.getInt24();break;case 4:len=b.getInt32()}return forge.util.createBuffer(b.getBytes(len))},
writeVector=function(b,lenBytes,v){b.putInt(v.length(),lenBytes<<3);b.putBuffer(v)},tls={Versions:{TLS_1_0:{major:3,minor:1},TLS_1_1:{major:3,minor:2},TLS_1_2:{major:3,minor:3}}};tls.SupportedVersions=[tls.Versions.TLS_1_1,tls.Versions.TLS_1_0];tls.Version=tls.SupportedVersions[0];tls.MaxFragment=15360;tls.ConnectionEnd={server:0,client:1};tls.PRFAlgorithm={tls_prf_sha256:0};tls.BulkCipherAlgorithm={none:null,rc4:0,des3:1,aes:2};tls.CipherType={stream:0,block:1,aead:2};tls.MACAlgorithm={none:null,
hmac_md5:0,hmac_sha1:1,hmac_sha256:2,hmac_sha384:3,hmac_sha512:4};tls.CompressionMethod={none:0,deflate:1};tls.ContentType={change_cipher_spec:20,alert:21,handshake:22,application_data:23,heartbeat:24};tls.HandshakeType={hello_request:0,client_hello:1,server_hello:2,certificate:11,server_key_exchange:12,certificate_request:13,server_hello_done:14,certificate_verify:15,client_key_exchange:16,finished:20};tls.Alert={};tls.Alert.Level={warning:1,fatal:2};tls.Alert.Description={close_notify:0,unexpected_message:10,
bad_record_mac:20,decryption_failed:21,record_overflow:22,decompression_failure:30,handshake_failure:40,bad_certificate:42,unsupported_certificate:43,certificate_revoked:44,certificate_expired:45,certificate_unknown:46,illegal_parameter:47,unknown_ca:48,access_denied:49,decode_error:50,decrypt_error:51,export_restriction:60,protocol_version:70,insufficient_security:71,internal_error:80,user_canceled:90,no_renegotiation:100};tls.HeartbeatMessageType={heartbeat_request:1,heartbeat_response:2};tls.CipherSuites=
{};tls.getCipherSuite=function(twoBytes){var rval=null,key;for(key in tls.CipherSuites){var cs=tls.CipherSuites[key];if(cs.id[0]===twoBytes.charCodeAt(0)&&cs.id[1]===twoBytes.charCodeAt(1)){rval=cs;break}}return rval};tls.handleUnexpected=function(c,record){(c.open||c.entity!==tls.ConnectionEnd.client)&&c.error(c,{message:"Unexpected message. Received TLS record out of order.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.unexpected_message}})};tls.handleHelloRequest=
function(c,record,length){!c.handshaking&&0<c.handshakes&&(tls.queue(c,tls.createAlert(c,{level:tls.Alert.Level.warning,description:tls.Alert.Description.no_renegotiation})),tls.flush(c));c.process()};tls.parseHelloMessage=function(c,record,length){var msg=null,client=c.entity===tls.ConnectionEnd.client;if(38>length)c.error(c,{message:client?"Invalid ServerHello message. Message too short.":"Invalid ClientHello message. Message too short.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});
else{record=record.fragment;var remaining=record.length();msg={version:{major:record.getByte(),minor:record.getByte()},random:forge.util.createBuffer(record.getBytes(32)),session_id:readVector(record,1),extensions:[]};client?(msg.cipher_suite=record.getBytes(2),msg.compression_method=record.getByte()):(msg.cipher_suites=readVector(record,2),msg.compression_methods=readVector(record,1));remaining=length-(remaining-record.length());if(0<remaining){for(length=readVector(record,2);0<length.length();)msg.extensions.push({type:[length.getByte(),
length.getByte()],data:readVector(length,2)});if(!client)for(length=0;length<msg.extensions.length;++length)if(record=msg.extensions[length],0===record.type[0]&&0===record.type[1])for(record=readVector(record.data,2);0<record.length()&&0===record.getByte();)c.session.extensions.server_name.serverNameList.push(readVector(record,2).getBytes())}if(c.session.version&&(msg.version.major!==c.session.version.major||msg.version.minor!==c.session.version.minor))return c.error(c,{message:"TLS version change is disallowed during renegotiation.",
send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.protocol_version}});if(client)c.session.cipherSuite=tls.getCipherSuite(msg.cipher_suite);else for(length=forge.util.createBuffer(msg.cipher_suites.bytes());0<length.length()&&(c.session.cipherSuite=tls.getCipherSuite(length.getBytes(2)),null===c.session.cipherSuite););if(null===c.session.cipherSuite)return c.error(c,{message:"No cipher suites in common.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.handshake_failure},
cipherSuite:forge.util.bytesToHex(msg.cipher_suite)});c.session.compressionMethod=client?msg.compression_method:tls.CompressionMethod.none}return msg};tls.createSecurityParameters=function(c,msg){var client=c.entity===tls.ConnectionEnd.client,msgRandom=msg.random.bytes();msg=client?c.session.sp.client_random:msgRandom;client=client?msgRandom:tls.createRandom().getBytes();c.session.sp={entity:c.entity,prf_algorithm:tls.PRFAlgorithm.tls_prf_sha256,bulk_cipher_algorithm:null,cipher_type:null,enc_key_length:null,
block_length:null,fixed_iv_length:null,record_iv_length:null,mac_algorithm:null,mac_length:null,mac_key_length:null,compression_algorithm:c.session.compressionMethod,pre_master_secret:null,master_secret:null,client_random:msg,server_random:client}};tls.handleServerHello=function(c,record,length){record=tls.parseHelloMessage(c,record,length);if(!c.fail){if(record.version.minor<=c.version.minor)c.version.minor=record.version.minor;else return c.error(c,{message:"Incompatible TLS version.",send:!0,alert:{level:tls.Alert.Level.fatal,
description:tls.Alert.Description.protocol_version}});c.session.version=c.version;length=record.session_id.bytes();0<length.length&&length===c.session.id?(c.expect=SCC,c.session.resuming=!0,c.session.sp.server_random=record.random.bytes()):(c.expect=SCE,c.session.resuming=!1,tls.createSecurityParameters(c,record));c.session.id=length;c.process()}};tls.handleClientHello=function(c,record,length){record=tls.parseHelloMessage(c,record,length);if(!c.fail){var sessionId=record.session_id.bytes();length=
null;if(c.sessionCache)if(length=c.sessionCache.getSession(sessionId),null===length)sessionId="";else if(length.version.major!==record.version.major||length.version.minor>record.version.minor)length=null,sessionId="";0===sessionId.length&&(sessionId=forge.random.getBytes(32));c.session.id=sessionId;c.session.clientHelloVersion=record.version;c.session.sp={};if(length)c.version=c.session.version=length.version,c.session.sp=length.sp;else{for(sessionId=1;sessionId<tls.SupportedVersions.length;++sessionId){var version=
tls.SupportedVersions[sessionId];if(version.minor<=record.version.minor)break}c.version={major:version.major,minor:version.minor};c.session.version=c.version}null!==length?(c.expect=CCC,c.session.resuming=!0,c.session.sp.client_random=record.random.bytes()):(c.expect=!1!==c.verifyClient?CCE:CKE,c.session.resuming=!1,tls.createSecurityParameters(c,record));c.open=!0;tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createServerHello(c)}));c.session.resuming?(tls.queue(c,tls.createRecord(c,
{type:tls.ContentType.change_cipher_spec,data:tls.createChangeCipherSpec()})),c.state.pending=tls.createConnectionState(c),c.state.current.write=c.state.pending.write,tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createFinished(c)}))):(tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createCertificate(c)})),c.fail||(tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createServerKeyExchange(c)})),!1!==c.verifyClient&&tls.queue(c,
tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createCertificateRequest(c)})),tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createServerHelloDone(c)}))));tls.flush(c);c.process()}};tls.handleCertificate=function(c,record,length){if(3>length)return c.error(c,{message:"Invalid Certificate message. Message too short.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});length=readVector(record.fragment,3);record=[];
try{for(;0<length.length();){var cert=readVector(length,3);var asn1=forge.asn1.fromDer(cert);cert=forge.pki.certificateFromAsn1(asn1,!0);record.push(cert)}}catch(ex){return c.error(c,{message:"Could not parse certificate list.",cause:ex,send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.bad_certificate}})}cert=c.entity===tls.ConnectionEnd.client;!cert&&!0!==c.verifyClient||0!==record.length?0===record.length?c.expect=cert?SKE:CKE:(cert?c.session.serverCertificate=record[0]:
c.session.clientCertificate=record[0],tls.verifyCertificateChain(c,record)&&(c.expect=cert?SKE:CKE)):c.error(c,{message:cert?"No server certificate provided.":"No client certificate provided.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});c.process()};tls.handleServerKeyExchange=function(c,record,length){if(0<length)return c.error(c,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.unsupported_certificate}});
c.expect=SCR;c.process()};tls.handleClientKeyExchange=function(c,record,length){if(48>length)return c.error(c,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.unsupported_certificate}});record=readVector(record.fragment,2).getBytes();length=null;if(c.getPrivateKey)try{length=c.getPrivateKey(c,c.session.serverCertificate),length=forge.pki.privateKeyFromPem(length)}catch(ex){c.error(c,{message:"Could not get private key.",
cause:ex,send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}})}if(null===length)return c.error(c,{message:"No private key set.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}});try{var sp=c.session.sp;sp.pre_master_secret=length.decrypt(record);var version=c.session.clientHelloVersion;if(version.major!==sp.pre_master_secret.charCodeAt(0)||version.minor!==sp.pre_master_secret.charCodeAt(1))throw Error("TLS version rollback attack detected.");
}catch(ex$26){sp.pre_master_secret=forge.random.getBytes(48)}c.expect=CCC;null!==c.session.clientCertificate&&(c.expect=CCV);c.process()};tls.handleCertificateRequest=function(c,record,length){if(3>length)return c.error(c,{message:"Invalid CertificateRequest. Message too short.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});record=record.fragment;record={certificate_types:readVector(record,1),certificate_authorities:readVector(record,2)};c.session.certificateRequest=
record;c.expect=SHD;c.process()};tls.handleCertificateVerify=function(c,record,length){if(2>length)return c.error(c,{message:"Invalid CertificateVerify. Message too short.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});length=record.fragment;length.read-=4;record=length.bytes();length.read+=4;length=readVector(length,2).getBytes();var verify=forge.util.createBuffer();verify.putBuffer(c.session.md5.digest());verify.putBuffer(c.session.sha1.digest());
verify=verify.getBytes();try{if(!c.session.clientCertificate.publicKey.verify(verify,length,"NONE"))throw Error("CertificateVerify signature does not match.");c.session.md5.update(record);c.session.sha1.update(record)}catch(ex){return c.error(c,{message:"Bad signature in CertificateVerify.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.handshake_failure}})}c.expect=CCC;c.process()};tls.handleServerHelloDone=function(c$jscomp$0,record,length){if(0<length)return c$jscomp$0.error(c$jscomp$0,
{message:"Invalid ServerHelloDone message. Invalid length.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.record_overflow}});if(null===c$jscomp$0.serverCertificate&&(record={message:"No server certificate provided. Not enough security.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.insufficient_security}},length=c$jscomp$0.verify(c$jscomp$0,record.alert.description,0,[]),!0!==length)){if(length||0===length)"object"!==typeof length||forge.util.isArray(length)?
"number"===typeof length&&(record.alert.description=length):(length.message&&(record.message=length.message),length.alert&&(record.alert.description=length.alert));return c$jscomp$0.error(c$jscomp$0,record)}null!==c$jscomp$0.session.certificateRequest&&(record=tls.createRecord(c$jscomp$0,{type:tls.ContentType.handshake,data:tls.createCertificate(c$jscomp$0)}),tls.queue(c$jscomp$0,record));record=tls.createRecord(c$jscomp$0,{type:tls.ContentType.handshake,data:tls.createClientKeyExchange(c$jscomp$0)});
tls.queue(c$jscomp$0,record);c$jscomp$0.expect=SER;record=function(c,signature){null!==c.session.certificateRequest&&null!==c.session.clientCertificate&&tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createCertificateVerify(c,signature)}));tls.queue(c,tls.createRecord(c,{type:tls.ContentType.change_cipher_spec,data:tls.createChangeCipherSpec()}));c.state.pending=tls.createConnectionState(c);c.state.current.write=c.state.pending.write;tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,
data:tls.createFinished(c)}));c.expect=SCC;tls.flush(c);c.process()};if(null===c$jscomp$0.session.certificateRequest||null===c$jscomp$0.session.clientCertificate)return record(c$jscomp$0,null);tls.getClientSignature(c$jscomp$0,record)};tls.handleChangeCipherSpec=function(c,record){if(1!==record.fragment.getByte())return c.error(c,{message:"Invalid ChangeCipherSpec message received.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.illegal_parameter}});record=c.entity===
tls.ConnectionEnd.client;if(c.session.resuming&&record||!c.session.resuming&&!record)c.state.pending=tls.createConnectionState(c);c.state.current.read=c.state.pending.read;if(!c.session.resuming&&record||c.session.resuming&&!record)c.state.pending=null;c.expect=record?SFI:CFI;c.process()};tls.handleFinished=function(c,record,length){length=record.fragment;length.read-=4;var msgBytes=length.bytes();length.read+=4;record=record.fragment.getBytes();length=forge.util.createBuffer();length.putBuffer(c.session.md5.digest());
length.putBuffer(c.session.sha1.digest());var client=c.entity===tls.ConnectionEnd.client;length=prf_TLS1(c.session.sp.master_secret,client?"server finished":"client finished",length.getBytes(),12);if(length.getBytes()!==record)return c.error(c,{message:"Invalid verify_data in Finished message.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.decrypt_error}});c.session.md5.update(msgBytes);c.session.sha1.update(msgBytes);if(c.session.resuming&&client||!c.session.resuming&&
!client)tls.queue(c,tls.createRecord(c,{type:tls.ContentType.change_cipher_spec,data:tls.createChangeCipherSpec()})),c.state.current.write=c.state.pending.write,c.state.pending=null,tls.queue(c,tls.createRecord(c,{type:tls.ContentType.handshake,data:tls.createFinished(c)}));c.expect=client?SAD:CAD;c.handshaking=!1;++c.handshakes;c.peerCertificate=client?c.session.serverCertificate:c.session.clientCertificate;tls.flush(c);c.isConnected=!0;c.connected(c);c.process()};tls.handleAlert=function(c,record){record=
record.fragment;record={level:record.getByte(),description:record.getByte()};switch(record.description){case tls.Alert.Description.close_notify:var msg="Connection closed.";break;case tls.Alert.Description.unexpected_message:msg="Unexpected message.";break;case tls.Alert.Description.bad_record_mac:msg="Bad record MAC.";break;case tls.Alert.Description.decryption_failed:msg="Decryption failed.";break;case tls.Alert.Description.record_overflow:msg="Record overflow.";break;case tls.Alert.Description.decompression_failure:msg=
"Decompression failed.";break;case tls.Alert.Description.handshake_failure:msg="Handshake failure.";break;case tls.Alert.Description.bad_certificate:msg="Bad certificate.";break;case tls.Alert.Description.unsupported_certificate:msg="Unsupported certificate.";break;case tls.Alert.Description.certificate_revoked:msg="Certificate revoked.";break;case tls.Alert.Description.certificate_expired:msg="Certificate expired.";break;case tls.Alert.Description.certificate_unknown:msg="Certificate unknown.";break;
case tls.Alert.Description.illegal_parameter:msg="Illegal parameter.";break;case tls.Alert.Description.unknown_ca:msg="Unknown certificate authority.";break;case tls.Alert.Description.access_denied:msg="Access denied.";break;case tls.Alert.Description.decode_error:msg="Decode error.";break;case tls.Alert.Description.decrypt_error:msg="Decrypt error.";break;case tls.Alert.Description.export_restriction:msg="Export restriction.";break;case tls.Alert.Description.protocol_version:msg="Unsupported protocol version.";
break;case tls.Alert.Description.insufficient_security:msg="Insufficient security.";break;case tls.Alert.Description.internal_error:msg="Internal error.";break;case tls.Alert.Description.user_canceled:msg="User canceled.";break;case tls.Alert.Description.no_renegotiation:msg="Renegotiation not supported.";break;default:msg="Unknown error."}if(record.description===tls.Alert.Description.close_notify)return c.close();c.error(c,{message:msg,send:!1,origin:c.entity===tls.ConnectionEnd.client?"server":
"client",alert:record});c.process()};tls.handleHandshake=function(c,record){var b=record.fragment,type=b.getByte(),length=b.getInt24();if(length>b.length())return c.fragmented=record,record.fragment=forge.util.createBuffer(),b.read-=4,c.process();c.fragmented=null;b.read-=4;var bytes=b.bytes(length+4);b.read+=4;type in hsTable[c.entity][c.expect]?(c.entity!==tls.ConnectionEnd.server||c.open||c.fail||(c.handshaking=!0,c.session={version:null,extensions:{server_name:{serverNameList:[]}},cipherSuite:null,
compressionMethod:null,serverCertificate:null,clientCertificate:null,md5:forge.md.md5.create(),sha1:forge.md.sha1.create()}),type!==tls.HandshakeType.hello_request&&type!==tls.HandshakeType.certificate_verify&&type!==tls.HandshakeType.finished&&(c.session.md5.update(bytes),c.session.sha1.update(bytes)),hsTable[c.entity][c.expect][type](c,record,length)):tls.handleUnexpected(c,record)};tls.handleApplicationData=function(c,record){c.data.putBuffer(record.fragment);c.dataReady(c);c.process()};tls.handleHeartbeat=
function(c,record){var b=record.fragment;record=b.getByte();var length=b.getInt16();b=b.getBytes(length);if(record===tls.HeartbeatMessageType.heartbeat_request){if(c.handshaking||length>b.length)return c.process();tls.queue(c,tls.createRecord(c,{type:tls.ContentType.heartbeat,data:tls.createHeartbeat(tls.HeartbeatMessageType.heartbeat_response,b)}));tls.flush(c)}else if(record===tls.HeartbeatMessageType.heartbeat_response){if(b!==c.expectedHeartbeatPayload)return c.process();c.heartbeatReceived&&
c.heartbeatReceived(c,forge.util.createBuffer(b))}c.process()};var SCE=1,SKE=2,SCR=3,SHD=4,SCC=5,SFI=6,SAD=7,SER=8,CCE=1,CKE=2,CCV=3,CCC=4,CFI=5,CAD=6;global=tls.handleUnexpected;require=tls.handleChangeCipherSpec;exports=tls.handleAlert;var R2=tls.handleHandshake,R3=tls.handleApplicationData,R4=tls.handleHeartbeat,ctTable=[];ctTable[tls.ConnectionEnd.client]=[[global,exports,R2,global,R4],[global,exports,R2,global,R4],[global,exports,R2,global,R4],[global,exports,R2,global,R4],[global,exports,R2,
global,R4],[require,exports,global,global,R4],[global,exports,R2,global,R4],[global,exports,R2,R3,R4],[global,exports,R2,global,R4]];ctTable[tls.ConnectionEnd.server]=[[global,exports,R2,global,R4],[global,exports,R2,global,R4],[global,exports,R2,global,R4],[global,exports,R2,global,R4],[require,exports,global,global,R4],[global,exports,R2,global,R4],[global,exports,R2,R3,R4],[global,exports,R2,global,R4]];require=tls.handleHelloRequest;exports=tls.handleCertificate;R2=tls.handleServerKeyExchange;
R3=tls.handleCertificateRequest;R4=tls.handleServerHelloDone;var H6=tls.handleFinished,hsTable=[];hsTable[tls.ConnectionEnd.client]=[[global,global,tls.handleServerHello,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,global,global,exports,R2,R3,R4,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,
global,global,global,R2,R3,R4,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,global,global,global,global,R3,R4,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,global,global,global,global,global,R4,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,
global],[require,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,H6],[require,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global],[require,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global]];hsTable[tls.ConnectionEnd.server]=[[global,tls.handleClientHello,
global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global],[global,global,global,global,global,global,global,global,global,global,global,exports,global,global,global,global,global,global,global,global,global],[global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,tls.handleClientKeyExchange,global,global,global,global],[global,global,global,global,global,global,global,
global,global,global,global,global,global,global,global,tls.handleCertificateVerify,global,global,global,global,global],[global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global],[global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,H6],[global,global,global,global,global,global,global,global,global,global,global,global,global,
global,global,global,global,global,global,global,global],[global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global,global]];tls.generateKeys=function(c,sp){var random=sp.client_random+sp.server_random;c.session.resuming||(sp.master_secret=prf_TLS1(sp.pre_master_secret,"master secret",random,48).bytes(),sp.pre_master_secret=null);random=sp.server_random+sp.client_random;var length=2*sp.mac_key_length+2*sp.enc_key_length;
(c=c.version.major===tls.Versions.TLS_1_0.major&&c.version.minor===tls.Versions.TLS_1_0.minor)&&(length+=2*sp.fixed_iv_length);random=prf_TLS1(sp.master_secret,"key expansion",random,length);length={client_write_MAC_key:random.getBytes(sp.mac_key_length),server_write_MAC_key:random.getBytes(sp.mac_key_length),client_write_key:random.getBytes(sp.enc_key_length),server_write_key:random.getBytes(sp.enc_key_length)};c&&(length.client_write_IV=random.getBytes(sp.fixed_iv_length),length.server_write_IV=
random.getBytes(sp.fixed_iv_length));return length};tls.createConnectionState=function(c$jscomp$0){var client=c$jscomp$0.entity===tls.ConnectionEnd.client,createMode=function(){var mode={sequenceNumber:[0,0],macKey:null,macLength:0,macFunction:null,cipherState:null,cipherFunction:function(record){return!0},compressionState:null,compressFunction:function(record){return!0},updateSequenceNumber:function(){4294967295===mode.sequenceNumber[1]?(mode.sequenceNumber[1]=0,++mode.sequenceNumber[0]):++mode.sequenceNumber[1]}};
return mode},state={read:createMode(),write:createMode()};state.read.update=function(c,record){state.read.cipherFunction(record,state.read)?state.read.compressFunction(c,record,state.read)||c.error(c,{message:"Could not decompress record.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.decompression_failure}}):c.error(c,{message:"Could not decrypt record or bad MAC.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.bad_record_mac}});return!c.fail};
state.write.update=function(c,record){state.write.compressFunction(c,record,state.write)?state.write.cipherFunction(record,state.write)||c.error(c,{message:"Could not encrypt record.",send:!1,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}}):c.error(c,{message:"Could not compress record.",send:!1,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}});return!c.fail};if(c$jscomp$0.session)switch(createMode=c$jscomp$0.session.sp,c$jscomp$0.session.cipherSuite.initSecurityParameters(createMode),
createMode.keys=tls.generateKeys(c$jscomp$0,createMode),state.read.macKey=client?createMode.keys.server_write_MAC_key:createMode.keys.client_write_MAC_key,state.write.macKey=client?createMode.keys.client_write_MAC_key:createMode.keys.server_write_MAC_key,c$jscomp$0.session.cipherSuite.initConnectionState(state,c$jscomp$0,createMode),createMode.compression_algorithm){case tls.CompressionMethod.none:break;case tls.CompressionMethod.deflate:state.read.compressFunction=inflate;state.write.compressFunction=
deflate;break;default:throw Error("Unsupported compression algorithm.");}return state};tls.createRandom=function(){var d=new Date;d=+d+6E4*d.getTimezoneOffset();var rval=forge.util.createBuffer();rval.putInt32(d);rval.putBytes(forge.random.getBytes(28));return rval};tls.createRecord=function(c,options){return options.data?{type:options.type,version:{major:c.version.major,minor:c.version.minor},length:options.data.length(),fragment:options.data}:null};tls.createAlert=function(c,alert){var b=forge.util.createBuffer();
b.putByte(alert.level);b.putByte(alert.description);return tls.createRecord(c,{type:tls.ContentType.alert,data:b})};tls.createClientHello=function(c){c.session.clientHelloVersion={major:c.version.major,minor:c.version.minor};for(var cipherSuites=forge.util.createBuffer(),i=0;i<c.cipherSuites.length;++i){var cs=c.cipherSuites[i];cipherSuites.putByte(cs.id[0]);cipherSuites.putByte(cs.id[1])}var cSuites=cipherSuites.length();i=forge.util.createBuffer();i.putByte(tls.CompressionMethod.none);var cMethods=
i.length();cs=forge.util.createBuffer();if(c.virtualHost){var ext=forge.util.createBuffer();ext.putByte(0);ext.putByte(0);var serverName=forge.util.createBuffer();serverName.putByte(0);writeVector(serverName,2,forge.util.createBuffer(c.virtualHost));var snList=forge.util.createBuffer();writeVector(snList,2,serverName);writeVector(ext,2,snList);cs.putBuffer(ext)}ext=cs.length();0<ext&&(ext+=2);serverName=c.session.id;cSuites=serverName.length+1+2+4+28+2+cSuites+1+cMethods+ext;cMethods=forge.util.createBuffer();
cMethods.putByte(tls.HandshakeType.client_hello);cMethods.putInt24(cSuites);cMethods.putByte(c.version.major);cMethods.putByte(c.version.minor);cMethods.putBytes(c.session.sp.client_random);writeVector(cMethods,1,forge.util.createBuffer(serverName));writeVector(cMethods,2,cipherSuites);writeVector(cMethods,1,i);0<ext&&writeVector(cMethods,2,cs);return cMethods};tls.createServerHello=function(c){var sessionId=c.session.id,length=sessionId.length+1+2+4+28+2+1,rval=forge.util.createBuffer();rval.putByte(tls.HandshakeType.server_hello);
rval.putInt24(length);rval.putByte(c.version.major);rval.putByte(c.version.minor);rval.putBytes(c.session.sp.server_random);writeVector(rval,1,forge.util.createBuffer(sessionId));rval.putByte(c.session.cipherSuite.id[0]);rval.putByte(c.session.cipherSuite.id[1]);rval.putByte(c.session.compressionMethod);return rval};tls.createCertificate=function(c){var client=c.entity===tls.ConnectionEnd.client,cert=null;c.getCertificate&&(cert=c.getCertificate(c,client?c.session.certificateRequest:c.session.extensions.server_name.serverNameList));
var certList=forge.util.createBuffer();if(null!==cert)try{forge.util.isArray(cert)||(cert=[cert]);for(var asn1=null,i=0;i<cert.length;++i){var msg=forge.pem.decode(cert[i])[0];if("CERTIFICATE"!==msg.type&&"X509 CERTIFICATE"!==msg.type&&"TRUSTED CERTIFICATE"!==msg.type){var error=Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');error.headerType=msg.type;throw error;}if(msg.procType&&"ENCRYPTED"===msg.procType.type)throw Error("Could not convert certificate from PEM; PEM is encrypted.");
var der=forge.util.createBuffer(msg.body);null===asn1&&(asn1=forge.asn1.fromDer(der.bytes(),!1));var certBuffer=forge.util.createBuffer();writeVector(certBuffer,3,der);certList.putBuffer(certBuffer)}cert=forge.pki.certificateFromAsn1(asn1);client?c.session.clientCertificate=cert:c.session.serverCertificate=cert}catch(ex){return c.error(c,{message:"Could not send certificate list.",cause:ex,send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.bad_certificate}})}c=3+certList.length();
client=forge.util.createBuffer();client.putByte(tls.HandshakeType.certificate);client.putInt24(c);writeVector(client,3,certList);return client};tls.createClientKeyExchange=function(c){var b=forge.util.createBuffer();b.putByte(c.session.clientHelloVersion.major);b.putByte(c.session.clientHelloVersion.minor);b.putBytes(forge.random.getBytes(46));var sp=c.session.sp;sp.pre_master_secret=b.getBytes();b=c.session.serverCertificate.publicKey.encrypt(sp.pre_master_secret);c=b.length+2;sp=forge.util.createBuffer();
sp.putByte(tls.HandshakeType.client_key_exchange);sp.putInt24(c);sp.putInt16(b.length);sp.putBytes(b);return sp};tls.createServerKeyExchange=function(c){return forge.util.createBuffer()};tls.getClientSignature=function(c$jscomp$0,callback$jscomp$0){var b$jscomp$0=forge.util.createBuffer();b$jscomp$0.putBuffer(c$jscomp$0.session.md5.digest());b$jscomp$0.putBuffer(c$jscomp$0.session.sha1.digest());b$jscomp$0=b$jscomp$0.getBytes();c$jscomp$0.getSignature=c$jscomp$0.getSignature||function(c,b,callback){var privateKey=
null;if(c.getPrivateKey)try{privateKey=c.getPrivateKey(c,c.session.clientCertificate),privateKey=forge.pki.privateKeyFromPem(privateKey)}catch(ex){c.error(c,{message:"Could not get private key.",cause:ex,send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}})}null===privateKey?c.error(c,{message:"No private key set.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.internal_error}}):b=privateKey.sign(b,null);callback(c,b)};c$jscomp$0.getSignature(c$jscomp$0,
b$jscomp$0,callback$jscomp$0)};tls.createCertificateVerify=function(c,signature){c=signature.length+2;var rval=forge.util.createBuffer();rval.putByte(tls.HandshakeType.certificate_verify);rval.putInt24(c);rval.putInt16(signature.length);rval.putBytes(signature);return rval};tls.createCertificateRequest=function(c){var certTypes=forge.util.createBuffer();certTypes.putByte(1);var cAs=forge.util.createBuffer();for(key in c.caStore.certs){var dn=forge.pki.distinguishedNameToAsn1(c.caStore.certs[key].subject);
dn=forge.asn1.toDer(dn);cAs.putInt16(dn.length());cAs.putBuffer(dn)}c=1+certTypes.length()+2+cAs.length();var key=forge.util.createBuffer();key.putByte(tls.HandshakeType.certificate_request);key.putInt24(c);writeVector(key,1,certTypes);writeVector(key,2,cAs);return key};tls.createServerHelloDone=function(c){c=forge.util.createBuffer();c.putByte(tls.HandshakeType.server_hello_done);c.putInt24(0);return c};tls.createChangeCipherSpec=function(){var rval=forge.util.createBuffer();rval.putByte(1);return rval};
tls.createFinished=function(c){var b=forge.util.createBuffer();b.putBuffer(c.session.md5.digest());b.putBuffer(c.session.sha1.digest());b=prf_TLS1(c.session.sp.master_secret,c.entity===tls.ConnectionEnd.client?"client finished":"server finished",b.getBytes(),12);c=forge.util.createBuffer();c.putByte(tls.HandshakeType.finished);c.putInt24(b.length());c.putBuffer(b);return c};tls.createHeartbeat=function(type,payload,payloadLength){"undefined"===typeof payloadLength&&(payloadLength=payload.length);
var rval=forge.util.createBuffer();rval.putByte(type);rval.putInt16(payloadLength);rval.putBytes(payload);type=rval.length();rval.putBytes(forge.random.getBytes(Math.max(16,type-payloadLength-3)));return rval};tls.queue=function(c,record){if(record&&(0!==record.fragment.length()||record.type!==tls.ContentType.handshake&&record.type!==tls.ContentType.alert&&record.type!==tls.ContentType.change_cipher_spec)){if(record.type===tls.ContentType.handshake){var bytes=record.fragment.bytes();c.session.md5.update(bytes);
c.session.sha1.update(bytes)}if(record.fragment.length()<=tls.MaxFragment)bytes=[record];else{bytes=[];for(var data=record.fragment.bytes();data.length>tls.MaxFragment;)bytes.push(tls.createRecord(c,{type:record.type,data:forge.util.createBuffer(data.slice(0,tls.MaxFragment))})),data=data.slice(tls.MaxFragment);0<data.length&&bytes.push(tls.createRecord(c,{type:record.type,data:forge.util.createBuffer(data)}))}for(record=0;record<bytes.length&&!c.fail;++record)data=bytes[record],c.state.current.write.update(c,
data)&&c.records.push(data)}};tls.flush=function(c){for(var i=0;i<c.records.length;++i){var record=c.records[i];c.tlsData.putByte(record.type);c.tlsData.putByte(record.version.major);c.tlsData.putByte(record.version.minor);c.tlsData.putInt16(record.fragment.length());c.tlsData.putBuffer(c.records[i].fragment)}c.records=[];return c.tlsDataReady(c)};var _certErrorToAlertDesc=function(error){switch(error){case !0:return!0;case forge.pki.certificateError.bad_certificate:return tls.Alert.Description.bad_certificate;
case forge.pki.certificateError.unsupported_certificate:return tls.Alert.Description.unsupported_certificate;case forge.pki.certificateError.certificate_revoked:return tls.Alert.Description.certificate_revoked;case forge.pki.certificateError.certificate_expired:return tls.Alert.Description.certificate_expired;case forge.pki.certificateError.certificate_unknown:return tls.Alert.Description.certificate_unknown;case forge.pki.certificateError.unknown_ca:return tls.Alert.Description.unknown_ca;default:return tls.Alert.Description.bad_certificate}},
_alertDescToCertError=function(desc){switch(desc){case !0:return!0;case tls.Alert.Description.bad_certificate:return forge.pki.certificateError.bad_certificate;case tls.Alert.Description.unsupported_certificate:return forge.pki.certificateError.unsupported_certificate;case tls.Alert.Description.certificate_revoked:return forge.pki.certificateError.certificate_revoked;case tls.Alert.Description.certificate_expired:return forge.pki.certificateError.certificate_expired;case tls.Alert.Description.certificate_unknown:return forge.pki.certificateError.certificate_unknown;
case tls.Alert.Description.unknown_ca:return forge.pki.certificateError.unknown_ca;default:return forge.pki.certificateError.bad_certificate}};tls.verifyCertificateChain=function(c,chain$jscomp$0){try{var options={},key;for(key in c.verifyOptions)options[key]=c.verifyOptions[key];options.verify=function(vfd,depth,chain){_certErrorToAlertDesc(vfd);depth=c.verify(c,vfd,depth,chain);if(!0!==depth){if("object"===typeof depth&&!forge.util.isArray(depth))throw vfd=Error("The application rejected the certificate."),
vfd.send=!0,vfd.alert={level:tls.Alert.Level.fatal,description:tls.Alert.Description.bad_certificate},depth.message&&(vfd.message=depth.message),depth.alert&&(vfd.alert.description=depth.alert),vfd;depth!==vfd&&(depth=_alertDescToCertError(depth))}return depth};forge.pki.verifyCertificateChain(c.caStore,chain$jscomp$0,options)}catch(ex){chain$jscomp$0=ex;if("object"!==typeof chain$jscomp$0||forge.util.isArray(chain$jscomp$0))chain$jscomp$0={send:!0,alert:{level:tls.Alert.Level.fatal,description:_certErrorToAlertDesc(ex)}};
"send"in chain$jscomp$0||(chain$jscomp$0.send=!0);"alert"in chain$jscomp$0||(chain$jscomp$0.alert={level:tls.Alert.Level.fatal,description:_certErrorToAlertDesc(chain$jscomp$0.error)});c.error(c,chain$jscomp$0)}return!c.fail};tls.createSessionCache=function(cache,capacity){var rval=null;if(cache&&cache.getSession&&cache.setSession&&cache.order)rval=cache;else{rval={};rval.cache=cache||{};rval.capacity=Math.max(capacity||100,1);rval.order=[];for(var key$jscomp$0 in cache)rval.order.length<=capacity?
rval.order.push(key$jscomp$0):delete cache[key$jscomp$0];rval.getSession=function(sessionId){var session=null,key=null;sessionId?key=forge.util.bytesToHex(sessionId):0<rval.order.length&&(key=rval.order[0]);if(null!==key&&key in rval.cache){session=rval.cache[key];delete rval.cache[key];for(var i in rval.order)if(rval.order[i]===key){rval.order.splice(i,1);break}}return session};rval.setSession=function(sessionId,session){if(rval.order.length===rval.capacity){var key=rval.order.shift();delete rval.cache[key]}key=
forge.util.bytesToHex(sessionId);rval.order.push(key);rval.cache[key]=session}}return rval};tls.createConnection=function(options){var caStore=null;caStore=options.caStore?forge.util.isArray(options.caStore)?forge.pki.createCaStore(options.caStore):options.caStore:forge.pki.createCaStore();var cipherSuites=options.cipherSuites||null;if(null===cipherSuites){cipherSuites=[];for(var key in tls.CipherSuites)cipherSuites.push(tls.CipherSuites[key])}key=options.server?tls.ConnectionEnd.server:tls.ConnectionEnd.client;
var sessionCache=options.sessionCache?tls.createSessionCache(options.sessionCache):null,c$jscomp$0={version:{major:tls.Version.major,minor:tls.Version.minor},entity:key,sessionId:options.sessionId,caStore:caStore,sessionCache:sessionCache,cipherSuites:cipherSuites,connected:options.connected,virtualHost:options.virtualHost||null,verifyClient:options.verifyClient||!1,verify:options.verify||function(cn,vfd,dpth,cts){return vfd},verifyOptions:options.verifyOptions||{},getCertificate:options.getCertificate||
null,getPrivateKey:options.getPrivateKey||null,getSignature:options.getSignature||null,input:forge.util.createBuffer(),tlsData:forge.util.createBuffer(),data:forge.util.createBuffer(),tlsDataReady:options.tlsDataReady,dataReady:options.dataReady,heartbeatReceived:options.heartbeatReceived,closed:options.closed,error:function(c,ex){ex.origin=ex.origin||(c.entity===tls.ConnectionEnd.client?"client":"server");ex.send&&(tls.queue(c,tls.createAlert(c,ex.alert)),tls.flush(c));var fatal=!1!==ex.fatal;fatal&&
(c.fail=!0);options.error(c,ex);fatal&&c.close(!1)},deflate:options.deflate||null,inflate:options.inflate||null,reset:function(clearFail){c$jscomp$0.version={major:tls.Version.major,minor:tls.Version.minor};c$jscomp$0.record=null;c$jscomp$0.session=null;c$jscomp$0.peerCertificate=null;c$jscomp$0.state={pending:null,current:null};c$jscomp$0.expect=0;c$jscomp$0.fragmented=null;c$jscomp$0.records=[];c$jscomp$0.open=!1;c$jscomp$0.handshakes=0;c$jscomp$0.handshaking=!1;c$jscomp$0.isConnected=!1;c$jscomp$0.fail=
!(clearFail||"undefined"===typeof clearFail);c$jscomp$0.input.clear();c$jscomp$0.tlsData.clear();c$jscomp$0.data.clear();c$jscomp$0.state.current=tls.createConnectionState(c$jscomp$0)}};c$jscomp$0.reset();c$jscomp$0.handshake=function(sessionId){if(c$jscomp$0.entity!==tls.ConnectionEnd.client)c$jscomp$0.error(c$jscomp$0,{message:"Cannot initiate handshake as a server.",fatal:!1});else if(c$jscomp$0.handshaking)c$jscomp$0.error(c$jscomp$0,{message:"Handshake already in progress.",fatal:!1});else{c$jscomp$0.fail&&
!c$jscomp$0.open&&0===c$jscomp$0.handshakes&&(c$jscomp$0.fail=!1);c$jscomp$0.handshaking=!0;sessionId=sessionId||"";var session=null;0<sessionId.length&&(c$jscomp$0.sessionCache&&(session=c$jscomp$0.sessionCache.getSession(sessionId)),null===session&&(sessionId=""));0===sessionId.length&&c$jscomp$0.sessionCache&&(session=c$jscomp$0.sessionCache.getSession(),null!==session&&(sessionId=session.id));c$jscomp$0.session={id:sessionId,version:null,cipherSuite:null,compressionMethod:null,serverCertificate:null,
certificateRequest:null,clientCertificate:null,sp:{},md5:forge.md.md5.create(),sha1:forge.md.sha1.create()};session&&(c$jscomp$0.version=session.version,c$jscomp$0.session.sp=session.sp);c$jscomp$0.session.sp.client_random=tls.createRandom().getBytes();c$jscomp$0.open=!0;tls.queue(c$jscomp$0,tls.createRecord(c$jscomp$0,{type:tls.ContentType.handshake,data:tls.createClientHello(c$jscomp$0)}));tls.flush(c$jscomp$0)}};c$jscomp$0.process=function(data){var rval=0;data&&c$jscomp$0.input.putBytes(data);
if(!c$jscomp$0.fail){null!==c$jscomp$0.record&&c$jscomp$0.record.ready&&c$jscomp$0.record.fragment.isEmpty()&&(c$jscomp$0.record=null);if(null===c$jscomp$0.record){rval=0;data=c$jscomp$0.input;var len=data.length();5>len?rval=5-len:(c$jscomp$0.record={type:data.getByte(),version:{major:data.getByte(),minor:data.getByte()},length:data.getInt16(),fragment:forge.util.createBuffer(),ready:!1},(data=c$jscomp$0.record.version.major===c$jscomp$0.version.major)&&c$jscomp$0.session&&c$jscomp$0.session.version&&
(data=c$jscomp$0.record.version.minor===c$jscomp$0.version.minor),data||c$jscomp$0.error(c$jscomp$0,{message:"Incompatible TLS version.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.protocol_version}}))}if(!c$jscomp$0.fail&&null!==c$jscomp$0.record&&!c$jscomp$0.record.ready){rval=c$jscomp$0;data=0;len=rval.input;var len$jscomp$0=len.length();len$jscomp$0<rval.record.length?data=rval.record.length-len$jscomp$0:(rval.record.fragment.putBytes(len.getBytes(rval.record.length)),
len.compact(),rval.state.current.read.update(rval,rval.record)&&(null!==rval.fragmented&&(rval.fragmented.type===rval.record.type?(rval.fragmented.fragment.putBuffer(rval.record.fragment),rval.record=rval.fragmented):rval.error(rval,{message:"Invalid fragmented record.",send:!0,alert:{level:tls.Alert.Level.fatal,description:tls.Alert.Description.unexpected_message}})),rval.record.ready=!0));rval=data}if(!c$jscomp$0.fail&&null!==c$jscomp$0.record&&c$jscomp$0.record.ready)if(data=c$jscomp$0.record,
len=data.type-tls.ContentType.change_cipher_spec,len$jscomp$0=ctTable[c$jscomp$0.entity][c$jscomp$0.expect],len in len$jscomp$0)len$jscomp$0[len](c$jscomp$0,data);else tls.handleUnexpected(c$jscomp$0,data)}return rval};c$jscomp$0.prepare=function(data){tls.queue(c$jscomp$0,tls.createRecord(c$jscomp$0,{type:tls.ContentType.application_data,data:forge.util.createBuffer(data)}));return tls.flush(c$jscomp$0)};c$jscomp$0.prepareHeartbeatRequest=function(payload,payloadLength){payload instanceof forge.util.ByteBuffer&&
(payload=payload.bytes());"undefined"===typeof payloadLength&&(payloadLength=payload.length);c$jscomp$0.expectedHeartbeatPayload=payload;tls.queue(c$jscomp$0,tls.createRecord(c$jscomp$0,{type:tls.ContentType.heartbeat,data:tls.createHeartbeat(tls.HeartbeatMessageType.heartbeat_request,payload,payloadLength)}));return tls.flush(c$jscomp$0)};c$jscomp$0.close=function(clearFail){if(!c$jscomp$0.fail&&c$jscomp$0.sessionCache&&c$jscomp$0.session){var session={id:c$jscomp$0.session.id,version:c$jscomp$0.session.version,
sp:c$jscomp$0.session.sp};session.sp.keys=null;c$jscomp$0.sessionCache.setSession(session.id,session)}if(c$jscomp$0.open){c$jscomp$0.open=!1;c$jscomp$0.input.clear();if(c$jscomp$0.isConnected||c$jscomp$0.handshaking)c$jscomp$0.isConnected=c$jscomp$0.handshaking=!1,tls.queue(c$jscomp$0,tls.createAlert(c$jscomp$0,{level:tls.Alert.Level.warning,description:tls.Alert.Description.close_notify})),tls.flush(c$jscomp$0);c$jscomp$0.closed(c$jscomp$0)}c$jscomp$0.reset(clearFail)};return c$jscomp$0};module.exports=
forge.tls=forge.tls||{};for(var key$jscomp$1 in tls)"function"!==typeof tls[key$jscomp$1]&&(forge.tls[key$jscomp$1]=tls[key$jscomp$1]);forge.tls.prf_tls1=prf_TLS1;forge.tls.hmac_sha1=function(key,seqNum,record){var hmac=forge.hmac.create();hmac.start("SHA1",key);key=forge.util.createBuffer();key.putInt32(seqNum[0]);key.putInt32(seqNum[1]);key.putByte(record.type);key.putByte(record.version.major);key.putByte(record.version.minor);key.putInt16(record.length);key.putBytes(record.fragment.bytes());hmac.update(key.getBytes());
return hmac.digest().getBytes()};forge.tls.createSessionCache=tls.createSessionCache;forge.tls.createConnection=tls.createConnection}
//# sourceMappingURL=module$node_modules$node_forge$lib$tls.js.map
