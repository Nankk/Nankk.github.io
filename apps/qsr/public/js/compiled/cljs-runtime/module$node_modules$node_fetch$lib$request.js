shadow$provide.module$node_modules$node_fetch$lib$request=function(global,require,module,exports){function Request(input,init){if(input instanceof Request){var url=input.url;var url_parsed=parse_url(url)}else url=input,url_parsed=parse_url(url),input={};init=init||{};this.method=init.method||input.method||"GET";this.redirect=init.redirect||input.redirect||"follow";this.headers=new Headers(init.headers||input.headers||{});this.url=url;this.follow=void 0!==init.follow?init.follow:void 0!==input.follow?
input.follow:20;this.compress=void 0!==init.compress?init.compress:void 0!==input.compress?input.compress:!0;this.counter=init.counter||input.counter||0;this.agent=init.agent||input.agent;Body.call(this,init.body||this._clone(input),{timeout:init.timeout||input.timeout||0,size:init.size||input.size||0});this.protocol=url_parsed.protocol;this.hostname=url_parsed.hostname;this.port=url_parsed.port;this.path=url_parsed.path;this.auth=url_parsed.auth}var parse_url=require("module$node_modules$url$url").parse,
Headers=require("module$node_modules$node_fetch$lib$headers"),Body=require("module$node_modules$node_fetch$lib$body");module.exports=Request;Request.prototype=Object.create(Body.prototype);Request.prototype.clone=function(){return new Request(this)}}
//# sourceMappingURL=module$node_modules$node_fetch$lib$request.js.map
