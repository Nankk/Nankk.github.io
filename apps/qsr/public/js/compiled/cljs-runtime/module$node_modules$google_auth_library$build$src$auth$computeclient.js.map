{
"version":3,
"file":"module$node_modules$google_auth_library$build$src$auth$computeclient.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/google-auth-library/build/src/auth/computeclient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_auth_library$build$src$auth$computeclient\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2013 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst arrify = require(\"arrify\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst messages = require(\"../messages\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass Compute extends oauth2client_1.OAuth2Client {\n    /**\n     * Google Compute Engine service account credentials.\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options = {}) {\n        super(options);\n        // Start with an expired refresh token, which will automatically be\n        // refreshed before the first API call is made.\n        this.credentials = { expiry_date: 1, refresh_token: 'compute-placeholder' };\n        this.serviceAccountEmail = options.serviceAccountEmail || 'default';\n        this.scopes = arrify(options.scopes);\n    }\n    /**\n     * Indicates whether the credential requires scopes to be created by calling\n     * createdScoped before use.\n     * @deprecated\n     * @return Boolean indicating if scope is required.\n     */\n    createScopedRequired() {\n        // On compute engine, scopes are specified at the compute instance's\n        // creation time, and cannot be changed. For this reason, always return\n        // false.\n        messages.warn(messages.COMPUTE_CREATE_SCOPED_DEPRECATED);\n        return false;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken Unused parameter\n     */\n    async refreshTokenNoCache(refreshToken) {\n        const tokenPath = `service-accounts/${this.serviceAccountEmail}/token`;\n        let data;\n        try {\n            const instanceOptions = {\n                property: tokenPath,\n            };\n            if (this.scopes.length > 0) {\n                instanceOptions.params = {\n                    scopes: this.scopes.join(','),\n                };\n            }\n            data = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not refresh access token: ${e.message}`;\n            this.wrapError(e);\n            throw e;\n        }\n        const tokens = data;\n        if (data && data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res: null };\n    }\n    wrapError(e) {\n        const res = e.response;\n        if (res && res.status) {\n            e.code = res.status.toString();\n            if (res.status === 403) {\n                e.message =\n                    'A Forbidden error was returned while attempting to retrieve an access ' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have the correct permission scopes specified: ' +\n                        e.message;\n            }\n            else if (res.status === 404) {\n                e.message =\n                    'A Not Found error was returned while attempting to retrieve an access' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have any permission scopes specified: ' +\n                        e.message;\n            }\n        }\n    }\n}\nexports.Compute = Compute;\n//# sourceMappingURL=computeclient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","arrify","gcpMetadata","messages","oauth2client_1","Compute","constructor","options","credentials","expiry_date","refresh_token","serviceAccountEmail","scopes","OAuth2Client","createScopedRequired","warn","COMPUTE_CREATE_SCOPED_DEPRECATED","refreshTokenNoCache","refreshToken","tokenPath","data","instanceOptions","e","tokens","property","length","params","join","instance","message","wrapError","expires_in","getTime","Date","emit","res","response","status","code","toString"]
}
