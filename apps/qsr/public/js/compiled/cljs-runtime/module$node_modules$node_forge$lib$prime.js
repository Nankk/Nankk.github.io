shadow$provide.module$node_modules$node_forge$lib$prime=function(global,require,module,exports){var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$util");require("module$node_modules$node_forge$lib$jsbn");require("module$node_modules$node_forge$lib$random");(function(){function primeincFindPrime(bits,rng,options,callback){return"workers"in options?primeincFindPrimeWithWorkers(bits,rng,options,callback):primeincFindPrimeWithoutWorkers(bits,rng,
options,callback)}function primeincFindPrimeWithoutWorkers(bits,rng,options,callback){var num=generateRandom(bits,rng);var mrTests=num.bitLength();mrTests=100>=mrTests?27:150>=mrTests?18:200>=mrTests?15:250>=mrTests?12:300>=mrTests?9:350>=mrTests?8:400>=mrTests?7:500>=mrTests?6:600>=mrTests?5:800>=mrTests?4:1250>=mrTests?3:2;"millerRabinTests"in options&&(mrTests=options.millerRabinTests);var maxBlockTime=10;"maxBlockTime"in options&&(maxBlockTime=options.maxBlockTime);_primeinc(num,bits,rng,0,mrTests,
maxBlockTime,callback)}function _primeinc(num,bits,rng,deltaIdx,mrTests,maxBlockTime,callback){var start=+new Date;do{num.bitLength()>bits&&(num=generateRandom(bits,rng));if(num.isProbablePrime(mrTests))return callback(null,num);num.dAddOffset(GCD_30_DELTA[deltaIdx++%8],0)}while(0>maxBlockTime||+new Date-start<maxBlockTime);forge.util.setImmediate(function(){_primeinc(num,bits,rng,deltaIdx,mrTests,maxBlockTime,callback)})}function primeincFindPrimeWithWorkers(bits,rng,options,callback){function generate(){function workerMessage(e){if(!found){--running;
var data=e.data;if(data.found){for(e=0;e<workers.length;++e)workers[e].terminate();found=!0;return callback(null,new BigInteger(data.prime,16))}num.bitLength()>bits&&(num=generateRandom(bits,rng));data=num.toString(16);e.target.postMessage({hex:data,workLoad:workLoad});num.dAddOffset(range,0)}}numWorkers=Math.max(1,numWorkers);for(var workers=[],i=0;i<numWorkers;++i)workers[i]=new Worker(workerScript);var running=numWorkers;for(i=0;i<numWorkers;++i)workers[i].addEventListener("message",workerMessage);
var found=!1}if("undefined"===typeof Worker)return primeincFindPrimeWithoutWorkers(bits,rng,options,callback);var num=generateRandom(bits,rng),numWorkers=options.workers,workLoad=options.workLoad||100,range=30*workLoad/8,workerScript=options.workerScript||"forge/prime.worker.js";if(-1===numWorkers)return forge.util.estimateCores(function(err,cores){err&&(cores=2);numWorkers=cores-1;generate()});generate()}function generateRandom(bits,rng){rng=new BigInteger(bits,rng);--bits;rng.testBit(bits)||rng.bitwiseTo(BigInteger.ONE.shiftLeft(bits),
op_or,rng);rng.dAddOffset(31-rng.mod(THIRTY).byteValue(),0);return rng}if(forge.prime)module.exports=forge.prime;else{var prime=module.exports=forge.prime=forge.prime||{},BigInteger=forge.jsbn.BigInteger,GCD_30_DELTA=[6,4,2,4,2,4,6,2],THIRTY=new BigInteger(null);THIRTY.fromInt(30);var op_or=function(x,y){return x|y};prime.generateProbablePrime=function(bits,options,callback){"function"===typeof options&&(callback=options,options={});options=options||{};var algorithm=options.algorithm||"PRIMEINC";
"string"===typeof algorithm&&(algorithm={name:algorithm});algorithm.options=algorithm.options||{};var prng=options.prng||forge.random;options={nextBytes:function(x){for(var b=prng.getBytesSync(x.length),i=0;i<x.length;++i)x[i]=b.charCodeAt(i)}};if("PRIMEINC"===algorithm.name)return primeincFindPrime(bits,options,algorithm.options,callback);throw Error("Invalid prime generation algorithm: "+algorithm.name);}}})()}
//# sourceMappingURL=module$node_modules$node_forge$lib$prime.js.map
