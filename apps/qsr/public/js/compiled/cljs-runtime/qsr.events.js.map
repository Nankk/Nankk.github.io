{"version":3,"sources":["qsr/events.cljs"],"mappings":";;;;AAKA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AACE,AAACC,AAAQC;;AACTA;;AAEH,AAAA,AAACH,AAEA,AAAAI,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASJ;AAAT,AAAAK,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAAMC,AAAO,AAAA,AAACC,AAAOF;AAArB,AACE,AAAA,AAACG,AAAMJ,AAAU,AAAA,AAACK,AAAQ,AAACC,AACA;AAAKC,AAAEC;AAAP,AACE,AAAMC,AAAQ,AAACC,AAAMF;AACfG,AAAO,AAACC,AAAO,AAAA,AAACC,AAAiCJ;AADvD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGOE,AACGJ,AACF,AAAA,AAAkDI;;AAC5DT;;AAEhC,AAAA,AAACT,AAEA,AAAAqB,AAAKd;AAAL,AAAA,AAAAe,AAAAD;AAAA,AAAAf,AAAAgB,AAAA,AAAA,AAASrB;AAAT,AAAAK,AAAAgB,AAAA,AAAA,AAAWC;AAAX,AACE,AAAMC,AAAM,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAClB,AAAAA,AAAAA;;AACPmB,AAAW,AAACT,AAAM,AAAA,AAACY;AAADF,AAAAC;AAAA,AAAe,AAAM,AAACE,AAAE,AAAAC,AAAA;AAAA,AAAA,AAAAH,AAAAA,AAAAG,AAAAH,AAAAG;AAAS,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACT,AAAAA,AAAAA;;AAAnB,AAAAI;;AAAA;;;AAAkCH;AACnES,AAAc,AAAA,AAACC,AAAO3B,AAAU;AAAKgB;AAAL,AACE,AAAA,AAACX,AAAQ,AAAA,AAACwB;AAADD;AAAA,AAAM,AAAAA,AAAA,AAAA,AAACxB;;AAA0BY;;;AAHlF,AAIE,AAACrB,AAAQ+B;;AACT,AAAA,AAAA,AAAA,AAAA,AAACI,AAAUJ,AAAsBP;;AAAjC,AAAyD,AAAA,AAACY","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","_","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","qsr.db/default-db","p__32266","vec__32267","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","vs","vs-sub","cljs.core.subvec.cljs$core$IFn$_invoke$arity$2","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","i","v","url-raw","cljs.core/first","img-id","cljs.core/second","cljs.core/re-matches","p__32273","vec__32274","item","items","G__32277","select-idx","p1__32271#","p2__32270#","cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__32278","G__32279","unselected-db","cljs.core.update.cljs$core$IFn$_invoke$arity$3","p1__32272#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core/constantly"],"sourcesContent":["(ns qsr.events\n  (:require\n   [re-frame.core :as re-frame]\n   [qsr.db :as db]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   (println db/default-db)\n   db/default-db))\n\n(re-frame/reg-event-db\n ::set-items\n (fn [db [_ vs]]\n   (let [vs-sub (subvec vs 3)]\n     (assoc db :items (into [] (map-indexed\n                                (fn [i v]\n                                  (let [url-raw (first v)\n                                        img-id (second (re-matches #\".*file/d/([^/]+).*\" url-raw))]\n                                    {:name \"sample\"\n                                     :id img-id\n                                     :index i\n                                     :url (str \"http://drive.google.com/uc?export=view&id=\" img-id)}))\n                                vs-sub))))))\n\n(re-frame/reg-event-db\n ::select-item\n (fn [db [_ item]]\n   (let [items (db :items)\n         select-idx (first (keep-indexed #(when (= (%2 :id) (item :id)) %1) items))\n         unselected-db (update db :items (fn [item]\n                                           (into [] (map #(assoc % :selected? false) item))))]\n     (println unselected-db)\n     (update-in unselected-db [:items select-idx :selected?] #(constantly true)))))\n"]}