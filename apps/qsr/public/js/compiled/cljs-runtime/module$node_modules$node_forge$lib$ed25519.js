shadow$provide.module$node_modules$node_forge$lib$ed25519=function(global,require,module,exports){function messageToNativeBuffer(options){var message=options.message;if(message instanceof Uint8Array||message instanceof NativeBuffer)return message;var encoding=options.encoding;if(void 0===message)if(options.md)message=options.md.digest().getBytes(),encoding="binary";else throw new TypeError('"options.message" or "options.md" not specified.');if("string"===typeof message&&!encoding)throw new TypeError('"options.encoding" must be "binary" or "utf8".');
if("string"===typeof message){if("undefined"!==typeof Buffer)return Buffer.from(message,encoding);message=new ByteBuffer(message,encoding)}else if(!(message instanceof ByteBuffer))throw new TypeError('"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.');options=new NativeBuffer(message.length());for(encoding=0;encoding<options.length;++encoding)options[encoding]=message.at(encoding);return options}function sha512(msg,
msgLen){var md=forge.md.sha512.create();msg=new ByteBuffer(msg);md.update(msg.getBytes(msgLen),"binary");msgLen=md.digest().getBytes();if("undefined"!==typeof Buffer)return Buffer.from(msgLen,"binary");md=new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);for(msg=0;64>msg;++msg)md[msg]=msgLen.charCodeAt(msg);return md}function modL(r,x){var i,k;for(i=63;32<=i;--i){var carry=0;var j=i-32;for(k=i-12;j<k;++j)x[j]+=carry-16*x[i]*L[j-(i-32)],carry=x[j]+128>>8,x[j]-=256*carry;x[j]+=carry;x[i]=0}for(j=
carry=0;32>j;++j)x[j]+=carry-(x[31]>>4)*L[j],carry=x[j]>>8,x[j]&=255;for(j=0;32>j;++j)x[j]-=carry*L[j];for(i=0;32>i;++i)x[i+1]+=x[i]>>8,r[i]=x[i]&255}function reduce(r){for(var x=new Float64Array(64),i=0;64>i;++i)x[i]=r[i],r[i]=0;modL(r,x)}function add(p,q){var a=gf(),b=gf(),c=gf(),d=gf(),e=gf(),f=gf(),g=gf(),h=gf(),t=gf();Z(a,p[1],p[0]);Z(t,q[1],q[0]);M(a,a,t);A(b,p[0],p[1]);A(t,q[0],q[1]);M(b,b,t);M(c,p[3],q[3]);M(c,c,D2);M(d,p[2],q[2]);A(d,d,d);Z(e,b,a);Z(f,d,c);A(g,d,c);A(h,b,a);M(p[0],e,f);M(p[1],
h,g);M(p[2],g,f);M(p[3],e,h)}function pack(r,p){var tx=gf(),ty=gf(),zi=gf(),i=p[2],c=gf(),a;for(a=0;16>a;++a)c[a]=i[a];for(a=253;0<=a;--a)M(c,c,c),2!==a&&4!==a&&M(c,c,i);for(a=0;16>a;++a)zi[a]=c[a];M(tx,p[0],zi);M(ty,p[1],zi);pack25519(r,ty);r[31]^=par25519(tx)<<7}function pack25519(o,n){var i,m=gf(),t=gf();for(i=0;16>i;++i)t[i]=n[i];car25519(t);car25519(t);car25519(t);for(n=0;2>n;++n){m[0]=t[0]-65517;for(i=1;15>i;++i)m[i]=t[i]-65535-(m[i-1]>>16&1),m[i-1]&=65535;m[15]=t[15]-32767-(m[14]>>16&1);i=
m[15]>>16&1;m[14]&=65535;sel25519(t,m,1-i)}for(i=0;16>i;i++)o[2*i]=t[i]&255,o[2*i+1]=t[i]>>8}function neq25519(a,b){var c=new NativeBuffer(32),d=new NativeBuffer(32);pack25519(c,a);pack25519(d,b);return crypto_verify_32(c,0,d,0)}function crypto_verify_32(x,xi,y,yi){var i,d=0;for(i=0;32>i;++i)d|=x[xi+i]^y[yi+i];return(1&d-1>>>8)-1}function par25519(a){var d=new NativeBuffer(32);pack25519(d,a);return d[0]&1}function scalarmult(p$jscomp$0,q$jscomp$0,s){var i;set25519(p$jscomp$0[0],gf0);set25519(p$jscomp$0[1],
gf1);set25519(p$jscomp$0[2],gf1);set25519(p$jscomp$0[3],gf0);for(i=255;0<=i;--i){var b=s[i/8|0]>>(i&7)&1;for(var p=p$jscomp$0,q=q$jscomp$0,b$jscomp$0=b,i$jscomp$0=0;4>i$jscomp$0;++i$jscomp$0)sel25519(p[i$jscomp$0],q[i$jscomp$0],b$jscomp$0);add(q$jscomp$0,p$jscomp$0);add(p$jscomp$0,p$jscomp$0);p=p$jscomp$0;q=q$jscomp$0;for(b$jscomp$0=0;4>b$jscomp$0;++b$jscomp$0)sel25519(p[b$jscomp$0],q[b$jscomp$0],b)}}function scalarbase(p,s){var q=[gf(),gf(),gf(),gf()];set25519(q[0],X);set25519(q[1],Y);set25519(q[2],
gf1);M(q[3],X,Y);scalarmult(p,q,s)}function set25519(r,a){var i;for(i=0;16>i;i++)r[i]=a[i]|0}function car25519(o){var i,c=1;for(i=0;16>i;++i){var v=o[i]+c+65535;c=Math.floor(v/65536);o[i]=v-65536*c}o[0]+=c-1+37*(c-1)}function sel25519(p,q,b){for(var c=~(b-1),i=0;16>i;++i)b=c&(p[i]^q[i]),p[i]^=b,q[i]^=b}function gf(init){var i,r=new Float64Array(16);if(init)for(i=0;i<init.length;++i)r[i]=init[i];return r}function A(o,a,b){for(var i=0;16>i;++i)o[i]=a[i]+b[i]}function Z(o,a,b){for(var i=0;16>i;++i)o[i]=
a[i]-b[i]}function M(o,a,b){var b0=b[0],b1=b[1],b2=b[2],b3=b[3],b4=b[4],b5=b[5],b6=b[6],b7=b[7],b8=b[8],b9=b[9],b10=b[10],b11=b[11],b12=b[12],b13=b[13],b14=b[14],b15=b[15];b=a[0];var t0=b*b0;var t1=b*b1;var t2=b*b2;var t3=b*b3;var t4=b*b4;var t5=b*b5;var t6=b*b6;var t7=b*b7;var t8=b*b8;var t9=b*b9;var t10=b*b10;var t11=b*b11;var t12=b*b12;var t13=b*b13;var t14=b*b14;var t15=b*b15;b=a[1];t1+=b*b0;t2+=b*b1;t3+=b*b2;t4+=b*b3;t5+=b*b4;t6+=b*b5;t7+=b*b6;t8+=b*b7;t9+=b*b8;t10+=b*b9;t11+=b*b10;t12+=b*b11;
t13+=b*b12;t14+=b*b13;t15+=b*b14;var t16=b*b15;b=a[2];t2+=b*b0;t3+=b*b1;t4+=b*b2;t5+=b*b3;t6+=b*b4;t7+=b*b5;t8+=b*b6;t9+=b*b7;t10+=b*b8;t11+=b*b9;t12+=b*b10;t13+=b*b11;t14+=b*b12;t15+=b*b13;t16+=b*b14;var t17=b*b15;b=a[3];t3+=b*b0;t4+=b*b1;t5+=b*b2;t6+=b*b3;t7+=b*b4;t8+=b*b5;t9+=b*b6;t10+=b*b7;t11+=b*b8;t12+=b*b9;t13+=b*b10;t14+=b*b11;t15+=b*b12;t16+=b*b13;t17+=b*b14;var t18=b*b15;b=a[4];t4+=b*b0;t5+=b*b1;t6+=b*b2;t7+=b*b3;t8+=b*b4;t9+=b*b5;t10+=b*b6;t11+=b*b7;t12+=b*b8;t13+=b*b9;t14+=b*b10;t15+=
b*b11;t16+=b*b12;t17+=b*b13;t18+=b*b14;var t19=b*b15;b=a[5];t5+=b*b0;t6+=b*b1;t7+=b*b2;t8+=b*b3;t9+=b*b4;t10+=b*b5;t11+=b*b6;t12+=b*b7;t13+=b*b8;t14+=b*b9;t15+=b*b10;t16+=b*b11;t17+=b*b12;t18+=b*b13;t19+=b*b14;var t20=b*b15;b=a[6];t6+=b*b0;t7+=b*b1;t8+=b*b2;t9+=b*b3;t10+=b*b4;t11+=b*b5;t12+=b*b6;t13+=b*b7;t14+=b*b8;t15+=b*b9;t16+=b*b10;t17+=b*b11;t18+=b*b12;t19+=b*b13;t20+=b*b14;var t21=b*b15;b=a[7];t7+=b*b0;t8+=b*b1;t9+=b*b2;t10+=b*b3;t11+=b*b4;t12+=b*b5;t13+=b*b6;t14+=b*b7;t15+=b*b8;t16+=b*b9;t17+=
b*b10;t18+=b*b11;t19+=b*b12;t20+=b*b13;t21+=b*b14;var t22=b*b15;b=a[8];t8+=b*b0;t9+=b*b1;t10+=b*b2;t11+=b*b3;t12+=b*b4;t13+=b*b5;t14+=b*b6;t15+=b*b7;t16+=b*b8;t17+=b*b9;t18+=b*b10;t19+=b*b11;t20+=b*b12;t21+=b*b13;t22+=b*b14;var t23=b*b15;b=a[9];t9+=b*b0;t10+=b*b1;t11+=b*b2;t12+=b*b3;t13+=b*b4;t14+=b*b5;t15+=b*b6;t16+=b*b7;t17+=b*b8;t18+=b*b9;t19+=b*b10;t20+=b*b11;t21+=b*b12;t22+=b*b13;t23+=b*b14;var t24=b*b15;b=a[10];t10+=b*b0;t11+=b*b1;t12+=b*b2;t13+=b*b3;t14+=b*b4;t15+=b*b5;t16+=b*b6;t17+=b*b7;
t18+=b*b8;t19+=b*b9;t20+=b*b10;t21+=b*b11;t22+=b*b12;t23+=b*b13;t24+=b*b14;var t25=b*b15;b=a[11];t11+=b*b0;t12+=b*b1;t13+=b*b2;t14+=b*b3;t15+=b*b4;t16+=b*b5;t17+=b*b6;t18+=b*b7;t19+=b*b8;t20+=b*b9;t21+=b*b10;t22+=b*b11;t23+=b*b12;t24+=b*b13;t25+=b*b14;var t26=b*b15;b=a[12];t12+=b*b0;t13+=b*b1;t14+=b*b2;t15+=b*b3;t16+=b*b4;t17+=b*b5;t18+=b*b6;t19+=b*b7;t20+=b*b8;t21+=b*b9;t22+=b*b10;t23+=b*b11;t24+=b*b12;t25+=b*b13;t26+=b*b14;var t27=b*b15;b=a[13];t13+=b*b0;t14+=b*b1;t15+=b*b2;t16+=b*b3;t17+=b*b4;
t18+=b*b5;t19+=b*b6;t20+=b*b7;t21+=b*b8;t22+=b*b9;t23+=b*b10;t24+=b*b11;t25+=b*b12;t26+=b*b13;t27+=b*b14;var t28=b*b15;b=a[14];t14+=b*b0;t15+=b*b1;t16+=b*b2;t17+=b*b3;t18+=b*b4;t19+=b*b5;t20+=b*b6;t21+=b*b7;t22+=b*b8;t23+=b*b9;t24+=b*b10;t25+=b*b11;t26+=b*b12;t27+=b*b13;t28+=b*b14;var t29=b*b15;b=a[15];t15+=b*b0;t1+=38*(t17+b*b2);t2+=38*(t18+b*b3);t3+=38*(t19+b*b4);t4+=38*(t20+b*b5);t5+=38*(t21+b*b6);t6+=38*(t22+b*b7);t7+=38*(t23+b*b8);t8+=38*(t24+b*b9);t9+=38*(t25+b*b10);t10+=38*(t26+b*b11);t11+=
38*(t27+b*b12);t12+=38*(t28+b*b13);t13+=38*(t29+b*b14);t14+=38*b*b15;b=t0+38*(t16+b*b1)+1+65535;a=Math.floor(b/65536);t0=b-65536*a;b=t1+a+65535;a=Math.floor(b/65536);t1=b-65536*a;b=t2+a+65535;a=Math.floor(b/65536);t2=b-65536*a;b=t3+a+65535;a=Math.floor(b/65536);t3=b-65536*a;b=t4+a+65535;a=Math.floor(b/65536);t4=b-65536*a;b=t5+a+65535;a=Math.floor(b/65536);t5=b-65536*a;b=t6+a+65535;a=Math.floor(b/65536);t6=b-65536*a;b=t7+a+65535;a=Math.floor(b/65536);t7=b-65536*a;b=t8+a+65535;a=Math.floor(b/65536);
t8=b-65536*a;b=t9+a+65535;a=Math.floor(b/65536);t9=b-65536*a;b=t10+a+65535;a=Math.floor(b/65536);t10=b-65536*a;b=t11+a+65535;a=Math.floor(b/65536);t11=b-65536*a;b=t12+a+65535;a=Math.floor(b/65536);t12=b-65536*a;b=t13+a+65535;a=Math.floor(b/65536);t13=b-65536*a;b=t14+a+65535;a=Math.floor(b/65536);t14=b-65536*a;b=t15+a+65535;a=Math.floor(b/65536);t15=b-65536*a;t0+=a-1+37*(a-1);b=t0+1+65535;a=Math.floor(b/65536);t0=b-65536*a;b=t1+a+65535;a=Math.floor(b/65536);t1=b-65536*a;b=t2+a+65535;a=Math.floor(b/
65536);t2=b-65536*a;b=t3+a+65535;a=Math.floor(b/65536);t3=b-65536*a;b=t4+a+65535;a=Math.floor(b/65536);t4=b-65536*a;b=t5+a+65535;a=Math.floor(b/65536);t5=b-65536*a;b=t6+a+65535;a=Math.floor(b/65536);t6=b-65536*a;b=t7+a+65535;a=Math.floor(b/65536);t7=b-65536*a;b=t8+a+65535;a=Math.floor(b/65536);t8=b-65536*a;b=t9+a+65535;a=Math.floor(b/65536);t9=b-65536*a;b=t10+a+65535;a=Math.floor(b/65536);t10=b-65536*a;b=t11+a+65535;a=Math.floor(b/65536);t11=b-65536*a;b=t12+a+65535;a=Math.floor(b/65536);t12=b-65536*
a;b=t13+a+65535;a=Math.floor(b/65536);t13=b-65536*a;b=t14+a+65535;a=Math.floor(b/65536);t14=b-65536*a;b=t15+a+65535;a=Math.floor(b/65536);o[0]=t0+(a-1+37*(a-1));o[1]=t1;o[2]=t2;o[3]=t3;o[4]=t4;o[5]=t5;o[6]=t6;o[7]=t7;o[8]=t8;o[9]=t9;o[10]=t10;o[11]=t11;o[12]=t12;o[13]=t13;o[14]=t14;o[15]=b-65536*a}var Buffer=require("shadow$empty").Buffer,forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$jsbn");require("module$node_modules$node_forge$lib$random");
require("module$node_modules$node_forge$lib$sha512");require("module$node_modules$node_forge$lib$util");global=require("module$node_modules$node_forge$lib$asn1_validator");var publicKeyValidator=global.publicKeyValidator,privateKeyValidator=global.privateKeyValidator;if("undefined"===typeof BigInteger)var BigInteger=forge.jsbn.BigInteger;var ByteBuffer=forge.util.ByteBuffer,NativeBuffer="undefined"===typeof Buffer?Uint8Array:Buffer;forge.pki=forge.pki||{};module.exports=forge.pki.ed25519=forge.ed25519=
forge.ed25519||{};var ed25519=forge.ed25519;ed25519.constants={};ed25519.constants.PUBLIC_KEY_BYTE_LENGTH=32;ed25519.constants.PRIVATE_KEY_BYTE_LENGTH=64;ed25519.constants.SEED_BYTE_LENGTH=32;ed25519.constants.SIGN_BYTE_LENGTH=64;ed25519.constants.HASH_BYTE_LENGTH=64;ed25519.generateKeyPair=function(options){options=options||{};var seed=options.seed;if(void 0===seed)seed=forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);else if("string"===typeof seed){if(seed.length!==ed25519.constants.SEED_BYTE_LENGTH)throw new TypeError('"seed" must be '+
ed25519.constants.SEED_BYTE_LENGTH+" bytes in length.");}else if(!(seed instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, Uint8Array, or a binary string.');seed=messageToNativeBuffer({message:seed,encoding:"binary"});options=new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);for(var sk=new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH),i=0;32>i;++i)sk[i]=seed[i];seed=[gf(),gf(),gf(),gf()];i=sha512(sk,32);i[0]&=248;i[31]&=127;i[31]|=64;scalarbase(seed,i);
pack(options,seed);for(seed=0;32>seed;++seed)sk[seed+32]=options[seed];return{publicKey:options,privateKey:sk}};ed25519.privateKeyFromAsn1=function(obj){var capture={},errors=[];if(!forge.asn1.validate(obj,privateKeyValidator,capture,errors))throw capture=Error("Invalid Key."),capture.errors=errors,capture;errors=forge.asn1.derToOid(capture.privateKeyOid);obj=forge.oids.EdDSA25519;if(errors!==obj)throw Error('Invalid OID "'+errors+'"; OID must be "'+obj+'".');return{privateKeyBytes:messageToNativeBuffer({message:forge.asn1.fromDer(capture.privateKey).value,
encoding:"binary"})}};ed25519.publicKeyFromAsn1=function(obj){var capture={},errors=[];if(!forge.asn1.validate(obj,publicKeyValidator,capture,errors))throw capture=Error("Invalid Key."),capture.errors=errors,capture;errors=forge.asn1.derToOid(capture.publicKeyOid);obj=forge.oids.EdDSA25519;if(errors!==obj)throw Error('Invalid OID "'+errors+'"; OID must be "'+obj+'".');capture=capture.ed25519PublicKey;if(capture.length!==ed25519.constants.PUBLIC_KEY_BYTE_LENGTH)throw Error("Key length is invalid.");
return messageToNativeBuffer({message:capture,encoding:"binary"})};ed25519.publicKeyFromPrivateKey=function(options){options=options||{};options=messageToNativeBuffer({message:options.privateKey,encoding:"binary"});if(options.length!==ed25519.constants.PRIVATE_KEY_BYTE_LENGTH)throw new TypeError('"options.privateKey" must have a byte length of '+ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);for(var pk=new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH),i=0;i<pk.length;++i)pk[i]=options[32+i];
return pk};ed25519.sign=function(options){options=options||{};var msg=messageToNativeBuffer(options),privateKey=messageToNativeBuffer({message:options.privateKey,encoding:"binary"});if(privateKey.length===ed25519.constants.SEED_BYTE_LENGTH)privateKey=ed25519.generateKeyPair({seed:privateKey}).privateKey;else if(privateKey.length!==ed25519.constants.PRIVATE_KEY_BYTE_LENGTH)throw new TypeError('"options.privateKey" must have a byte length of '+ed25519.constants.SEED_BYTE_LENGTH+" or "+ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);
options=new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH+msg.length);var n=msg.length,sk=privateKey,x=new Float64Array(64),p=[gf(),gf(),gf(),gf()],d=sha512(sk,32);d[0]&=248;d[31]&=127;d[31]|=64;for(privateKey=0;privateKey<n;++privateKey)options[64+privateKey]=msg[privateKey];for(privateKey=0;32>privateKey;++privateKey)options[32+privateKey]=d[32+privateKey];msg=sha512(options.subarray(32),n+32);reduce(msg);scalarbase(p,msg);pack(options,p);for(privateKey=32;64>privateKey;++privateKey)options[privateKey]=
sk[privateKey];n=sha512(options,n+64);reduce(n);for(privateKey=32;64>privateKey;++privateKey)x[privateKey]=0;for(privateKey=0;32>privateKey;++privateKey)x[privateKey]=msg[privateKey];for(privateKey=0;32>privateKey;++privateKey)for(msg=0;32>msg;msg++)x[privateKey+msg]+=n[privateKey]*d[msg];modL(options.subarray(32),x);privateKey=new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);for(x=0;x<privateKey.length;++x)privateKey[x]=options[x];return privateKey};ed25519.verify=function(options){options=options||
{};var msg=messageToNativeBuffer(options);if(void 0===options.signature)throw new TypeError('"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.');var sig=messageToNativeBuffer({message:options.signature,encoding:"binary"});if(sig.length!==ed25519.constants.SIGN_BYTE_LENGTH)throw new TypeError('"options.signature" must have a byte length of '+ed25519.constants.SIGN_BYTE_LENGTH);var publicKey=messageToNativeBuffer({message:options.publicKey,encoding:"binary"});
if(publicKey.length!==ed25519.constants.PUBLIC_KEY_BYTE_LENGTH)throw new TypeError('"options.publicKey" must have a byte length of '+ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);options=new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH+msg.length);var m=new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH+msg.length),i;for(i=0;i<ed25519.constants.SIGN_BYTE_LENGTH;++i)options[i]=sig[i];for(i=0;i<msg.length;++i)options[i+ed25519.constants.SIGN_BYTE_LENGTH]=msg[i];msg=options.length;sig=new NativeBuffer(32);
i=[gf(),gf(),gf(),gf()];var q=[gf(),gf(),gf(),gf()];if(64>msg)options=-1;else{var t=gf();var i$jscomp$0=gf();var num=gf(),den=gf(),den2=gf(),den4=gf(),den6=gf();set25519(q[2],gf1);var o=q[1],i$jscomp$1;for(i$jscomp$1=0;16>i$jscomp$1;++i$jscomp$1)o[i$jscomp$1]=publicKey[2*i$jscomp$1]+(publicKey[2*i$jscomp$1+1]<<8);o[15]&=32767;o=q[1];M(num,o,o);M(den,num,D);Z(num,num,q[2]);A(den,q[2],den);M(den2,den,den);M(den4,den2,den2);M(den6,den4,den2);M(t,den6,num);M(t,t,den);den2=gf();for(den4=0;16>den4;++den4)den2[den4]=
t[den4];for(den4=250;0<=den4;--den4)M(den2,den2,den2),1!==den4&&M(den2,den2,t);for(den4=0;16>den4;++den4)t[den4]=den2[den4];M(t,t,num);M(t,t,den);M(t,t,den);M(q[0],t,den);t=q[0];M(i$jscomp$0,t,t);M(i$jscomp$0,i$jscomp$0,den);neq25519(i$jscomp$0,num)&&M(q[0],q[0],I);t=q[0];M(i$jscomp$0,t,t);M(i$jscomp$0,i$jscomp$0,den);neq25519(i$jscomp$0,num)?i$jscomp$0=-1:(par25519(q[0])===publicKey[31]>>7&&Z(q[0],gf0,q[0]),M(q[3],q[0],q[1]),i$jscomp$0=0);if(i$jscomp$0)options=-1;else{for(i$jscomp$0=0;i$jscomp$0<
msg;++i$jscomp$0)m[i$jscomp$0]=options[i$jscomp$0];for(i$jscomp$0=0;32>i$jscomp$0;++i$jscomp$0)m[i$jscomp$0+32]=publicKey[i$jscomp$0];publicKey=sha512(m,msg);reduce(publicKey);scalarmult(i,q,publicKey);scalarbase(q,options.subarray(32));add(i,q);pack(sig,i);msg-=64;if(crypto_verify_32(options,0,sig,0)){for(i$jscomp$0=0;i$jscomp$0<msg;++i$jscomp$0)m[i$jscomp$0]=0;options=-1}else{for(i$jscomp$0=0;i$jscomp$0<msg;++i$jscomp$0)m[i$jscomp$0]=options[i$jscomp$0+64];options=msg}}}return 0<=options};var gf0=
gf(),gf1=gf([1]),D=gf([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),D2=gf([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),X=gf([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),Y=gf([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),L=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]),I=gf([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139])}
//# sourceMappingURL=module$node_modules$node_forge$lib$ed25519.js.map
