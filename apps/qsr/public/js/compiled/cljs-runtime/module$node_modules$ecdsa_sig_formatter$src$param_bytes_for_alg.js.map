{
"version":3,
"file":"module$node_modules$ecdsa_sig_formatter$src$param_bytes_for_alg.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5HC,QAASA,aAAY,CAACC,OAAD,CAAU,CAE9B,OADeA,OACf,CADyB,CACzB,CAD8B,CAC9B,GADoD,CAAhB,GAAAA,OAAA,CAAU,CAAV,CAAoB,CAApB,CAAwB,CAC5D,CAF8B,CAK/B,IAAIC,iBAAmB,CACtBC,MAAOH,YAAA,CAAa,GAAb,CADe,CAEtBI,MAAOJ,YAAA,CAAa,GAAb,CAFe,CAGtBK,MAAOL,YAAA,CAAa,GAAb,CAHe,CAevBF,OAAAC,QAAA,CATAO,QAA4B,CAACC,GAAD,CAAM,CACjC,IAAIC,WAAaN,gBAAA,CAAiBK,GAAjB,CACjB,IAAIC,UAAJ,CACC,MAAOA,WAGR,MAAUC,MAAJ,CAAU,qBAAV,CAAkCF,GAAlC,CAAwC,GAAxC,CAAN,CANiC,CAd0F;",
"sources":["node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ecdsa_sig_formatter$src$param_bytes_for_alg\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getParamSize","keySize","paramBytesForAlg","ES256","ES384","ES512","getParamBytesForAlg","alg","paramBytes","Error"]
}
