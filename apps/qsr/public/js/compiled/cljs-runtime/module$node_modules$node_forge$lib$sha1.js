shadow$provide.module$node_modules$node_forge$lib$sha1=function(global,require,module,exports){function _update(s,w,bytes){for(var t,a,b,c,d,e,f,i,len=bytes.length();64<=len;){a=s.h0;b=s.h1;c=s.h2;d=s.h3;e=s.h4;for(i=0;16>i;++i)t=bytes.getInt32(),w[i]=t,f=d^b&(c^d),t=(a<<5|a>>>27)+f+e+1518500249+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;for(;20>i;++i)t=w[i-3]^w[i-8]^w[i-14]^w[i-16],t=t<<1|t>>>31,w[i]=t,f=d^b&(c^d),t=(a<<5|a>>>27)+f+e+1518500249+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;for(;32>i;++i)t=w[i-
3]^w[i-8]^w[i-14]^w[i-16],t=t<<1|t>>>31,w[i]=t,f=b^c^d,t=(a<<5|a>>>27)+f+e+1859775393+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;for(;40>i;++i)t=w[i-6]^w[i-16]^w[i-28]^w[i-32],t=t<<2|t>>>30,w[i]=t,f=b^c^d,t=(a<<5|a>>>27)+f+e+1859775393+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;for(;60>i;++i)t=w[i-6]^w[i-16]^w[i-28]^w[i-32],t=t<<2|t>>>30,w[i]=t,f=b&c|d&(b^c),t=(a<<5|a>>>27)+f+e+2400959708+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;for(;80>i;++i)t=w[i-6]^w[i-16]^w[i-28]^w[i-32],t=t<<2|t>>>30,w[i]=t,f=b^c^d,t=(a<<
5|a>>>27)+f+e+3395469782+t,e=d,d=c,c=(b<<30|b>>>2)>>>0,b=a,a=t;s.h0=s.h0+a|0;s.h1=s.h1+b|0;s.h2=s.h2+c|0;s.h3=s.h3+d|0;s.h4=s.h4+e|0;len-=64}}var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$md");require("module$node_modules$node_forge$lib$util");global=module.exports=forge.sha1=forge.sha1||{};forge.md.sha1=forge.md.algorithms.sha1=global;global.create=function(){_initialized||(_padding=String.fromCharCode(128),_padding+=forge.util.fillString(String.fromCharCode(0),
64),_initialized=!0);var _state=null,_input=forge.util.createBuffer(),_w=Array(80),md={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8,start:function(){md.messageLength=0;md.fullMessageLength=md.messageLength64=[];for(var int32s=md.messageLengthSize/4,i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_state={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520};return md}};md.start();md.update=
function(msg,encoding){"utf8"===encoding&&(msg=forge.util.encodeUtf8(msg));encoding=msg.length;md.messageLength+=encoding;encoding=[encoding/4294967296>>>0,encoding>>>0];for(var i=md.fullMessageLength.length-1;0<=i;--i)md.fullMessageLength[i]+=encoding[1],encoding[1]=encoding[0]+(md.fullMessageLength[i]/4294967296>>>0),md.fullMessageLength[i]>>>=0,encoding[0]=encoding[1]/4294967296>>>0;_input.putBytes(msg);_update(_state,_w,_input);(2048<_input.read||0===_input.length())&&_input.compact();return md};
md.digest=function(){var finalBlock=forge.util.createBuffer();finalBlock.putBytes(_input.bytes());finalBlock.putBytes(_padding.substr(0,md.blockLength-(md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize&md.blockLength-1)));for(var next,carry,bits=8*md.fullMessageLength[0],i=0;i<md.fullMessageLength.length-1;++i)next=8*md.fullMessageLength[i+1],carry=next/4294967296>>>0,bits+=carry,finalBlock.putInt32(bits>>>0),bits=next>>>0;finalBlock.putInt32(bits);next={h0:_state.h0,h1:_state.h1,
h2:_state.h2,h3:_state.h3,h4:_state.h4};_update(next,_w,finalBlock);finalBlock=forge.util.createBuffer();finalBlock.putInt32(next.h0);finalBlock.putInt32(next.h1);finalBlock.putInt32(next.h2);finalBlock.putInt32(next.h3);finalBlock.putInt32(next.h4);return finalBlock};return md};var _padding=null,_initialized=!1}
//# sourceMappingURL=module$node_modules$node_forge$lib$sha1.js.map
