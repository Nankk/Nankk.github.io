{
"version":3,
"file":"module$node_modules$googleapis_common$index.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/googleapis-common/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$googleapis_common$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n\"use strict\";\n// Copyright 2014-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\n// tslint:disable-next-line no-var-requires\nconst pkg = require('../../package.json');\n\n// Direct import ;-)\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isReadableStream(obj) {\n    return obj instanceof stream.Readable && typeof obj._read === 'function';\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    let params = parameters.params;\n    const options = Object.assign({}, parameters.options);\n    // Create a new params object so it can no longer be modified from outside\n    // code Also support global and per-client params, but allow them to be\n    // overriden per-request\n    const topOptions = parameters.context.google &&\n        parameters.context.google._options &&\n        parameters.context.google._options.params\n        ? parameters.context.google._options.params\n        : {};\n    params = Object.assign({}, // New base object\n    topOptions, // Global params\n    parameters.context._options.params, // Per-client params\n    params // API call params\n    );\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This mean that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    const resource = params.requestBody ? params.requestBody : params.resource;\n    if (!params.requestBody && params.resource) {\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth ||\n        parameters.context._options.auth ||\n        (parameters.context.google\n            ? parameters.context.google._options.auth\n            : null);\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        options.url = urlTemplate.parse(options.url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---\u003e 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path parameters from the params object so they do not end up in\n    // query\n    parameters.pathParams.forEach(param => {\n        delete params[param];\n        if (parameters.context &&\n            parameters.context._options &&\n            parameters.context._options.params) {\n            delete parameters.context._options.params[param];\n        }\n    });\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            // gaxios doesn't support multipart/related uploads, so it has to\n            // be implemented here.\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'Content-Type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'Content-Type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            const boundary = uuid.v4();\n            const finale = `--${boundary}--`;\n            const rStream = new stream.PassThrough({\n                flush(callback) {\n                    this.push('\\r\\n');\n                    this.push(finale);\n                    callback();\n                },\n            });\n            const pStream = new ProgressStream();\n            const isStream = isReadableStream(multipart[1].body);\n            headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n            for (const part of multipart) {\n                const preamble = `--${boundary}\\r\\nContent-Type: ${part['Content-Type']}\\r\\n\\r\\n`;\n                rStream.push(preamble);\n                if (typeof part.body === 'string') {\n                    rStream.push(part.body);\n                    rStream.push('\\r\\n');\n                }\n                else {\n                    // Gaxios does not natively support onUploadProgress in node.js.\n                    // Pipe through the pStream first to read the number of bytes read\n                    // for the purpose of tracking progress.\n                    pStream.on('progress', bytesRead => {\n                        if (options.onUploadProgress) {\n                            options.onUploadProgress({ bytesRead });\n                        }\n                    });\n                    part.body.pipe(pStream).pipe(rStream);\n                }\n            }\n            if (!isStream) {\n                rStream.push(finale);\n                rStream.push(null);\n            }\n            options.data = rStream;\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'Content-Type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!isBrowser()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        const directives = options.userAgentDirectives || [];\n        directives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = directives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call witht the global options configured at the API Context\n    // level, or at the global level.\n    const mergedOptions = extend(true, {}, parameters.context.google ? parameters.context.google._options : {}, parameters.context._options, options);\n    delete mergedOptions.auth; // is overridden by our auth code\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        return authClient.request(mergedOptions);\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(mergedOptions);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // tslint:disable-next-line: no-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!isBrowser()) {\n        const nodeVersion = process.version.replace(/^v/, '');\n        headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${nodeVersion}`;\n    }\n}\n//# sourceMappingURL=apirequest.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","isReadableStream","obj","stream","Readable","_read","getMissingParams","params","required","missing","forEach","param","undefined","push","length","createAPIRequestAsync","parameters","options","topOptions","media","resource","authClient","defaultMime","headers","missingParams","multipart","boundary","finale","rStream","pStream","isStream","part","preamble","directives","userAgent","mergedOptions","Object","assign","context","google","_options","requestBody","auth","body","populateAPIHeader","keys","key","slice","newKey","requiredParams","Error","join","url","urlTemplate","parse","expand","mediaUrl","paramsSerializer","options.paramsSerializer","qs","stringify","arrayFormat","pathParams","uploadType","JSON","mimeType","uuid","v4","PassThrough","flush","callback","ProgressStream","on","bytesRead","onUploadProgress","pipe","data","extend","window","userAgentDirectives","product","version","pkg","comment","map","d","line","validateStatus","options.validateStatus","status","retry","request","google_auth_library_1","DefaultTransporter","nodeVersion","process","replace","defineProperty","value","createAPIRequest","then","r","constructor","arguments","Transform","_transform","chunk","encoding","emit"]
}
