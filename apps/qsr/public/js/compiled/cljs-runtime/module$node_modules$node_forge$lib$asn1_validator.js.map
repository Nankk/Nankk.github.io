{
"version":3,
"file":"module$node_modules$node_forge$lib$asn1_validator.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAK1GC,MAAAA,CAAQH,OAAA,CAAQ,0CAAR,CACZA,QAAA,CAAQ,yCAAR,CACII,QAAAA,CAAOD,MAAAC,KAEXF,QAAAG,oBAAA,CAA8B,CAE5BC,KAAM,gBAFsB,CAG5BC,SAAUH,OAAAI,MAAAC,UAHkB,CAI5BC,KAAMN,OAAAO,KAAAC,SAJsB,CAK5BC,YAAa,CAAA,CALe,CAM5BC,MAAO,CAAC,CAENR,KAAM,wBAFA,CAGNC,SAAUH,OAAAI,MAAAC,UAHJ,CAINC,KAAMN,OAAAO,KAAAI,QAJA,CAKNF,YAAa,CAAA,CALP,CAMNG,QAAS,mBANH,CAAD;AAOJ,CAEDV,KAAM,oCAFL,CAGDC,SAAUH,OAAAI,MAAAC,UAHT,CAIDC,KAAMN,OAAAO,KAAAC,SAJL,CAKDC,YAAa,CAAA,CALZ,CAMDC,MAAO,CAAC,CACNR,KAAM,+BADA,CAENC,SAAUH,OAAAI,MAAAC,UAFJ,CAGNC,KAAMN,OAAAO,KAAAM,IAHA,CAINJ,YAAa,CAAA,CAJP,CAKNG,QAAS,eALH,CAAD,CANN,CAPI,CAoBJ,CAEDV,KAAM,gBAFL,CAGDC,SAAUH,OAAAI,MAAAC,UAHT,CAIDC,KAAMN,OAAAO,KAAAO,YAJL,CAKDL,YAAa,CAAA,CALZ,CAMDG,QAAS,YANR,CApBI,CANqB,CAoC9Bd,QAAAiB,mBAAA,CAA6B,CAC3Bb,KAAM,sBADqB,CAE3BC,SAAUH,OAAAI,MAAAC,UAFiB,CAG3BC,KAAMN,OAAAO,KAAAC,SAHqB;AAI3BC,YAAa,CAAA,CAJc,CAK3BO,YAAa,sBALc,CAM3BN,MAAO,CAAC,CACNR,KAAM,0CADA,CAENC,SAAUH,OAAAI,MAAAC,UAFJ,CAGNC,KAAMN,OAAAO,KAAAC,SAHA,CAINC,YAAa,CAAA,CAJP,CAKNC,MAAO,CAAC,CACNR,KAAM,+BADA,CAENC,SAAUH,OAAAI,MAAAC,UAFJ,CAGNC,KAAMN,OAAAO,KAAAM,IAHA,CAINJ,YAAa,CAAA,CAJP,CAKNG,QAAS,cALH,CAAD,CALD,CAAD,CAcP,CACET,SAAUH,OAAAI,MAAAC,UADZ,CAEEC,KAAMN,OAAAO,KAAAU,UAFR,CAGER,YAAa,CAAA,CAHf,CAIES,SAAU,CAAA,CAJZ,CAKEC,sBAAuB,kBALzB,CAdO,CANoB,CA7CiF;",
"sources":["node_modules/node-forge/lib/asn1-validator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$node_forge$lib$asn1_validator\"] = function(global,require,module,exports) {\n/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","forge","asn1","privateKeyValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue"]
}
