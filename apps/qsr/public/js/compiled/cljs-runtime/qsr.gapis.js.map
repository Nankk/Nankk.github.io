{"version":3,"sources":["qsr/gapis.cljs"],"mappings":";;;;;;;;;AAYA,AAAA,AAAA,AAAKA;AACL,AAAKC,AAAK,AAAAC,AAAM,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AAAP,AAA+C,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACD,AAAAA,AAAAA;AAAmCJ;AAG7F,AAAKM,AAAO,AAAMC,AAAY,AAAGC;AAArB,AACE,AAAAD,AAAc,AAAAE,AAAA,AAAA,AAAA,AAAA,AAA8BR;AAA9B,AAAAQ;;;AAC5B,AAAA,AAAMC,AAAuBC,AAASC,AAAMC;AAA5C,AACE,AAAMC,AAAO,AAAA,AAAA,AAAA,AAACC,AAAwBJ,AACRC;AACxBI,AAAIH;AAFV,AAGE,AAAG,AAAA,AAAIP,AAAkCQ,AAAOE;;AAGpD,AAAKC,AAAM,AAAMV,AAAY,AAAGW;AAArB,AACE,AAAAX,AAAc,AAAAY,AAAA,AAAA,AAAA,AAAA,AAA8BlB;AAA9B,AAAAkB;;;AAC3B,AAAA,AAAMC,AAAwBC,AAAOC,AAAUC,AAAOV;AAAtD,AACE,AAAMC,AAAO,AAAA,AAAA,AAAA,AAAA,AAACC,AAAY,AAAA,AAAA,AAASM,AACFC,AACFC;AACzBP,AAAIH;AACJW,AAAM,AAAGP;AAJf,AAKE,AAAGO,AAAWV,AAAOE;;AANzB","names":["qsr.gapis/scopes","qsr.gapis/auth","js/module$node_modules$google_auth_library$build$src$index.JWT","G__33985","qsr.embedded/credentials","G__33986","qsr.gapis/sheets","constructor","js/module$node_modules$google_sheets$index.sheets_v4","obj33988","qsr.gapis/get-values-from-sheet","sheet-id","range","callback-fn","params","cljs.core/clj->js","cbf","qsr.gapis/drive","js/module$node_modules$google_drive$index.drive_v3","obj33990","qsr.gapis/get-items-in-directory","dir-id","page-size","fields","files"],"sourcesContent":["(ns qsr.gapis\n  (:require\n   [\"google-auth-library\" :refer (JWT GoogleAuth)]\n   [\"google-drive\" :as google-drive]\n   [\"google-sheets\" :as google-sheets]\n   [re-frame.core :as re-frame]\n   [qsr.embedded :as embedded]\n   [qsr.subs :as subs]\n   [qsr.events :as events]\n   ))\n\n;; Authentication & api initialization\n(def scopes #js [\"https://www.googleapis.com/auth/drive\"])\n(def auth (JWT. (embedded/credentials :client_email) nil (embedded/credentials :private_key) scopes))\n\n; Sheets\n(def sheets (let [constructor (. google-sheets/sheets_v4 -Sheets)]\n              (constructor. (js-obj \"version\" \"v4\" \"auth\" auth))))\n(defn get-values-from-sheet [sheet-id range callback-fn]\n  (let [params (clj->js {:spreadsheetId sheet-id\n                         :range range})\n        cbf callback-fn]\n    (. (.. sheets -spreadsheets -values) get params cbf)))\n\n;; Drive\n(def drive (let [constructor (. google-drive/drive_v3 -Drive)]\n             (constructor. (js-obj \"version\" \"v3\" \"auth\" auth))))\n(defn get-items-in-directory [dir-id page-size fields callback-fn]\n  (let [params (clj->js {:q (str \"'\" dir-id \"' in parents\")\n                         :pageSize page-size\n                         :fields fields})\n        cbf callback-fn\n        files (. drive -files)]\n    (. files list params cbf))\n  0)\n\n"]}