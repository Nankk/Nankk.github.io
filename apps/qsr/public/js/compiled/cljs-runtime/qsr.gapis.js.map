{"version":3,"sources":["qsr/gapis.cljs"],"mappings":";;;;;;;;;AAYA,AAAA,AAAA,AAAKA;AACL,AAAKC,AAAK,AAAAC,AAAM,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AAAP,AAA+C,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACD,AAAAA,AAAAA;AAAmCJ;AAC7F,AAAKM,AAAO,AAAMC,AAAY,AAAGC;AAArB,AACE,AAAAD,AAAc,AAAAE,AAAA,AAAA,AAAA,AAAA,AAA8BR;AAA9B,AAAAQ;;;AAG5B,AAAA,AAAMC,AAAiBC,AAAIC;AAA3B,AACE,AAAMD;AAAN,AAAU,AAAOA;;AAAjB;;AACA,AAAME,AAAG,AAACC,AAAQ,AAAA,AAAIF;AAAtB,AACE,AAACG,AAAQ,AAAA,AAAkCF;;AAC3C,AAAAG,AAAA,AAAA,AAA4CH;AAA5C,AAAA,AAAAG,AAAAA,AAACC,AAAAA,AAAAA;;AACL,AAAA,AAAMC,AAAuBC,AAASC;AAAtC,AACE,AAAMC,AAAO,AAAA,AAAA,AAAA,AAACC,AAAwBH,AACRC;AACxBG,AAAIb;AAFV,AAGE,AAAG,AAAA,AAAIJ,AAAkCe,AAAOE;;AAGpD,AAAKC,AAAM,AAAMjB,AAAY,AAAGkB;AAArB,AACE,AAAAlB,AAAc,AAAAmB,AAAA,AAAA,AAAA,AAAA,AAA8BzB;AAA9B,AAAAyB;;;AAC3B,AAAA,AAAMC,AAAgBhB,AAAIC;AAA1B,AACE,AAAMD;AAAN,AAAU,AAAOA;;AAAjB;;AACA,AAAMiB,AAAM,AAAA,AAAIhB;AAAhB,AACE,AAAAiB,AAAA,AAAAC,AAAaF;AAAbG,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAAGC,AAAeD;;AADpB;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACE,AAAGC,AAAeD;;AADpB;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAEJ,AAAA,AAAMe,AAAwBC,AAAOC,AAAUC;AAA/C,AACE,AAAM1B,AAAO,AAAA,AAAA,AAAA,AAAA,AAACC,AAAY,AAAA,AAAA,AAASuB,AACFC,AACFC;AAEzBxB,AAAII;AACJC,AAAM,AAAGJ;AALf,AAME,AAAGI,AAAWP,AAAOE;;AAPzB","names":["qsr.gapis/scopes","qsr.gapis/auth","js/module$node_modules$google_auth_library$build$src$index.JWT","G__34529","qsr.embedded/credentials","G__34530","qsr.gapis/sheets","constructor","js/module$node_modules$google_sheets$index.sheets_v4","obj34532","qsr.gapis/sheets-callback","err","res","vs","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","G__34533","re-frame.core/dispatch-sync","qsr.gapis/get-values-from-sheet","sheet-id","range","params","cljs.core/clj->js","cbf","qsr.gapis/drive","js/module$node_modules$google_drive$index.drive_v3","obj34535","qsr.gapis/drive-callback","files","seq__34536","cljs.core/seq","chunk__34537","count__34538","i__34539","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","file","js/console","qsr.gapis/get-items-in-directory","dir-id","page-size","fields"],"sourcesContent":["(ns qsr.gapis\n  (:require\n   [\"google-auth-library\" :refer (JWT GoogleAuth)]\n   [\"google-drive\" :as google-drive]\n   [\"google-sheets\" :as google-sheets]\n   [re-frame.core :as re-frame]\n   [qsr.embedded :as embedded]\n   [qsr.subs :as subs]\n   [qsr.events :as events]\n   ))\n\n;; Authentication & api initialization\n(def scopes #js [\"https://www.googleapis.com/auth/drive\"])\n(def auth (JWT. (embedded/credentials :client_email) nil (embedded/credentials :private_key) scopes))\n(def sheets (let [constructor (. google-sheets/sheets_v4 -Sheets)]\n              (constructor. (js-obj \"version\" \"v4\" \"auth\" auth))))\n\n; Sheets\n(defn sheets-callback [err res]\n  (when err (throw err))\n  (let [vs (js->clj (.. res -data -values))]\n    (println (str \"sheets-callback received: \" vs))\n    (re-frame/dispatch-sync [::events/set-items vs])))\n(defn get-values-from-sheet [sheet-id range]\n  (let [params (clj->js {:spreadsheetId sheet-id\n                         :range range})\n        cbf sheets-callback]\n    (. (.. sheets -spreadsheets -values) get params cbf)))\n\n;; Drive\n(def drive (let [constructor (. google-drive/drive_v3 -Drive)]\n             (constructor. (js-obj \"version\" \"v3\" \"auth\" auth))))\n(defn drive-callback [err res]\n  (when err (throw err))\n  (let [files (.. res -data -files)]\n    (doseq [file files]\n      (. js/console log file))))\n(defn get-items-in-directory [dir-id page-size fields]\n  (let [params (clj->js {:q (str \"'\" dir-id \"' in parents\")\n                         :pageSize page-size\n                         :fields fields\n                         })\n        cbf drive-callback\n        files (. drive -files)]\n    (. files list params cbf))\n  0)\n\n"]}