shadow$provide.module$node_modules$google_auth_library$build$src$auth$computeclient=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var arrify=require("module$node_modules$arrify$index"),gcpMetadata=require("module$node_modules$gcp_metadata$build$src$index"),messages=require("module$node_modules$google_auth_library$build$src$messages"),oauth2client_1=require("module$node_modules$google_auth_library$build$src$auth$oauth2client");global=function(options){options=
void 0===options?{}:options;var $jscomp$super$this=oauth2client_1.OAuth2Client.call(this,options)||this;$jscomp$super$this.credentials={expiry_date:1,refresh_token:"compute-placeholder"};$jscomp$super$this.serviceAccountEmail=options.serviceAccountEmail||"default";$jscomp$super$this.scopes=arrify(options.scopes);return $jscomp$super$this};$jscomp.inherits(global,oauth2client_1.OAuth2Client);global.prototype.createScopedRequired=function(){messages.warn(messages.COMPUTE_CREATE_SCOPED_DEPRECATED);return!1};
global.prototype.refreshTokenNoCache=function(refreshToken){var $jscomp$async$this=this,tokenPath,data,instanceOptions,e,tokens;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:return tokenPath="service-accounts/"+$jscomp$async$this.serviceAccountEmail+"/token",$jscomp$generator$context.setCatchFinallyBlocks(2),instanceOptions={property:tokenPath},0<$jscomp$async$this.scopes.length&&(instanceOptions.params=
{scopes:$jscomp$async$this.scopes.join(",")}),$jscomp$generator$context.yield(gcpMetadata.instance(instanceOptions),4);case 4:data=$jscomp$generator$context.yieldResult;$jscomp$generator$context.leaveTryBlock(3);break;case 2:throw e=$jscomp$generator$context.enterCatchBlock(),e.message="Could not refresh access token: "+e.message,$jscomp$async$this.wrapError(e),e;case 3:return(tokens=data)&&data.expires_in&&(tokens.expiry_date=(new Date).getTime()+1E3*data.expires_in,delete tokens.expires_in),$jscomp$async$this.emit("tokens",
tokens),$jscomp$generator$context.return({tokens:tokens,res:null})}})};global.prototype.wrapError=function(e){var res=e.response;res&&res.status&&(e.code=res.status.toString(),403===res.status?e.message="A Forbidden error was returned while attempting to retrieve an access token for the Compute Engine built-in service account. This may be because the Compute Engine instance does not have the correct permission scopes specified: "+e.message:404===res.status&&(e.message="A Not Found error was returned while attempting to retrieve an accesstoken for the Compute Engine built-in service account. This may be because the Compute Engine instance does not have any permission scopes specified: "+
e.message))};exports.Compute=global}
//# sourceMappingURL=module$node_modules$google_auth_library$build$src$auth$computeclient.js.map
