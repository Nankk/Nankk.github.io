{
"version":3,
"file":"module$node_modules$node_forge$lib$pkcs7asn1.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/node-forge/lib/pkcs7asn1.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$node_forge$lib$pkcs7asn1\"] = function(global,require,module,exports) {\n/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","forge","asn1","p7v","pkcs7asn1","pkcs7","contentInfoValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","OID","capture","CONTEXT_SPECIFIC","optional","captureAsn1","encryptedContentInfoValidator","envelopedDataValidator","INTEGER","SET","concat","encryptedDataValidator","signedDataValidator","signerValidator","OCTETSTRING","recipientInfoValidator"]
}
