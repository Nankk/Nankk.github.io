{
"version":3,
"file":"module$node_modules$jwa$index.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/jwa/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jwa$index\"] = function(global,require,module,exports) {\nvar bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkIsPublicKey","key","Buffer","isBuffer","supportsKeyObjects","typeError","MSG_INVALID_VERIFIER_KEY","type","asymmetricKeyType","export","checkIsPrivateKey","MSG_INVALID_SIGNER_KEY","fromBase64","base64","replace","toBase64","base64url","toString","padding","length","i","template","args","slice","call","arguments","errMsg","util","format","bind","apply","TypeError","normalizeInput","thing","obj","JSON","stringify","createHmacSigner","bits","sign","secret","MSG_INVALID_SECRET","hmac","crypto","createHmac","sig","update","digest","createHmacVerifier","verify","signature","computedSig","bufferEqual","from","createKeySigner","privateKey","signer","createSign","createKeyVerifier","publicKey","verifier","createVerify","createPSSKeySigner","constants","RSA_PKCS1_PSS_PADDING","saltLength","RSA_PSS_SALTLEN_DIGEST","createPSSKeyVerifier","createECDSASigner","inner","formatEcdsa","derToJose","createECDSAVerifer","joseToDer","result","createNoneSigner","createNoneVerifier","createPublicKey","module.exports","algorithm","signerFactories","hs","rs","ps","es","none","verifierFactories","match","MSG_INVALID_ALGORITHM","algo","toLowerCase"]
}
