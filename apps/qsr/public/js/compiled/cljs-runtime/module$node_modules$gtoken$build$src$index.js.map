{
"version":3,
"file":"module$node_modules$gtoken$build$src$index.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/gtoken/build/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gtoken$build$src$index\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst mime = require(\"mime\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? util_1.promisify(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const mimeType = mime.getType(keyFile);\n        switch (mimeType) {\n            case 'application/json': {\n                // *.json file\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case 'application/x-x509-ca-cert': {\n                // *.pem file\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case 'application/x-pkcs12': {\n                // *.p12 file\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.hasExpired() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await gaxios_1.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && e.response.data ? e.response.data : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","fs","gaxios_1","jws","mime","util_1","readFile","promisify","ErrorWithCode","constructor","message","code","Error","getPem","GoogleToken","options","configure","hasExpired","now","getTime","Date","rawToken","expiresAt","getToken","callback","opts","undefined","assign","forceRefresh","cb","getTokenAsync","then","t","getCredentials","keyFile","mimeType","key","body","privateKey","clientEmail","getType","JSON","parse","private_key","client_email","Promise","resolve","creds","iss","ensureEmail","requestToken","revokeToken","revokeTokenAsync","url","accessToken","GOOGLE_REVOKE_TOKEN_URL","request","email","sub","scope","additionalClaims","join","iat","payload","signedJWT","r","e","desc","Math","floor","aud","GOOGLE_TOKEN_URL","exp","sign","header","alg","secret","method","data","grant_type","assertion","headers","responseType","expires_in","tokenExpires","response","error","error_description","access_token","idToken","id_token","tokenType","token_type","refreshToken","refresh_token"]
}
