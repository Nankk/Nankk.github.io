{
"version":3,
"file":"module$node_modules$google_auth_library$build$src$options.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBtHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAmBAH,QAAAI,SAAA,CAbAA,QAAiB,CAACC,OAAD,CAAU,CAMvB,IANuB,IAMvB,eAAA,OAAA,aAAA,CALeC,CACX,CAAEC,QAAS,KAAX,CAAkBC,SAAU,KAA5B,CADWF,CAEX,CAAEC,QAAS,MAAX,CAAmBC,SAAU,MAA7B,CAFWF,CAGX,CAAEC,QAAS,IAAX,CAAiBC,SAAU,QAA3B,CAHWF,CAKf,CANuB,CAMvB,iBAAA,cAAA,KAAA,EAAA,CAAA,CAAA,gBAAA,KAAA,CAAA,gBAAA,CAAA,cAAA,KAAA,EAAA,CACI,GADOG,gBACH,CADR,gBAAA,MACQ,CAAAJ,OAAA,CAAQI,gBAAAF,QAAR,CAAJ,CAEI,KAAUG,MAAJ,CADI,GACJ;AADQD,gBAAAF,QACR,CADI,qDACJ,CAD0EE,gBAAAD,SAC1E,CADI,+IACJ,CAAN,CATe,CAvB2F;",
"sources":["node_modules/google-auth-library/build/src/options.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_auth_library$build$src$options\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Accepts an options object passed from the user to the API.  In the\n// previous version of the API, it referred to a `Request` options object.\n// Now it refers to an Axiox Request Config object.  This is here to help\n// ensure users don't pass invalid options when they upgrade from 0.x to 1.x.\n// tslint:disable-next-line no-any\nfunction validate(options) {\n    const vpairs = [\n        { invalid: 'uri', expected: 'url' },\n        { invalid: 'json', expected: 'data' },\n        { invalid: 'qs', expected: 'params' },\n    ];\n    for (const pair of vpairs) {\n        if (options[pair.invalid]) {\n            const e = `'${pair.invalid}' is not a valid configuration option. Please use '${pair.expected}' instead. This library is using Axios for requests. Please see https://github.com/axios/axios to learn more about the valid request options.`;\n            throw new Error(e);\n        }\n    }\n}\nexports.validate = validate;\n//# sourceMappingURL=options.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","validate","options","vpairs","invalid","expected","pair","Error"]
}
