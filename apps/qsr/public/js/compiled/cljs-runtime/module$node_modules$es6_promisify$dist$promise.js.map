{
"version":3,
"file":"module$node_modules$es6_promisify$dist$promise.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI3GD,MAAAC,QAAA,CAAiB,QAAS,EAAG,CAIzB,IAAIC,aAAe,IAAK,EAQpBA,aAAA,CADWC,IAAAA,EAAf,GAAIL,MAAJ,CACmBA,MADnB,CAEsBK,IAAAA,EAAf,GAAIC,MAAJ,EAA4BA,MAAAC,SAA5B,CACYD,MADZ,CAGYE,IA+CnB,OAxCwB,SAAS,EAAG,CAGhC,GAAI,CAACJ,YAAAK,eAAA,CAA4B,SAA5B,CAAL,CACI,MAAO,CAAA,CAIX,KAAIC,EAAIN,YAAAO,QAQR,OAJKD,EAAAD,eAAA,CAAiB,SAAjB,CAIL,EAJqCC,CAAAD,eAAA,CAAiB,QAAjB,CAIrC,EAAKC,CAAAD,eAAA,CAAiB,KAAjB,CAAL,EAAiCC,CAAAD,eAAA,CAAiB,MAAjB,CAAjC,CAMO,QAAS,EAAG,CAEf,IAAIG,QAAU,IAAK,EAEXC,KAAIT,YAAAO,QAAJE,CAAyB,QAAS,CAACC,CAAD,CAAI,CAC1CF,OAAA;AAAUE,CADgC,CAAtCD,CAKJ,OA/CY,UA+CZ,GA/CD,MA+CmBD,QATP,CAAZ,EANP,CACW,CAAA,CAjBqB,CAAZG,EAwCxB,CACWX,YAAAO,QADX,CAKOV,OAAA,CAAQ,kDAAR,CAAAU,QApEkB,CAAZ,EAJ0F;",
"sources":["node_modules/es6-promisify/dist/promise.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$es6_promisify$dist$promise\"] = function(global,require,module,exports) {\n\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();\n};"],
"names":["shadow$provide","global","require","module","exports","globalObject","undefined","window","document","self","hasOwnProperty","P","Promise","resolve","p","r","hasPromiseSupport"]
}
