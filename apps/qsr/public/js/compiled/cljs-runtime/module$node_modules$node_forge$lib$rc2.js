shadow$provide.module$node_modules$node_forge$lib$rc2=function(global,require,module,exports){var forge=require("module$node_modules$node_forge$lib$forge");require("module$node_modules$node_forge$lib$util");var piTable=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,
241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,
226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],s=[1,2,3,5];module.exports=forge.rc2=forge.rc2||{};forge.rc2.expandKey=function(key,effKeyBits){"string"===typeof key&&(key=forge.util.createBuffer(key));effKeyBits=effKeyBits||128;var L=key;key=key.length();var T1=effKeyBits;effKeyBits=Math.ceil(T1/8);T1=255>>(T1&7);var i;for(i=key;128>i;i++)L.putByte(piTable[L.at(i-1)+L.at(i-key)&255]);L.setAt(128-effKeyBits,piTable[L.at(128-
effKeyBits)&T1]);for(i=127-effKeyBits;0<=i;i--)L.setAt(i,piTable[L.at(i+1)^L.at(i+effKeyBits)]);return L};var createCipher=function(key,bits$jscomp$0,encrypt){var _finish=!1,_input=null,_output=null,_iv=null,i,j,K=[];key=forge.rc2.expandKey(key,bits$jscomp$0);for(i=0;64>i;i++)K.push(key.getInt16Le());if(encrypt){var mixRound=function(R){for(i=0;4>i;i++){R[i]+=K[j]+(R[(i+3)%4]&R[(i+2)%4])+(~R[(i+3)%4]&R[(i+1)%4]);var word=R[i],bits=s[i];R[i]=word<<bits&65535|(word&65535)>>16-bits;j++}};var mashRound=
function(R){for(i=0;4>i;i++)R[i]+=K[R[(i+3)%4]&63]}}else mixRound=function(R){for(i=3;0<=i;i--){var word=R[i],bits=s[i];R[i]=(word&65535)>>bits|word<<16-bits&65535;R[i]-=K[j]+(R[(i+3)%4]&R[(i+2)%4])+(~R[(i+3)%4]&R[(i+1)%4]);j--}},mashRound=function(R){for(i=3;0<=i;i--)R[i]-=K[R[(i+3)%4]&63]};var cipher=null;return cipher={start:function(iv,output){iv&&"string"===typeof iv&&(iv=forge.util.createBuffer(iv));_finish=!1;_input=forge.util.createBuffer();_output=output||new forge.util.createBuffer;_iv=
iv;cipher.output=_output},update:function(input){for(_finish||_input.putBuffer(input);8<=_input.length();){input=[[5,mixRound],[1,mashRound],[6,mixRound],[1,mashRound],[5,mixRound]];var R=[];for(i=0;4>i;i++){var val=_input.getInt16Le();null!==_iv&&(encrypt?val^=_iv.getInt16Le():_iv.putInt16Le(val));R.push(val&65535)}j=encrypt?0:63;for(val=0;val<input.length;val++)for(var ctr=0;ctr<input[val][0];ctr++)input[val][1](R);for(i=0;4>i;i++)null!==_iv&&(encrypt?_iv.putInt16Le(R[i]):R[i]^=_iv.getInt16Le()),
_output.putInt16Le(R[i])}},finish:function(pad){var rval=!0;if(encrypt)if(pad)rval=pad(8,_input,!encrypt);else{var padding=8===_input.length()?8:8-_input.length();_input.fillWithByte(padding,padding)}rval&&(_finish=!0,cipher.update());!encrypt&&(rval=0===_input.length())&&(pad?rval=pad(8,_output,!encrypt):(pad=_output.length(),padding=_output.at(pad-1),padding>pad?rval=!1:_output.truncate(padding)));return rval}}};forge.rc2.startEncrypting=function(key,iv,output){key=forge.rc2.createEncryptionCipher(key,
128);key.start(iv,output);return key};forge.rc2.createEncryptionCipher=function(key,bits){return createCipher(key,bits,!0)};forge.rc2.startDecrypting=function(key,iv,output){key=forge.rc2.createDecryptionCipher(key,128);key.start(iv,output);return key};forge.rc2.createDecryptionCipher=function(key,bits){return createCipher(key,bits,!1)}}
//# sourceMappingURL=module$node_modules$node_forge$lib$rc2.js.map
