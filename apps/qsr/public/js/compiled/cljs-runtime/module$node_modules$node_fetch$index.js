shadow$provide.module$node_modules$node_fetch$index=function(global,require,module,exports){function Fetch(url,opts){if(!(this instanceof Fetch))return new Fetch(url,opts);if(!Fetch.Promise)throw Error("native promise missing, set Fetch.Promise to your favorite alternative");Body.Promise=Fetch.Promise;var self=this;return new Fetch.Promise(function(resolve,reject){var options=new Request(url,opts);if(!options.protocol||!options.hostname)throw Error("only absolute urls are supported");if("http:"!==
options.protocol&&"https:"!==options.protocol)throw Error("only http(s) protocols are supported");var send="https:"===options.protocol?https.request:http.request;var headers$jscomp$0=new Headers(options.headers);options.compress&&headers$jscomp$0.set("accept-encoding","gzip,deflate");headers$jscomp$0.has("user-agent")||headers$jscomp$0.set("user-agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)");headers$jscomp$0.has("connection")||options.agent||headers$jscomp$0.set("connection","close");
headers$jscomp$0.has("accept")||headers$jscomp$0.set("accept","*/*");!headers$jscomp$0.has("content-type")&&options.body&&"function"===typeof options.body.getBoundary&&headers$jscomp$0.set("content-type","multipart/form-data; boundary\x3d"+options.body.getBoundary());!headers$jscomp$0.has("content-length")&&/post|put|patch|delete/i.test(options.method)&&("string"===typeof options.body?headers$jscomp$0.set("content-length",Buffer.byteLength(options.body)):options.body&&"function"===typeof options.body.getLengthSync?
options.body._lengthRetrievers&&0==options.body._lengthRetrievers.length?headers$jscomp$0.set("content-length",options.body.getLengthSync().toString()):options.body.hasKnownLength&&options.body.hasKnownLength()&&headers$jscomp$0.set("content-length",options.body.getLengthSync().toString()):(void 0===options.body||null===options.body)&&headers$jscomp$0.set("content-length","0"));options.headers=headers$jscomp$0.raw();options.headers.host&&(options.headers.host=options.headers.host[0]);var req=send(options),
reqTimeout;if(options.timeout)req.once("socket",function(socket){reqTimeout=setTimeout(function(){req.abort();reject(new FetchError("network timeout at: "+options.url,"request-timeout"))},options.timeout)});req.on("error",function(err){clearTimeout(reqTimeout);reject(new FetchError("request to "+options.url+" failed, reason: "+err.message,"system",err))});req.on("response",function(res){clearTimeout(reqTimeout);if(self.isRedirect(res.statusCode)&&"manual"!==options.redirect)if("error"===options.redirect)reject(new FetchError("redirect mode is set to error: "+
options.url,"no-redirect"));else if(options.counter>=options.follow)reject(new FetchError("maximum redirect reached at: "+options.url,"max-redirect"));else if(res.headers.location){if(303===res.statusCode||(301===res.statusCode||302===res.statusCode)&&"POST"===options.method)options.method="GET",delete options.body,delete options.headers["content-length"];options.counter++;resolve(Fetch(resolve_url(options.url,res.headers.location),options))}else reject(new FetchError("redirect location header missing at: "+
options.url,"invalid-redirect"));else{var headers=new Headers(res.headers);"manual"===options.redirect&&headers.has("location")&&headers.set("location",resolve_url(options.url,headers.get("location")));var body=res.pipe(new stream.PassThrough),response_options={url:options.url,status:res.statusCode,statusText:res.statusMessage,headers:headers,size:options.size,timeout:options.timeout};if(options.compress&&"HEAD"!==options.method&&headers.has("content-encoding")&&204!==res.statusCode&&304!==res.statusCode)if(headers=
headers.get("content-encoding"),"gzip"==headers||"x-gzip"==headers){body=body.pipe(zlib.createGunzip());var output=new Response(body,response_options);resolve(output)}else if("deflate"==headers||"x-deflate"==headers)res.pipe(new stream.PassThrough).once("data",function(chunk){body=8===(chunk[0]&15)?body.pipe(zlib.createInflate()):body.pipe(zlib.createInflateRaw());output=new Response(body,response_options);resolve(output)});else output=new Response(body,response_options),resolve(output);else output=
new Response(body,response_options),resolve(output)}});"string"===typeof options.body?(req.write(options.body),req.end()):options.body instanceof Buffer?(req.write(options.body),req.end()):"object"===typeof options.body&&options.body.pipe?options.body.pipe(req):("object"===typeof options.body&&req.write(options.body.toString()),req.end())})}var Buffer=require("module$node_modules$buffer$index").Buffer;require("module$node_modules$url$url");var resolve_url=require("module$node_modules$url$url").resolve,
http=require("module$node_modules$stream_http$index"),https=require("module$node_modules$https_browserify$index"),zlib=require("module$node_modules$browserify_zlib$lib$index"),stream=require("module$node_modules$stream_browserify$index"),Body=require("module$node_modules$node_fetch$lib$body"),Response=require("module$node_modules$node_fetch$lib$response"),Headers=require("module$node_modules$node_fetch$lib$headers"),Request=require("module$node_modules$node_fetch$lib$request"),FetchError=require("module$node_modules$node_fetch$lib$fetch_error");
module.exports=Fetch;module.exports.default=module.exports;Fetch.prototype.isRedirect=function(code){return 301===code||302===code||303===code||307===code||308===code};Fetch.Promise=global.Promise;Fetch.Response=Response;Fetch.Headers=Headers;Fetch.Request=Request}
//# sourceMappingURL=module$node_modules$node_fetch$index.js.map
