{"version":3,"sources":["qsr/views.cljs"],"mappings":"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","names":["qsr.views/on-item-click","item","G__32306","re-frame.core/dispatch-sync","api-url","req-url","G__32308","c__32135__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__32136__auto__","switch__32112__auto__","state_32311","state_val_32312","inst_32309","cljs.core.async.impl.ioc-helpers/return-chan","statearr-32313","state-machine__32113__auto__","ret-value__32114__auto__","result__32115__auto__","cljs.core/keyword-identical?","e32314","js/Object","ex__32116__auto__","statearr-32315","cljs.core.async.impl.ioc-helpers/process-exception","state__32137__auto__","statearr-32316","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/get","qsr.views/item-card","G__32318","G__32319","G__32320","G__32322","G__32324","qsr.views/item-list-row","pair","cljs.core/first","cljs.core/second","qsr.views/item-list","cljs.core/deref","items","G__32325","re-frame.core/subscribe","pairs","queue","item-pairs","cljs.core/not-empty","new-queue","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/count","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.subvec.cljs$core$IFn$_invoke$arity$2","iter__4523__auto__","s__32327","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__32329","cljs.core/chunk-buffer","i__32328","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__32326","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","qsr.views/greeting","hr-now","js/Date","qsr.views/main-panel","refresh-fn","qsr.gapis/get-values-from-sheet","cljs.core/chunk-first"],"sourcesContent":["(ns qsr.views\n  (:require\n   [re-frame.core :as re-frame]\n   [reagent.core :as reagent]\n   [qsr.subs :as subs]\n   [qsr.events :as events]\n   [qsr.db :as db]\n   [clojure.string :as str]\n   [qsr.gapis :as gapis]\n   [cljs-http.client :as http]\n   [cljs.core.async :as async :refer [go >! <!]]))\n\n;; Item panel ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defn on-item-click [item]\n  (re-frame/dispatch-sync [::events/select-item item])\n  (let [api-url \"https://vrcpanorama-get-image.herokuapp.com/index.php\"\n        req-url (str api-url \"?type=move&page=\" (item :index))]\n    (go (http/get req-url))))\n\n(defn item-card [item]\n  [:button {:class \"transparent\" :on-click #(on-item-click item)}\n   [:div {:class (str \"card hoverable\" (when (item :selected?) \" selected\"))}\n    [:img {:class \"card-img-top\" :style {:width \"100%\" :object-fit \"cover\"} :src (item :url) :alt (item :name)}]\n    [:div {:class \"card-body\"}\n     [:p\n      (str \"Index: \" (item :index))\n      [:br]\n      (str \"Drive ID:\" (item :id))]]]])\n\n(defn item-list-row [pair] ; TODO: change to accept arbitrary number of items\n  [:div.row\n   [:div {:class \"col-md-6\"} [item-card (first pair)]]\n   (when (some? (second pair))\n     [:div {:class \"col-md-6\"} [item-card (second pair)]])])\n\n(defn item-list []\n  [:div\n   (let [items @(re-frame/subscribe [::subs/items])\n         pairs (loop [queue items\n                      item-pairs []]\n                 (if (not-empty queue)\n                   (let [new-queue (if (= (count queue) 1)\n                                     (conj queue nil)\n                                     (subvec queue 2))]\n                     (recur (if (= (count queue) 1)\n                              []\n                              (subvec queue 2))\n                            (conj item-pairs [(first queue) (second queue)])))\n                   item-pairs))]\n     (for [pair pairs]\n       ^{:key pair} [item-list-row pair]))])\n\n;; Main ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defn greeting []\n  (let [hr-now (. (js/Date.) getHours)]\n    (cond\n      (< hr-now 5) \"Hi, hard-worker ;-)\"\n      (= hr-now 5) \"The sun is raising...\"\n      (< 5 hr-now 11) \"Good morning Sir/Ma'am, how are you doing?\"\n      (= hr-now 11) \"Lunch is around the corner.\"\n      (< 11 hr-now 18) \"Hello Sir/Ma'am, how are you doing?\"\n      (= hr-now 18) \"Shall we take a break?\"\n      (< 18 hr-now 24) \"Good evening, Sir/Ma'am.\"\n      (= hr-now 24) \"You'd better go to bed for tommorow, right?\")))\n(defn main-panel []\n  (let [refresh-fn #(gapis/get-values-from-sheet\n                     \"1vkNkO71CfPhft-gRYFkvTwtg23-O75Dyaq0IIiF_-Dg\"\n                     \"Default!A:A\")]\n    (refresh-fn)\n    [:div.container\n     [:h3 (greeting)]\n     [:button {:class \"btn btn-primary\"\n               :on-click refresh-fn}\n      [:i {:class \"fas fa-sync-alt\" :aria-hidden true}]\n      \" Sync\"]\n     [item-list]]))\n\n\n\n"]}