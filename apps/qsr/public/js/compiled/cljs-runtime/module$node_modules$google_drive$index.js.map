{
"version":3,
"file":"module$node_modules$google_drive$index.js",
"lineCount":70,
"mappings":"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",
"sources":["node_modules/google-drive/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_drive$index\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst googleapis_common_1 = require(\"googleapis-common\");\n// tslint:disable: no-any\n// tslint:disable: class-name\n// tslint:disable: variable-name\n// tslint:disable: jsdoc-format\n// tslint:disable: no-namespace\nvar drive_v3;\n(function (drive_v3) {\n    /**\n     * Drive API\n     *\n     * Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.\n     *\n     * @example\n     * const {google} = require('googleapis');\n     * const drive = google.drive('v3');\n     *\n     * @namespace drive\n     * @type {Function}\n     * @version v3\n     * @variation v3\n     * @param {object=} options Options for Drive\n     */\n    class Drive {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.about = new Resource$About(this.context);\n            this.changes = new Resource$Changes(this.context);\n            this.channels = new Resource$Channels(this.context);\n            this.comments = new Resource$Comments(this.context);\n            this.drives = new Resource$Drives(this.context);\n            this.files = new Resource$Files(this.context);\n            this.permissions = new Resource$Permissions(this.context);\n            this.replies = new Resource$Replies(this.context);\n            this.revisions = new Resource$Revisions(this.context);\n            this.teamdrives = new Resource$Teamdrives(this.context);\n        }\n    }\n    drive_v3.Drive = Drive;\n    class Resource$About {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/about').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$About = Resource$About;\n    class Resource$Changes {\n        constructor(context) {\n            this.context = context;\n        }\n        getStartPageToken(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/changes/startPageToken').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/changes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['pageToken'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/changes/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['pageToken'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Changes = Resource$Changes;\n    class Resource$Channels {\n        constructor(context) {\n            this.context = context;\n        }\n        stop(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/channels/stop').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Channels = Resource$Channels;\n    class Resource$Comments {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments/{commentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId'],\n                pathParams: ['commentId', 'fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments/{commentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId'],\n                pathParams: ['commentId', 'fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments/{commentId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId'],\n                pathParams: ['commentId', 'fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Comments = Resource$Comments;\n    class Resource$Drives {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['requestId'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives/{driveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['driveId'],\n                pathParams: ['driveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives/{driveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['driveId'],\n                pathParams: ['driveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        hide(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives/{driveId}/hide').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['driveId'],\n                pathParams: ['driveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        unhide(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives/{driveId}/unhide').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['driveId'],\n                pathParams: ['driveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/drives/{driveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['driveId'],\n                pathParams: ['driveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Drives = Resource$Drives;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        copy(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/copy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/drive/v3/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        emptyTrash(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/trash').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        export(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/export').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'mimeType'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        generateIds(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/generateIds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                mediaUrl: (rootUrl + '/upload/drive/v3/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        watch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/watch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Files = Resource$Files;\n    class Resource$Permissions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/permissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/permissions/{permissionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'permissionId'],\n                pathParams: ['fileId', 'permissionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/permissions/{permissionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'permissionId'],\n                pathParams: ['fileId', 'permissionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/permissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/permissions/{permissionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'permissionId'],\n                pathParams: ['fileId', 'permissionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Permissions = Resource$Permissions;\n    class Resource$Replies {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments/{commentId}/replies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId'],\n                pathParams: ['commentId', 'fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/drive/v3/files/{fileId}/comments/{commentId}/replies/{replyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId', 'replyId'],\n                pathParams: ['commentId', 'fileId', 'replyId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/drive/v3/files/{fileId}/comments/{commentId}/replies/{replyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId', 'replyId'],\n                pathParams: ['commentId', 'fileId', 'replyId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/comments/{commentId}/replies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId'],\n                pathParams: ['commentId', 'fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/drive/v3/files/{fileId}/comments/{commentId}/replies/{replyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'commentId', 'replyId'],\n                pathParams: ['commentId', 'fileId', 'replyId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Replies = Resource$Replies;\n    class Resource$Revisions {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/revisions/{revisionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'revisionId'],\n                pathParams: ['fileId', 'revisionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/revisions/{revisionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'revisionId'],\n                pathParams: ['fileId', 'revisionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/revisions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['fileId'],\n                pathParams: ['fileId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/files/{fileId}/revisions/{revisionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['fileId', 'revisionId'],\n                pathParams: ['fileId', 'revisionId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Revisions = Resource$Revisions;\n    class Resource$Teamdrives {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/teamdrives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['requestId'],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/teamdrives/{teamDriveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['teamDriveId'],\n                pathParams: ['teamDriveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/teamdrives/{teamDriveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['teamDriveId'],\n                pathParams: ['teamDriveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/teamdrives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://www.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/drive/v3/teamdrives/{teamDriveId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['teamDriveId'],\n                pathParams: ['teamDriveId'],\n                context: this.context,\n            };\n            if (callback) {\n                googleapis_common_1.createAPIRequest(parameters, callback);\n            }\n            else {\n                return googleapis_common_1.createAPIRequest(parameters);\n            }\n        }\n    }\n    drive_v3.Resource$Teamdrives = Resource$Teamdrives;\n})(drive_v3 = exports.drive_v3 || (exports.drive_v3 = {}));\n//# sourceMappingURL=v3.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","googleapis_common_1","drive_v3","Drive","constructor","options","google","context","_options","about","Resource$About","changes","Resource$Changes","channels","Resource$Channels","comments","Resource$Comments","drives","Resource$Drives","files","Resource$Files","permissions","Resource$Permissions","replies","Resource$Replies","revisions","Resource$Revisions","teamdrives","Resource$Teamdrives","get","paramsOrCallback","optionsOrCallback","callback","params","parameters","assign","url","replace","rootUrl","method","requiredParams","pathParams","createAPIRequest","getStartPageToken","list","watch","stop","create","delete","update","hide","unhide","copy","mediaUrl","emptyTrash","export","generateIds"]
}
